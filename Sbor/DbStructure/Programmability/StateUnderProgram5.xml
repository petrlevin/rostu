<?xml version="1.0" encoding="utf-8"?>
<NewDataSet>
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="ref.Programmability" msdata:UseCurrentLocale="true">
      <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="ref.Programmability">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" type="xs:int" />
                <xs:element name="Schema">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="50" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="Name">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="100" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="CreateCommand">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="2147483647" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="idProgrammabilityType" type="xs:unsignedByte" />
                <xs:element name="Order" minOccurs="0">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="5" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="idProject" type="xs:int" minOccurs="0" />
                <xs:element name="isDisabled" type="xs:boolean" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">
        <xs:selector xpath=".//ref.Programmability" />
        <xs:field xpath="id" />
      </xs:unique>
    </xs:element>
  </xs:schema>
  <ref.Programmability>
    <id>-1275068394</id>
    <Schema>sbor</Schema>
    <Name>StateUnderProgram5</Name>
    <CreateCommand>CREATE FUNCTION [sbor].[StateUnderProgram5] (@id int,@DocType VARCHAR(128),@IDMainGoal int)
RETURNS TABLE
AS
RETURN
(
	
--построенна на основе сноске5 ПФ ПОДПРОГРАММА ГОСУДАРСТВЕННОЙ ПРОГРАММЫ

WITH Q (id,idParent,caption,[level]) AS 
		(
		SELECT TPSG.id,TPSG.idParent,SG.caption ,CAST(ROW_NUMBER() OVER(PARTITION BY  SG.idParent order by SG.caption) AS VARCHAR(MAX)) --AS orderliness 
		FROM	ref.SystemGoal as SG 
				INNER JOIN tp.StateProgram_SystemGoalElement AS TPSG -- ТЧ «Элементы СЦ»
					ON TPSG.idSystemGoal = SG.id
				INNER JOIN doc.StateProgram AS SP
					ON  SP.id = TPSG.idOwner 
				INNER JOIN ref.DocType AS DT --поле «Тип утверждающего документа»  Подпрограмма ГП
					ON DT.id = SG.idDocType_CommitDoc
		WHERE	TPSG.idParent = @IDMainGoal--IS NULL --для получения корневых елемнтов дерева
				AND TPSG.IsMainGoal = 0 --у которых флаг «Основная цель» = Ложь
				AND SP.id = @id
				AND DT.Caption = @DocType
		UNION ALL 
		SELECT TPSG.id,TPSG.idParent,SG.caption,CAST([level] AS VARCHAR(MAX))+'.'+CAST((ROW_NUMBER() OVER(PARTITION BY  SG.idParent order by SG.caption)) AS VARCHAR(MAX)) --
		FROM	ref.SystemGoal AS SG
				INNER JOIN tp.StateProgram_SystemGoalElement AS TPSG
					ON TPSG.idSystemGoal = SG.id
				INNER JOIN doc.StateProgram AS SP
					ON  SP.id = TPSG.idOwner
				INNER JOIN ref.DocType AS DT
					ON DT.id = SG.idDocType_CommitDoc 
				--INNER JOIN ref.ElementTypeSystemGoal AS ETSG
				--	ON ETSG.id = TPSG.idElementTypeSystemGoal 
			INNER JOIN Q 
			ON TPSG.idParent = Q.id
		--WHERE TPSG.IsMainGoal IS NULL AND ETSG.Caption = @Type 
		)
		
		
SELECT ([level] +'  '+ caption)	AS NumberName	 
FROM Q 

);</CreateCommand>
    <idProgrammabilityType>2</idProgrammabilityType>
    <Order></Order>
    <idProject>500</idProject>
    <isDisabled>false</isDisabled>
  </ref.Programmability>
</NewDataSet>