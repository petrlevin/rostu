//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsCBA3999322A958E63445E76D926B925C0F23FEB6A20F50B4C66DD9026D6ED17E))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsCBA3999322A958E63445E76D926B925C0F23FEB6A20F50B4C66DD9026D6ED17E : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsCBA3999322A958E63445E76D926B925C0F23FEB6A20F50B4C66DD9026D6ED17E()
        {
            this.EdmEntityContainerName = "DataContext";
            this.StoreEntityContainerName = "CodeFirstDatabase";
            this.HashOverMappingClosure = "d5477d075ae28a19c63e2fc57322b3be47bbe74fcfbff726f4bd657c5bba6e0c";
            this.HashOverAllExtentViews = "cd91d1bad4b5fd6d8a556a397b6f66ae5cd89766dff5b8a1db98b2274e582795";
            this.ViewCount = 737;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            if ((index == 121))
            {
                return GetView121();
            }
            if ((index == 122))
            {
                return GetView122();
            }
            if ((index == 123))
            {
                return GetView123();
            }
            if ((index == 124))
            {
                return GetView124();
            }
            if ((index == 125))
            {
                return GetView125();
            }
            if ((index == 126))
            {
                return GetView126();
            }
            if ((index == 127))
            {
                return GetView127();
            }
            if ((index == 128))
            {
                return GetView128();
            }
            if ((index == 129))
            {
                return GetView129();
            }
            if ((index == 130))
            {
                return GetView130();
            }
            if ((index == 131))
            {
                return GetView131();
            }
            if ((index == 132))
            {
                return GetView132();
            }
            if ((index == 133))
            {
                return GetView133();
            }
            if ((index == 134))
            {
                return GetView134();
            }
            if ((index == 135))
            {
                return GetView135();
            }
            if ((index == 136))
            {
                return GetView136();
            }
            if ((index == 137))
            {
                return GetView137();
            }
            if ((index == 138))
            {
                return GetView138();
            }
            if ((index == 139))
            {
                return GetView139();
            }
            if ((index == 140))
            {
                return GetView140();
            }
            if ((index == 141))
            {
                return GetView141();
            }
            if ((index == 142))
            {
                return GetView142();
            }
            if ((index == 143))
            {
                return GetView143();
            }
            if ((index == 144))
            {
                return GetView144();
            }
            if ((index == 145))
            {
                return GetView145();
            }
            if ((index == 146))
            {
                return GetView146();
            }
            if ((index == 147))
            {
                return GetView147();
            }
            if ((index == 148))
            {
                return GetView148();
            }
            if ((index == 149))
            {
                return GetView149();
            }
            if ((index == 150))
            {
                return GetView150();
            }
            if ((index == 151))
            {
                return GetView151();
            }
            if ((index == 152))
            {
                return GetView152();
            }
            if ((index == 153))
            {
                return GetView153();
            }
            if ((index == 154))
            {
                return GetView154();
            }
            if ((index == 155))
            {
                return GetView155();
            }
            if ((index == 156))
            {
                return GetView156();
            }
            if ((index == 157))
            {
                return GetView157();
            }
            if ((index == 158))
            {
                return GetView158();
            }
            if ((index == 159))
            {
                return GetView159();
            }
            if ((index == 160))
            {
                return GetView160();
            }
            if ((index == 161))
            {
                return GetView161();
            }
            if ((index == 162))
            {
                return GetView162();
            }
            if ((index == 163))
            {
                return GetView163();
            }
            if ((index == 164))
            {
                return GetView164();
            }
            if ((index == 165))
            {
                return GetView165();
            }
            if ((index == 166))
            {
                return GetView166();
            }
            if ((index == 167))
            {
                return GetView167();
            }
            if ((index == 168))
            {
                return GetView168();
            }
            if ((index == 169))
            {
                return GetView169();
            }
            if ((index == 170))
            {
                return GetView170();
            }
            if ((index == 171))
            {
                return GetView171();
            }
            if ((index == 172))
            {
                return GetView172();
            }
            if ((index == 173))
            {
                return GetView173();
            }
            if ((index == 174))
            {
                return GetView174();
            }
            if ((index == 175))
            {
                return GetView175();
            }
            if ((index == 176))
            {
                return GetView176();
            }
            if ((index == 177))
            {
                return GetView177();
            }
            if ((index == 178))
            {
                return GetView178();
            }
            if ((index == 179))
            {
                return GetView179();
            }
            if ((index == 180))
            {
                return GetView180();
            }
            if ((index == 181))
            {
                return GetView181();
            }
            if ((index == 182))
            {
                return GetView182();
            }
            if ((index == 183))
            {
                return GetView183();
            }
            if ((index == 184))
            {
                return GetView184();
            }
            if ((index == 185))
            {
                return GetView185();
            }
            if ((index == 186))
            {
                return GetView186();
            }
            if ((index == 187))
            {
                return GetView187();
            }
            if ((index == 188))
            {
                return GetView188();
            }
            if ((index == 189))
            {
                return GetView189();
            }
            if ((index == 190))
            {
                return GetView190();
            }
            if ((index == 191))
            {
                return GetView191();
            }
            if ((index == 192))
            {
                return GetView192();
            }
            if ((index == 193))
            {
                return GetView193();
            }
            if ((index == 194))
            {
                return GetView194();
            }
            if ((index == 195))
            {
                return GetView195();
            }
            if ((index == 196))
            {
                return GetView196();
            }
            if ((index == 197))
            {
                return GetView197();
            }
            if ((index == 198))
            {
                return GetView198();
            }
            if ((index == 199))
            {
                return GetView199();
            }
            if ((index == 200))
            {
                return GetView200();
            }
            if ((index == 201))
            {
                return GetView201();
            }
            if ((index == 202))
            {
                return GetView202();
            }
            if ((index == 203))
            {
                return GetView203();
            }
            if ((index == 204))
            {
                return GetView204();
            }
            if ((index == 205))
            {
                return GetView205();
            }
            if ((index == 206))
            {
                return GetView206();
            }
            if ((index == 207))
            {
                return GetView207();
            }
            if ((index == 208))
            {
                return GetView208();
            }
            if ((index == 209))
            {
                return GetView209();
            }
            if ((index == 210))
            {
                return GetView210();
            }
            if ((index == 211))
            {
                return GetView211();
            }
            if ((index == 212))
            {
                return GetView212();
            }
            if ((index == 213))
            {
                return GetView213();
            }
            if ((index == 214))
            {
                return GetView214();
            }
            if ((index == 215))
            {
                return GetView215();
            }
            if ((index == 216))
            {
                return GetView216();
            }
            if ((index == 217))
            {
                return GetView217();
            }
            if ((index == 218))
            {
                return GetView218();
            }
            if ((index == 219))
            {
                return GetView219();
            }
            if ((index == 220))
            {
                return GetView220();
            }
            if ((index == 221))
            {
                return GetView221();
            }
            if ((index == 222))
            {
                return GetView222();
            }
            if ((index == 223))
            {
                return GetView223();
            }
            if ((index == 224))
            {
                return GetView224();
            }
            if ((index == 225))
            {
                return GetView225();
            }
            if ((index == 226))
            {
                return GetView226();
            }
            if ((index == 227))
            {
                return GetView227();
            }
            if ((index == 228))
            {
                return GetView228();
            }
            if ((index == 229))
            {
                return GetView229();
            }
            if ((index == 230))
            {
                return GetView230();
            }
            if ((index == 231))
            {
                return GetView231();
            }
            if ((index == 232))
            {
                return GetView232();
            }
            if ((index == 233))
            {
                return GetView233();
            }
            if ((index == 234))
            {
                return GetView234();
            }
            if ((index == 235))
            {
                return GetView235();
            }
            if ((index == 236))
            {
                return GetView236();
            }
            if ((index == 237))
            {
                return GetView237();
            }
            if ((index == 238))
            {
                return GetView238();
            }
            if ((index == 239))
            {
                return GetView239();
            }
            if ((index == 240))
            {
                return GetView240();
            }
            if ((index == 241))
            {
                return GetView241();
            }
            if ((index == 242))
            {
                return GetView242();
            }
            if ((index == 243))
            {
                return GetView243();
            }
            if ((index == 244))
            {
                return GetView244();
            }
            if ((index == 245))
            {
                return GetView245();
            }
            if ((index == 246))
            {
                return GetView246();
            }
            if ((index == 247))
            {
                return GetView247();
            }
            if ((index == 248))
            {
                return GetView248();
            }
            if ((index == 249))
            {
                return GetView249();
            }
            if ((index == 250))
            {
                return GetView250();
            }
            if ((index == 251))
            {
                return GetView251();
            }
            if ((index == 252))
            {
                return GetView252();
            }
            if ((index == 253))
            {
                return GetView253();
            }
            if ((index == 254))
            {
                return GetView254();
            }
            if ((index == 255))
            {
                return GetView255();
            }
            if ((index == 256))
            {
                return GetView256();
            }
            if ((index == 257))
            {
                return GetView257();
            }
            if ((index == 258))
            {
                return GetView258();
            }
            if ((index == 259))
            {
                return GetView259();
            }
            if ((index == 260))
            {
                return GetView260();
            }
            if ((index == 261))
            {
                return GetView261();
            }
            if ((index == 262))
            {
                return GetView262();
            }
            if ((index == 263))
            {
                return GetView263();
            }
            if ((index == 264))
            {
                return GetView264();
            }
            if ((index == 265))
            {
                return GetView265();
            }
            if ((index == 266))
            {
                return GetView266();
            }
            if ((index == 267))
            {
                return GetView267();
            }
            if ((index == 268))
            {
                return GetView268();
            }
            if ((index == 269))
            {
                return GetView269();
            }
            if ((index == 270))
            {
                return GetView270();
            }
            if ((index == 271))
            {
                return GetView271();
            }
            if ((index == 272))
            {
                return GetView272();
            }
            if ((index == 273))
            {
                return GetView273();
            }
            if ((index == 274))
            {
                return GetView274();
            }
            if ((index == 275))
            {
                return GetView275();
            }
            if ((index == 276))
            {
                return GetView276();
            }
            if ((index == 277))
            {
                return GetView277();
            }
            if ((index == 278))
            {
                return GetView278();
            }
            if ((index == 279))
            {
                return GetView279();
            }
            if ((index == 280))
            {
                return GetView280();
            }
            if ((index == 281))
            {
                return GetView281();
            }
            if ((index == 282))
            {
                return GetView282();
            }
            if ((index == 283))
            {
                return GetView283();
            }
            if ((index == 284))
            {
                return GetView284();
            }
            if ((index == 285))
            {
                return GetView285();
            }
            if ((index == 286))
            {
                return GetView286();
            }
            if ((index == 287))
            {
                return GetView287();
            }
            if ((index == 288))
            {
                return GetView288();
            }
            if ((index == 289))
            {
                return GetView289();
            }
            if ((index == 290))
            {
                return GetView290();
            }
            if ((index == 291))
            {
                return GetView291();
            }
            if ((index == 292))
            {
                return GetView292();
            }
            if ((index == 293))
            {
                return GetView293();
            }
            if ((index == 294))
            {
                return GetView294();
            }
            if ((index == 295))
            {
                return GetView295();
            }
            if ((index == 296))
            {
                return GetView296();
            }
            if ((index == 297))
            {
                return GetView297();
            }
            if ((index == 298))
            {
                return GetView298();
            }
            if ((index == 299))
            {
                return GetView299();
            }
            if ((index == 300))
            {
                return GetView300();
            }
            if ((index == 301))
            {
                return GetView301();
            }
            if ((index == 302))
            {
                return GetView302();
            }
            if ((index == 303))
            {
                return GetView303();
            }
            if ((index == 304))
            {
                return GetView304();
            }
            if ((index == 305))
            {
                return GetView305();
            }
            if ((index == 306))
            {
                return GetView306();
            }
            if ((index == 307))
            {
                return GetView307();
            }
            if ((index == 308))
            {
                return GetView308();
            }
            if ((index == 309))
            {
                return GetView309();
            }
            if ((index == 310))
            {
                return GetView310();
            }
            if ((index == 311))
            {
                return GetView311();
            }
            if ((index == 312))
            {
                return GetView312();
            }
            if ((index == 313))
            {
                return GetView313();
            }
            if ((index == 314))
            {
                return GetView314();
            }
            if ((index == 315))
            {
                return GetView315();
            }
            if ((index == 316))
            {
                return GetView316();
            }
            if ((index == 317))
            {
                return GetView317();
            }
            if ((index == 318))
            {
                return GetView318();
            }
            if ((index == 319))
            {
                return GetView319();
            }
            if ((index == 320))
            {
                return GetView320();
            }
            if ((index == 321))
            {
                return GetView321();
            }
            if ((index == 322))
            {
                return GetView322();
            }
            if ((index == 323))
            {
                return GetView323();
            }
            if ((index == 324))
            {
                return GetView324();
            }
            if ((index == 325))
            {
                return GetView325();
            }
            if ((index == 326))
            {
                return GetView326();
            }
            if ((index == 327))
            {
                return GetView327();
            }
            if ((index == 328))
            {
                return GetView328();
            }
            if ((index == 329))
            {
                return GetView329();
            }
            if ((index == 330))
            {
                return GetView330();
            }
            if ((index == 331))
            {
                return GetView331();
            }
            if ((index == 332))
            {
                return GetView332();
            }
            if ((index == 333))
            {
                return GetView333();
            }
            if ((index == 334))
            {
                return GetView334();
            }
            if ((index == 335))
            {
                return GetView335();
            }
            if ((index == 336))
            {
                return GetView336();
            }
            if ((index == 337))
            {
                return GetView337();
            }
            if ((index == 338))
            {
                return GetView338();
            }
            if ((index == 339))
            {
                return GetView339();
            }
            if ((index == 340))
            {
                return GetView340();
            }
            if ((index == 341))
            {
                return GetView341();
            }
            if ((index == 342))
            {
                return GetView342();
            }
            if ((index == 343))
            {
                return GetView343();
            }
            if ((index == 344))
            {
                return GetView344();
            }
            if ((index == 345))
            {
                return GetView345();
            }
            if ((index == 346))
            {
                return GetView346();
            }
            if ((index == 347))
            {
                return GetView347();
            }
            if ((index == 348))
            {
                return GetView348();
            }
            if ((index == 349))
            {
                return GetView349();
            }
            if ((index == 350))
            {
                return GetView350();
            }
            if ((index == 351))
            {
                return GetView351();
            }
            if ((index == 352))
            {
                return GetView352();
            }
            if ((index == 353))
            {
                return GetView353();
            }
            if ((index == 354))
            {
                return GetView354();
            }
            if ((index == 355))
            {
                return GetView355();
            }
            if ((index == 356))
            {
                return GetView356();
            }
            if ((index == 357))
            {
                return GetView357();
            }
            if ((index == 358))
            {
                return GetView358();
            }
            if ((index == 359))
            {
                return GetView359();
            }
            if ((index == 360))
            {
                return GetView360();
            }
            if ((index == 361))
            {
                return GetView361();
            }
            if ((index == 362))
            {
                return GetView362();
            }
            if ((index == 363))
            {
                return GetView363();
            }
            if ((index == 364))
            {
                return GetView364();
            }
            if ((index == 365))
            {
                return GetView365();
            }
            if ((index == 366))
            {
                return GetView366();
            }
            if ((index == 367))
            {
                return GetView367();
            }
            if ((index == 368))
            {
                return GetView368();
            }
            if ((index == 369))
            {
                return GetView369();
            }
            if ((index == 370))
            {
                return GetView370();
            }
            if ((index == 371))
            {
                return GetView371();
            }
            if ((index == 372))
            {
                return GetView372();
            }
            if ((index == 373))
            {
                return GetView373();
            }
            if ((index == 374))
            {
                return GetView374();
            }
            if ((index == 375))
            {
                return GetView375();
            }
            if ((index == 376))
            {
                return GetView376();
            }
            if ((index == 377))
            {
                return GetView377();
            }
            if ((index == 378))
            {
                return GetView378();
            }
            if ((index == 379))
            {
                return GetView379();
            }
            if ((index == 380))
            {
                return GetView380();
            }
            if ((index == 381))
            {
                return GetView381();
            }
            if ((index == 382))
            {
                return GetView382();
            }
            if ((index == 383))
            {
                return GetView383();
            }
            if ((index == 384))
            {
                return GetView384();
            }
            if ((index == 385))
            {
                return GetView385();
            }
            if ((index == 386))
            {
                return GetView386();
            }
            if ((index == 387))
            {
                return GetView387();
            }
            if ((index == 388))
            {
                return GetView388();
            }
            if ((index == 389))
            {
                return GetView389();
            }
            if ((index == 390))
            {
                return GetView390();
            }
            if ((index == 391))
            {
                return GetView391();
            }
            if ((index == 392))
            {
                return GetView392();
            }
            if ((index == 393))
            {
                return GetView393();
            }
            if ((index == 394))
            {
                return GetView394();
            }
            if ((index == 395))
            {
                return GetView395();
            }
            if ((index == 396))
            {
                return GetView396();
            }
            if ((index == 397))
            {
                return GetView397();
            }
            if ((index == 398))
            {
                return GetView398();
            }
            if ((index == 399))
            {
                return GetView399();
            }
            if ((index == 400))
            {
                return GetView400();
            }
            if ((index == 401))
            {
                return GetView401();
            }
            if ((index == 402))
            {
                return GetView402();
            }
            if ((index == 403))
            {
                return GetView403();
            }
            if ((index == 404))
            {
                return GetView404();
            }
            if ((index == 405))
            {
                return GetView405();
            }
            if ((index == 406))
            {
                return GetView406();
            }
            if ((index == 407))
            {
                return GetView407();
            }
            if ((index == 408))
            {
                return GetView408();
            }
            if ((index == 409))
            {
                return GetView409();
            }
            if ((index == 410))
            {
                return GetView410();
            }
            if ((index == 411))
            {
                return GetView411();
            }
            if ((index == 412))
            {
                return GetView412();
            }
            if ((index == 413))
            {
                return GetView413();
            }
            if ((index == 414))
            {
                return GetView414();
            }
            if ((index == 415))
            {
                return GetView415();
            }
            if ((index == 416))
            {
                return GetView416();
            }
            if ((index == 417))
            {
                return GetView417();
            }
            if ((index == 418))
            {
                return GetView418();
            }
            if ((index == 419))
            {
                return GetView419();
            }
            if ((index == 420))
            {
                return GetView420();
            }
            if ((index == 421))
            {
                return GetView421();
            }
            if ((index == 422))
            {
                return GetView422();
            }
            if ((index == 423))
            {
                return GetView423();
            }
            if ((index == 424))
            {
                return GetView424();
            }
            if ((index == 425))
            {
                return GetView425();
            }
            if ((index == 426))
            {
                return GetView426();
            }
            if ((index == 427))
            {
                return GetView427();
            }
            if ((index == 428))
            {
                return GetView428();
            }
            if ((index == 429))
            {
                return GetView429();
            }
            if ((index == 430))
            {
                return GetView430();
            }
            if ((index == 431))
            {
                return GetView431();
            }
            if ((index == 432))
            {
                return GetView432();
            }
            if ((index == 433))
            {
                return GetView433();
            }
            if ((index == 434))
            {
                return GetView434();
            }
            if ((index == 435))
            {
                return GetView435();
            }
            if ((index == 436))
            {
                return GetView436();
            }
            if ((index == 437))
            {
                return GetView437();
            }
            if ((index == 438))
            {
                return GetView438();
            }
            if ((index == 439))
            {
                return GetView439();
            }
            if ((index == 440))
            {
                return GetView440();
            }
            if ((index == 441))
            {
                return GetView441();
            }
            if ((index == 442))
            {
                return GetView442();
            }
            if ((index == 443))
            {
                return GetView443();
            }
            if ((index == 444))
            {
                return GetView444();
            }
            if ((index == 445))
            {
                return GetView445();
            }
            if ((index == 446))
            {
                return GetView446();
            }
            if ((index == 447))
            {
                return GetView447();
            }
            if ((index == 448))
            {
                return GetView448();
            }
            if ((index == 449))
            {
                return GetView449();
            }
            if ((index == 450))
            {
                return GetView450();
            }
            if ((index == 451))
            {
                return GetView451();
            }
            if ((index == 452))
            {
                return GetView452();
            }
            if ((index == 453))
            {
                return GetView453();
            }
            if ((index == 454))
            {
                return GetView454();
            }
            if ((index == 455))
            {
                return GetView455();
            }
            if ((index == 456))
            {
                return GetView456();
            }
            if ((index == 457))
            {
                return GetView457();
            }
            if ((index == 458))
            {
                return GetView458();
            }
            if ((index == 459))
            {
                return GetView459();
            }
            if ((index == 460))
            {
                return GetView460();
            }
            if ((index == 461))
            {
                return GetView461();
            }
            if ((index == 462))
            {
                return GetView462();
            }
            if ((index == 463))
            {
                return GetView463();
            }
            if ((index == 464))
            {
                return GetView464();
            }
            if ((index == 465))
            {
                return GetView465();
            }
            if ((index == 466))
            {
                return GetView466();
            }
            if ((index == 467))
            {
                return GetView467();
            }
            if ((index == 468))
            {
                return GetView468();
            }
            if ((index == 469))
            {
                return GetView469();
            }
            if ((index == 470))
            {
                return GetView470();
            }
            if ((index == 471))
            {
                return GetView471();
            }
            if ((index == 472))
            {
                return GetView472();
            }
            if ((index == 473))
            {
                return GetView473();
            }
            if ((index == 474))
            {
                return GetView474();
            }
            if ((index == 475))
            {
                return GetView475();
            }
            if ((index == 476))
            {
                return GetView476();
            }
            if ((index == 477))
            {
                return GetView477();
            }
            if ((index == 478))
            {
                return GetView478();
            }
            if ((index == 479))
            {
                return GetView479();
            }
            if ((index == 480))
            {
                return GetView480();
            }
            if ((index == 481))
            {
                return GetView481();
            }
            if ((index == 482))
            {
                return GetView482();
            }
            if ((index == 483))
            {
                return GetView483();
            }
            if ((index == 484))
            {
                return GetView484();
            }
            if ((index == 485))
            {
                return GetView485();
            }
            if ((index == 486))
            {
                return GetView486();
            }
            if ((index == 487))
            {
                return GetView487();
            }
            if ((index == 488))
            {
                return GetView488();
            }
            if ((index == 489))
            {
                return GetView489();
            }
            if ((index == 490))
            {
                return GetView490();
            }
            if ((index == 491))
            {
                return GetView491();
            }
            if ((index == 492))
            {
                return GetView492();
            }
            if ((index == 493))
            {
                return GetView493();
            }
            if ((index == 494))
            {
                return GetView494();
            }
            if ((index == 495))
            {
                return GetView495();
            }
            if ((index == 496))
            {
                return GetView496();
            }
            if ((index == 497))
            {
                return GetView497();
            }
            if ((index == 498))
            {
                return GetView498();
            }
            if ((index == 499))
            {
                return GetView499();
            }
            if ((index == 500))
            {
                return GetView500();
            }
            if ((index == 501))
            {
                return GetView501();
            }
            if ((index == 502))
            {
                return GetView502();
            }
            if ((index == 503))
            {
                return GetView503();
            }
            if ((index == 504))
            {
                return GetView504();
            }
            if ((index == 505))
            {
                return GetView505();
            }
            if ((index == 506))
            {
                return GetView506();
            }
            if ((index == 507))
            {
                return GetView507();
            }
            if ((index == 508))
            {
                return GetView508();
            }
            if ((index == 509))
            {
                return GetView509();
            }
            if ((index == 510))
            {
                return GetView510();
            }
            if ((index == 511))
            {
                return GetView511();
            }
            if ((index == 512))
            {
                return GetView512();
            }
            if ((index == 513))
            {
                return GetView513();
            }
            if ((index == 514))
            {
                return GetView514();
            }
            if ((index == 515))
            {
                return GetView515();
            }
            if ((index == 516))
            {
                return GetView516();
            }
            if ((index == 517))
            {
                return GetView517();
            }
            if ((index == 518))
            {
                return GetView518();
            }
            if ((index == 519))
            {
                return GetView519();
            }
            if ((index == 520))
            {
                return GetView520();
            }
            if ((index == 521))
            {
                return GetView521();
            }
            if ((index == 522))
            {
                return GetView522();
            }
            if ((index == 523))
            {
                return GetView523();
            }
            if ((index == 524))
            {
                return GetView524();
            }
            if ((index == 525))
            {
                return GetView525();
            }
            if ((index == 526))
            {
                return GetView526();
            }
            if ((index == 527))
            {
                return GetView527();
            }
            if ((index == 528))
            {
                return GetView528();
            }
            if ((index == 529))
            {
                return GetView529();
            }
            if ((index == 530))
            {
                return GetView530();
            }
            if ((index == 531))
            {
                return GetView531();
            }
            if ((index == 532))
            {
                return GetView532();
            }
            if ((index == 533))
            {
                return GetView533();
            }
            if ((index == 534))
            {
                return GetView534();
            }
            if ((index == 535))
            {
                return GetView535();
            }
            if ((index == 536))
            {
                return GetView536();
            }
            if ((index == 537))
            {
                return GetView537();
            }
            if ((index == 538))
            {
                return GetView538();
            }
            if ((index == 539))
            {
                return GetView539();
            }
            if ((index == 540))
            {
                return GetView540();
            }
            if ((index == 541))
            {
                return GetView541();
            }
            if ((index == 542))
            {
                return GetView542();
            }
            if ((index == 543))
            {
                return GetView543();
            }
            if ((index == 544))
            {
                return GetView544();
            }
            if ((index == 545))
            {
                return GetView545();
            }
            if ((index == 546))
            {
                return GetView546();
            }
            if ((index == 547))
            {
                return GetView547();
            }
            if ((index == 548))
            {
                return GetView548();
            }
            if ((index == 549))
            {
                return GetView549();
            }
            if ((index == 550))
            {
                return GetView550();
            }
            if ((index == 551))
            {
                return GetView551();
            }
            if ((index == 552))
            {
                return GetView552();
            }
            if ((index == 553))
            {
                return GetView553();
            }
            if ((index == 554))
            {
                return GetView554();
            }
            if ((index == 555))
            {
                return GetView555();
            }
            if ((index == 556))
            {
                return GetView556();
            }
            if ((index == 557))
            {
                return GetView557();
            }
            if ((index == 558))
            {
                return GetView558();
            }
            if ((index == 559))
            {
                return GetView559();
            }
            if ((index == 560))
            {
                return GetView560();
            }
            if ((index == 561))
            {
                return GetView561();
            }
            if ((index == 562))
            {
                return GetView562();
            }
            if ((index == 563))
            {
                return GetView563();
            }
            if ((index == 564))
            {
                return GetView564();
            }
            if ((index == 565))
            {
                return GetView565();
            }
            if ((index == 566))
            {
                return GetView566();
            }
            if ((index == 567))
            {
                return GetView567();
            }
            if ((index == 568))
            {
                return GetView568();
            }
            if ((index == 569))
            {
                return GetView569();
            }
            if ((index == 570))
            {
                return GetView570();
            }
            if ((index == 571))
            {
                return GetView571();
            }
            if ((index == 572))
            {
                return GetView572();
            }
            if ((index == 573))
            {
                return GetView573();
            }
            if ((index == 574))
            {
                return GetView574();
            }
            if ((index == 575))
            {
                return GetView575();
            }
            if ((index == 576))
            {
                return GetView576();
            }
            if ((index == 577))
            {
                return GetView577();
            }
            if ((index == 578))
            {
                return GetView578();
            }
            if ((index == 579))
            {
                return GetView579();
            }
            if ((index == 580))
            {
                return GetView580();
            }
            if ((index == 581))
            {
                return GetView581();
            }
            if ((index == 582))
            {
                return GetView582();
            }
            if ((index == 583))
            {
                return GetView583();
            }
            if ((index == 584))
            {
                return GetView584();
            }
            if ((index == 585))
            {
                return GetView585();
            }
            if ((index == 586))
            {
                return GetView586();
            }
            if ((index == 587))
            {
                return GetView587();
            }
            if ((index == 588))
            {
                return GetView588();
            }
            if ((index == 589))
            {
                return GetView589();
            }
            if ((index == 590))
            {
                return GetView590();
            }
            if ((index == 591))
            {
                return GetView591();
            }
            if ((index == 592))
            {
                return GetView592();
            }
            if ((index == 593))
            {
                return GetView593();
            }
            if ((index == 594))
            {
                return GetView594();
            }
            if ((index == 595))
            {
                return GetView595();
            }
            if ((index == 596))
            {
                return GetView596();
            }
            if ((index == 597))
            {
                return GetView597();
            }
            if ((index == 598))
            {
                return GetView598();
            }
            if ((index == 599))
            {
                return GetView599();
            }
            if ((index == 600))
            {
                return GetView600();
            }
            if ((index == 601))
            {
                return GetView601();
            }
            if ((index == 602))
            {
                return GetView602();
            }
            if ((index == 603))
            {
                return GetView603();
            }
            if ((index == 604))
            {
                return GetView604();
            }
            if ((index == 605))
            {
                return GetView605();
            }
            if ((index == 606))
            {
                return GetView606();
            }
            if ((index == 607))
            {
                return GetView607();
            }
            if ((index == 608))
            {
                return GetView608();
            }
            if ((index == 609))
            {
                return GetView609();
            }
            if ((index == 610))
            {
                return GetView610();
            }
            if ((index == 611))
            {
                return GetView611();
            }
            if ((index == 612))
            {
                return GetView612();
            }
            if ((index == 613))
            {
                return GetView613();
            }
            if ((index == 614))
            {
                return GetView614();
            }
            if ((index == 615))
            {
                return GetView615();
            }
            if ((index == 616))
            {
                return GetView616();
            }
            if ((index == 617))
            {
                return GetView617();
            }
            if ((index == 618))
            {
                return GetView618();
            }
            if ((index == 619))
            {
                return GetView619();
            }
            if ((index == 620))
            {
                return GetView620();
            }
            if ((index == 621))
            {
                return GetView621();
            }
            if ((index == 622))
            {
                return GetView622();
            }
            if ((index == 623))
            {
                return GetView623();
            }
            if ((index == 624))
            {
                return GetView624();
            }
            if ((index == 625))
            {
                return GetView625();
            }
            if ((index == 626))
            {
                return GetView626();
            }
            if ((index == 627))
            {
                return GetView627();
            }
            if ((index == 628))
            {
                return GetView628();
            }
            if ((index == 629))
            {
                return GetView629();
            }
            if ((index == 630))
            {
                return GetView630();
            }
            if ((index == 631))
            {
                return GetView631();
            }
            if ((index == 632))
            {
                return GetView632();
            }
            if ((index == 633))
            {
                return GetView633();
            }
            if ((index == 634))
            {
                return GetView634();
            }
            if ((index == 635))
            {
                return GetView635();
            }
            if ((index == 636))
            {
                return GetView636();
            }
            if ((index == 637))
            {
                return GetView637();
            }
            if ((index == 638))
            {
                return GetView638();
            }
            if ((index == 639))
            {
                return GetView639();
            }
            if ((index == 640))
            {
                return GetView640();
            }
            if ((index == 641))
            {
                return GetView641();
            }
            if ((index == 642))
            {
                return GetView642();
            }
            if ((index == 643))
            {
                return GetView643();
            }
            if ((index == 644))
            {
                return GetView644();
            }
            if ((index == 645))
            {
                return GetView645();
            }
            if ((index == 646))
            {
                return GetView646();
            }
            if ((index == 647))
            {
                return GetView647();
            }
            if ((index == 648))
            {
                return GetView648();
            }
            if ((index == 649))
            {
                return GetView649();
            }
            if ((index == 650))
            {
                return GetView650();
            }
            if ((index == 651))
            {
                return GetView651();
            }
            if ((index == 652))
            {
                return GetView652();
            }
            if ((index == 653))
            {
                return GetView653();
            }
            if ((index == 654))
            {
                return GetView654();
            }
            if ((index == 655))
            {
                return GetView655();
            }
            if ((index == 656))
            {
                return GetView656();
            }
            if ((index == 657))
            {
                return GetView657();
            }
            if ((index == 658))
            {
                return GetView658();
            }
            if ((index == 659))
            {
                return GetView659();
            }
            if ((index == 660))
            {
                return GetView660();
            }
            if ((index == 661))
            {
                return GetView661();
            }
            if ((index == 662))
            {
                return GetView662();
            }
            if ((index == 663))
            {
                return GetView663();
            }
            if ((index == 664))
            {
                return GetView664();
            }
            if ((index == 665))
            {
                return GetView665();
            }
            if ((index == 666))
            {
                return GetView666();
            }
            if ((index == 667))
            {
                return GetView667();
            }
            if ((index == 668))
            {
                return GetView668();
            }
            if ((index == 669))
            {
                return GetView669();
            }
            if ((index == 670))
            {
                return GetView670();
            }
            if ((index == 671))
            {
                return GetView671();
            }
            if ((index == 672))
            {
                return GetView672();
            }
            if ((index == 673))
            {
                return GetView673();
            }
            if ((index == 674))
            {
                return GetView674();
            }
            if ((index == 675))
            {
                return GetView675();
            }
            if ((index == 676))
            {
                return GetView676();
            }
            if ((index == 677))
            {
                return GetView677();
            }
            if ((index == 678))
            {
                return GetView678();
            }
            if ((index == 679))
            {
                return GetView679();
            }
            if ((index == 680))
            {
                return GetView680();
            }
            if ((index == 681))
            {
                return GetView681();
            }
            if ((index == 682))
            {
                return GetView682();
            }
            if ((index == 683))
            {
                return GetView683();
            }
            if ((index == 684))
            {
                return GetView684();
            }
            if ((index == 685))
            {
                return GetView685();
            }
            if ((index == 686))
            {
                return GetView686();
            }
            if ((index == 687))
            {
                return GetView687();
            }
            if ((index == 688))
            {
                return GetView688();
            }
            if ((index == 689))
            {
                return GetView689();
            }
            if ((index == 690))
            {
                return GetView690();
            }
            if ((index == 691))
            {
                return GetView691();
            }
            if ((index == 692))
            {
                return GetView692();
            }
            if ((index == 693))
            {
                return GetView693();
            }
            if ((index == 694))
            {
                return GetView694();
            }
            if ((index == 695))
            {
                return GetView695();
            }
            if ((index == 696))
            {
                return GetView696();
            }
            if ((index == 697))
            {
                return GetView697();
            }
            if ((index == 698))
            {
                return GetView698();
            }
            if ((index == 699))
            {
                return GetView699();
            }
            if ((index == 700))
            {
                return GetView700();
            }
            if ((index == 701))
            {
                return GetView701();
            }
            if ((index == 702))
            {
                return GetView702();
            }
            if ((index == 703))
            {
                return GetView703();
            }
            if ((index == 704))
            {
                return GetView704();
            }
            if ((index == 705))
            {
                return GetView705();
            }
            if ((index == 706))
            {
                return GetView706();
            }
            if ((index == 707))
            {
                return GetView707();
            }
            if ((index == 708))
            {
                return GetView708();
            }
            if ((index == 709))
            {
                return GetView709();
            }
            if ((index == 710))
            {
                return GetView710();
            }
            if ((index == 711))
            {
                return GetView711();
            }
            if ((index == 712))
            {
                return GetView712();
            }
            if ((index == 713))
            {
                return GetView713();
            }
            if ((index == 714))
            {
                return GetView714();
            }
            if ((index == 715))
            {
                return GetView715();
            }
            if ((index == 716))
            {
                return GetView716();
            }
            if ((index == 717))
            {
                return GetView717();
            }
            if ((index == 718))
            {
                return GetView718();
            }
            if ((index == 719))
            {
                return GetView719();
            }
            if ((index == 720))
            {
                return GetView720();
            }
            if ((index == 721))
            {
                return GetView721();
            }
            if ((index == 722))
            {
                return GetView722();
            }
            if ((index == 723))
            {
                return GetView723();
            }
            if ((index == 724))
            {
                return GetView724();
            }
            if ((index == 725))
            {
                return GetView725();
            }
            if ((index == 726))
            {
                return GetView726();
            }
            if ((index == 727))
            {
                return GetView727();
            }
            if ((index == 728))
            {
                return GetView728();
            }
            if ((index == 729))
            {
                return GetView729();
            }
            if ((index == 730))
            {
                return GetView730();
            }
            if ((index == 731))
            {
                return GetView731();
            }
            if ((index == 732))
            {
                return GetView732();
            }
            if ((index == 733))
            {
                return GetView733();
            }
            if ((index == 734))
            {
                return GetView734();
            }
            if ((index == 735))
            {
                return GetView735();
            }
            if ((index == 736))
            {
                return GetView736();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.testDtp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.testDtp", @"
    SELECT VALUE -- Constructing testDtp
        [CodeFirstDatabaseSchema.testDtp](T1.testDtp_id, T1.testDtp_Caption, T1.testDtp_v1, T1.testDtp_v2, T1.testDtp_v3)
    FROM (
        SELECT 
            T.Id AS testDtp_id, 
            T.Caption AS testDtp_Caption, 
            T.V1 AS testDtp_v1, 
            T.V2 AS testDtp_v2, 
            T.V3 AS testDtp_v3, 
            True AS _from0
        FROM DataContext.testDtp AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.testDtp_Child
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.testDtp_Child", @"
    SELECT VALUE -- Constructing testDtp_Child
        [CodeFirstDatabaseSchema.testDtp_Child](T1.[testDtp_Child.id], T1.[testDtp_Child.idOwner], T1.[testDtp_Child.idMaster], T1.[testDtp_Child.idHierarchyPeriod], T1.[testDtp_Child.Value1], T1.[testDtp_Child.Value2], T1.[testDtp_Child.Value3])
    FROM (
        SELECT 
            T.Id AS [testDtp_Child.id], 
            T.IdOwner AS [testDtp_Child.idOwner], 
            T.IdMaster AS [testDtp_Child.idMaster], 
            T.IdHierarchyPeriod AS [testDtp_Child.idHierarchyPeriod], 
            T.Value1 AS [testDtp_Child.Value1], 
            T.Value2 AS [testDtp_Child.Value2], 
            T.Value3 AS [testDtp_Child.Value3], 
            True AS _from0
        FROM DataContext.testDtp_Child AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.HierarchyPeriod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.HierarchyPeriod", @"
    SELECT VALUE -- Constructing HierarchyPeriod
        [CodeFirstDatabaseSchema.HierarchyPeriod](T1.HierarchyPeriod_id, T1.HierarchyPeriod_Year, T1.HierarchyPeriod_idParent, T1.HierarchyPeriod_Caption, T1.HierarchyPeriod_DateStart, T1.HierarchyPeriod_DateEnd, T1.HierarchyPeriod_idRefStatus)
    FROM (
        SELECT 
            T.Id AS HierarchyPeriod_id, 
            T.Year AS HierarchyPeriod_Year, 
            T.IdParent AS HierarchyPeriod_idParent, 
            T.Caption AS HierarchyPeriod_Caption, 
            T.DateStart AS HierarchyPeriod_DateStart, 
            T.DateEnd AS HierarchyPeriod_DateEnd, 
            T.IdRefStatus AS HierarchyPeriod_idRefStatus, 
            True AS _from0
        FROM DataContext.HierarchyPeriod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ResourceMaintenanceOfTheStateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2813);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ResourceMaintenanceOfTheStateProgram\r\n       ");
            viewString.Append(" [CodeFirstDatabaseSchema.ResourceMaintenanceOfTheStateProgram](T1.ResourceMaint");
            viewString.Append("enanceOfTheStateProgram_id, T1.ResourceMaintenanceOfTheStateProgram_isTemporary,");
            viewString.Append(" T1.ResourceMaintenanceOfTheStateProgram_idPublicLegalFormation, T1.ResourceMain");
            viewString.Append("tenanceOfTheStateProgram_idBudget, T1.ResourceMaintenanceOfTheStateProgram_idVer");
            viewString.Append("sion, T1.ResourceMaintenanceOfTheStateProgram_Caption, T1.ResourceMaintenanceOfT");
            viewString.Append("heStateProgram_idProgram, T1.ResourceMaintenanceOfTheStateProgram_byApproved, T1");
            viewString.Append(".ResourceMaintenanceOfTheStateProgram_isRatingAdditionalNeeds, T1.ResourceMainte");
            viewString.Append("nanceOfTheStateProgram_DateReport, T1.ResourceMaintenanceOfTheStateProgram_repea");
            viewString.Append("tTableHeader, T1.ResourceMaintenanceOfTheStateProgram_showActivities, T1.Resourc");
            viewString.Append("eMaintenanceOfTheStateProgram_bySource, T1.ResourceMaintenanceOfTheStateProgram_");
            viewString.Append("idSourcesDataReports, T1.ResourceMaintenanceOfTheStateProgram_HasNoFunds, T1.Res");
            viewString.Append("ourceMaintenanceOfTheStateProgram_idReportProfileType, T1.ResourceMaintenanceOfT");
            viewString.Append("heStateProgram_idReportProfileUser, T1.ResourceMaintenanceOfTheStateProgram_Repo");
            viewString.Append("rtProfileCaption)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS ResourceMain");
            viewString.Append("tenanceOfTheStateProgram_id, \r\n            T.IsTemporary AS ResourceMaintenanceO");
            viewString.Append("fTheStateProgram_isTemporary, \r\n            T.IdPublicLegalFormation AS Resource");
            viewString.Append("MaintenanceOfTheStateProgram_idPublicLegalFormation, \r\n            T.IdBudget AS");
            viewString.Append(" ResourceMaintenanceOfTheStateProgram_idBudget, \r\n            T.IdVersion AS Res");
            viewString.Append("ourceMaintenanceOfTheStateProgram_idVersion, \r\n            T.Caption AS Resource");
            viewString.Append("MaintenanceOfTheStateProgram_Caption, \r\n            T.IdProgram AS ResourceMaint");
            viewString.Append("enanceOfTheStateProgram_idProgram, \r\n            T.ByApproved AS ResourceMainten");
            viewString.Append("anceOfTheStateProgram_byApproved, \r\n            T.IsRatingAdditionalNeeds AS Res");
            viewString.Append("ourceMaintenanceOfTheStateProgram_isRatingAdditionalNeeds, \r\n            T.DateR");
            viewString.Append("eport AS ResourceMaintenanceOfTheStateProgram_DateReport, \r\n            T.Repeat");
            viewString.Append("TableHeader AS ResourceMaintenanceOfTheStateProgram_repeatTableHeader, \r\n       ");
            viewString.Append("     T.ShowActivities AS ResourceMaintenanceOfTheStateProgram_showActivities, \r\n");
            viewString.Append("            T.BySource AS ResourceMaintenanceOfTheStateProgram_bySource, \r\n     ");
            viewString.Append("       T.IdSourcesDataReports AS ResourceMaintenanceOfTheStateProgram_idSourcesD");
            viewString.Append("ataReports, \r\n            T.HasNoFunds AS ResourceMaintenanceOfTheStateProgram_H");
            viewString.Append("asNoFunds, \r\n            T.IdReportProfileType AS ResourceMaintenanceOfTheStateP");
            viewString.Append("rogram_idReportProfileType, \r\n            T.IdReportProfileUser AS ResourceMaint");
            viewString.Append("enanceOfTheStateProgram_idReportProfileUser, \r\n            T.ReportProfileCaptio");
            viewString.Append("n AS ResourceMaintenanceOfTheStateProgram_ReportProfileCaption, \r\n            Tr");
            viewString.Append("ue AS _from0\r\n        FROM DataContext.ResourceMaintenanceOfTheStateProgram AS T");
            viewString.Append("\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ResourceMaintenanceOfTheStateProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicLegalFormation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicLegalFormation", "\r\n    SELECT VALUE -- Constructing PublicLegalFormation\r\n        [CodeFirstDataba" +
                    "seSchema.PublicLegalFormation](T1.PublicLegalFormation_id, T1.PublicLegalFormati" +
                    "on_idParent, T1.PublicLegalFormation_Caption, T1.PublicLegalFormation_idBudgetLe" +
                    "vel, T1.PublicLegalFormation_idAccessGroup, T1.PublicLegalFormation_Subject, T1." +
                    "[PublicLegalFormation.idMethodofFormingCode_GoalSetting], T1.[PublicLegalFormati" +
                    "on.idMethodofFormingCode_TargetIndicator], T1.[PublicLegalFormation.idMethodofFo" +
                    "rmingCode_Activity], T1.PublicLegalFormation_idRefStatus, T1.PublicLegalFormatio" +
                    "n_UsedGMZ)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS PublicLegalFormatio" +
                    "n_id, \r\n            T.IdParent AS PublicLegalFormation_idParent, \r\n            T" +
                    ".Caption AS PublicLegalFormation_Caption, \r\n            T.IdBudgetLevel AS Publi" +
                    "cLegalFormation_idBudgetLevel, \r\n            T.IdAccessGroup AS PublicLegalForma" +
                    "tion_idAccessGroup, \r\n            T.Subject AS PublicLegalFormation_Subject, \r\n " +
                    "           T.IdMethodofFormingCode_GoalSetting AS [PublicLegalFormation.idMethod" +
                    "ofFormingCode_GoalSetting], \r\n            T.IdMethodofFormingCode_TargetIndicato" +
                    "r AS [PublicLegalFormation.idMethodofFormingCode_TargetIndicator], \r\n           " +
                    " T.IdMethodofFormingCode_Activity AS [PublicLegalFormation.idMethodofFormingCode" +
                    "_Activity], \r\n            T.IdRefStatus AS PublicLegalFormation_idRefStatus, \r\n " +
                    "           T.UsedGMZ AS PublicLegalFormation_UsedGMZ, \r\n            True AS _fro" +
                    "m0\r\n        FROM DataContext.PublicLegalFormation AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetLevel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetLevel", @"
    SELECT VALUE -- Constructing BudgetLevel
        [CodeFirstDatabaseSchema.BudgetLevel](T1.BudgetLevel_id, T1.BudgetLevel_idParent, T1.BudgetLevel_Caption, T1.BudgetLevel_idRefStatus)
    FROM (
        SELECT 
            T.Id AS BudgetLevel_id, 
            T.IdParent AS BudgetLevel_idParent, 
            T.Caption AS BudgetLevel_Caption, 
            T.IdRefStatus AS BudgetLevel_idRefStatus, 
            True AS _from0
        FROM DataContext.BudgetLevel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AccessGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AccessGroup", @"
    SELECT VALUE -- Constructing AccessGroup
        [CodeFirstDatabaseSchema.AccessGroup](T1.AccessGroup_id, T1.AccessGroup_idParent, T1.AccessGroup_Caption, T1.AccessGroup_idRefStatus)
    FROM (
        SELECT 
            T.Id AS AccessGroup_id, 
            T.IdParent AS AccessGroup_idParent, 
            T.Caption AS AccessGroup_Caption, 
            T.IdRefStatus AS AccessGroup_idRefStatus, 
            True AS _from0
        FROM DataContext.AccessGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Budget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Budget", @"
    SELECT VALUE -- Constructing Budget
        [CodeFirstDatabaseSchema.Budget](T1.Budget_id, T1.Budget_idPublicLegalFormation, T1.Budget_Year, T1.Budget_Caption, T1.Budget_idRefStatus)
    FROM (
        SELECT 
            T.Id AS Budget_id, 
            T.IdPublicLegalFormation AS Budget_idPublicLegalFormation, 
            T.Year AS Budget_Year, 
            T.Caption AS Budget_Caption, 
            T.IdRefStatus AS Budget_idRefStatus, 
            True AS _from0
        FROM DataContext.Budget AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Version
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Version", @"
    SELECT VALUE -- Constructing Version
        [CodeFirstDatabaseSchema.Version](T1.Version_id, T1.Version_idPublicLegalFormation, T1.Version_Caption, T1.Version_idRefStatus)
    FROM (
        SELECT 
            T.Id AS Version_id, 
            T.IdPublicLegalFormation AS Version_idPublicLegalFormation, 
            T.Caption AS Version_Caption, 
            T.IdRefStatus AS Version_idRefStatus, 
            True AS _from0
        FROM DataContext.Version AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Program
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Program", "\r\n    SELECT VALUE -- Constructing Program\r\n        [CodeFirstDatabaseSchema.Prog" +
                    "ram](T1.Program_id, T1.Program_Caption, T1.Program_idTerminator, T1.Program_idTe" +
                    "rminatorEntity, T1.Program_idRegistrator, T1.Program_idRegistratorEntity, T1.Pro" +
                    "gram_idApproved, T1.Program_idApprovedEntity, T1.Program_idExecutedOperation, T1" +
                    ".Program_idTerminateOperation, T1.Program_idPublicLegalFormation, T1.Program_idV" +
                    "ersion, T1.Program_DateCommit, T1.Program_DateTerminate, T1.Program_DateCreate, " +
                    "T1.Program_idDocType, T1.Program_idSBP)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.Id AS Program_id, \r\n            T.Caption AS Program_Caption, \r\n            " +
                    "T.IdTerminator AS Program_idTerminator, \r\n            T.IdTerminatorEntity AS Pr" +
                    "ogram_idTerminatorEntity, \r\n            T.IdRegistrator AS Program_idRegistrator" +
                    ", \r\n            T.IdRegistratorEntity AS Program_idRegistratorEntity, \r\n        " +
                    "    T.IdApproved AS Program_idApproved, \r\n            T.IdApprovedEntity AS Prog" +
                    "ram_idApprovedEntity, \r\n            T.IdExecutedOperation AS Program_idExecutedO" +
                    "peration, \r\n            T.IdTerminateOperation AS Program_idTerminateOperation, " +
                    "\r\n            T.IdPublicLegalFormation AS Program_idPublicLegalFormation, \r\n    " +
                    "        T.IdVersion AS Program_idVersion, \r\n            T.DateCommit AS Program_" +
                    "DateCommit, \r\n            T.DateTerminate AS Program_DateTerminate, \r\n          " +
                    "  T.DateCreate AS Program_DateCreate, \r\n            T.IdDocType AS Program_idDoc" +
                    "Type, \r\n            T.IdSBP AS Program_idSBP, \r\n            True AS _from0\r\n    " +
                    "    FROM DataContext.Program AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Entity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Entity", @"
    SELECT VALUE -- Constructing Entity
        [CodeFirstDatabaseSchema.Entity](T1.Entity_id, T1.Entity_Name, T1.Entity_Caption, T1.Entity_Description, T1.Entity_idEntityType, T1.Entity_GenerateEntityClass, T1.Entity_isSystem, T1.Entity_idEntityGroup, T1.Entity_idProject, T1.Entity_isVersioning, T1.Entity_Ordered, T1.Entity_AllowGenericLinks)
    FROM (
        SELECT 
            T.Id AS Entity_id, 
            T.Name AS Entity_Name, 
            T.Caption AS Entity_Caption, 
            T.Description AS Entity_Description, 
            T.IdEntityType AS Entity_idEntityType, 
            T.GenerateEntityClass AS Entity_GenerateEntityClass, 
            T.IsSystem AS Entity_isSystem, 
            T.IdEntityGroup AS Entity_idEntityGroup, 
            T.IdProject AS Entity_idProject, 
            T.IsVersioning AS Entity_isVersioning, 
            T.Ordered AS Entity_Ordered, 
            T.AllowGenericLinks AS Entity_AllowGenericLinks, 
            True AS _from0
        FROM DataContext.Entity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ExecutedOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ExecutedOperation", @"
    SELECT VALUE -- Constructing ExecutedOperation
        [CodeFirstDatabaseSchema.ExecutedOperation](T1.ExecutedOperation_id, T1.ExecutedOperation_Date, T1.ExecutedOperation_idUser, T1.ExecutedOperation_idEntityOperation, T1.ExecutedOperation_idOriginalStatus, T1.ExecutedOperation_idFinalStatus, T1.ExecutedOperation_idRegistrator, T1.ExecutedOperation_idRegistratorEntity)
    FROM (
        SELECT 
            T.Id AS ExecutedOperation_id, 
            T.Date AS ExecutedOperation_Date, 
            T.IdUser AS ExecutedOperation_idUser, 
            T.IdEntityOperation AS ExecutedOperation_idEntityOperation, 
            T.IdOriginalStatus AS ExecutedOperation_idOriginalStatus, 
            T.IdFinalStatus AS ExecutedOperation_idFinalStatus, 
            T.IdRegistrator AS ExecutedOperation_idRegistrator, 
            T.IdRegistratorEntity AS ExecutedOperation_idRegistratorEntity, 
            True AS _from0
        FROM DataContext.ExecutedOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.User", @"
    SELECT VALUE -- Constructing User
        [CodeFirstDatabaseSchema.User](T1.User_id, T1.User_Caption, T1.User_Name, T1.User_Email, T1.User_Password, T1.User_DateofLastEntry, T1.User_Department, T1.User_Site, T1.User_IISAddress, T1.User_Telephone, T1.User_idAccessGroup, T1.User_idOrganization, T1.User_idResponsiblePerson, T1.User_ChangePasswordNextTime, T1.User_IsBlocked)
    FROM (
        SELECT 
            T.Id AS User_id, 
            T.Caption AS User_Caption, 
            T.Name AS User_Name, 
            T.Email AS User_Email, 
            T.Password AS User_Password, 
            T.DateofLastEntry AS User_DateofLastEntry, 
            T.Department AS User_Department, 
            T.Site AS User_Site, 
            T.IISAddress AS User_IISAddress, 
            T.Telephone AS User_Telephone, 
            T.IdAccessGroup AS User_idAccessGroup, 
            T.IdOrganization AS User_idOrganization, 
            T.IdResponsiblePerson AS User_idResponsiblePerson, 
            T.ChangePasswordNextTime AS User_ChangePasswordNextTime, 
            T.IsBlocked AS User_IsBlocked, 
            True AS _from0
        FROM DataContext.User AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Organization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Organization", @"
    SELECT VALUE -- Constructing Organization
        [CodeFirstDatabaseSchema.Organization](T1.Organization_id, T1.Organization_idPublicLegalFormation, T1.Organization_Caption, T1.Organization_Description, T1.Organization_INN, T1.Organization_KPP, T1.Organization_CodeOrgBud, T1.Organization_idOKATO, T1.Organization_PostAdress, T1.Organization_LegalAddress, T1.Organization_idRefStatus, T1.Organization_Okpo)
    FROM (
        SELECT 
            T.Id AS Organization_id, 
            T.IdPublicLegalFormation AS Organization_idPublicLegalFormation, 
            T.Caption AS Organization_Caption, 
            T.Description AS Organization_Description, 
            T.INN AS Organization_INN, 
            T.KPP AS Organization_KPP, 
            T.CodeOrgBud AS Organization_CodeOrgBud, 
            T.IdOKATO AS Organization_idOKATO, 
            T.PostAdress AS Organization_PostAdress, 
            T.LegalAddress AS Organization_LegalAddress, 
            T.IdRefStatus AS Organization_idRefStatus, 
            T.Okpo AS Organization_Okpo, 
            True AS _from0
        FROM DataContext.Organization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.OKATO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.OKATO", @"
    SELECT VALUE -- Constructing OKATO
        [CodeFirstDatabaseSchema.OKATO](T1.OKATO_id, T1.OKATO_idParent, T1.OKATO_Caption, T1.OKATO_Description, T1.OKATO_idRefStatus, T1.OKATO_idBudgetLevel)
    FROM (
        SELECT 
            T.Id AS OKATO_id, 
            T.IdParent AS OKATO_idParent, 
            T.Caption AS OKATO_Caption, 
            T.Description AS OKATO_Description, 
            T.IdRefStatus AS OKATO_idRefStatus, 
            T.IdBudgetLevel AS OKATO_idBudgetLevel, 
            True AS _from0
        FROM DataContext.OKATO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ResponsiblePerson
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ResponsiblePerson", @"
    SELECT VALUE -- Constructing ResponsiblePerson
        [CodeFirstDatabaseSchema.ResponsiblePerson](T1.ResponsiblePerson_id, T1.ResponsiblePerson_idPublicLegalFormation, T1.ResponsiblePerson_idOrganization, T1.ResponsiblePerson_Caption, T1.ResponsiblePerson_idOfficialCapacity, T1.ResponsiblePerson_idRoleResponsiblePerson, T1.ResponsiblePerson_Phone, T1.ResponsiblePerson_Email, T1.ResponsiblePerson_MoreInformation, T1.ResponsiblePerson_DateEnd, T1.ResponsiblePerson_idRefStatus)
    FROM (
        SELECT 
            T.Id AS ResponsiblePerson_id, 
            T.IdPublicLegalFormation AS ResponsiblePerson_idPublicLegalFormation, 
            T.IdOrganization AS ResponsiblePerson_idOrganization, 
            T.Caption AS ResponsiblePerson_Caption, 
            T.IdOfficialCapacity AS ResponsiblePerson_idOfficialCapacity, 
            T.IdRoleResponsiblePerson AS ResponsiblePerson_idRoleResponsiblePerson, 
            T.Phone AS ResponsiblePerson_Phone, 
            T.Email AS ResponsiblePerson_Email, 
            T.MoreInformation AS ResponsiblePerson_MoreInformation, 
            T.DateEnd AS ResponsiblePerson_DateEnd, 
            T.IdRefStatus AS ResponsiblePerson_idRefStatus, 
            True AS _from0
        FROM DataContext.ResponsiblePerson AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.OfficialCapacity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.OfficialCapacity", @"
    SELECT VALUE -- Constructing OfficialCapacity
        [CodeFirstDatabaseSchema.OfficialCapacity](T1.OfficialCapacity_id, T1.OfficialCapacity_idPublicLegalFormation, T1.OfficialCapacity_Department, T1.OfficialCapacity_Caption, T1.OfficialCapacity_idRefStatus)
    FROM (
        SELECT 
            T.Id AS OfficialCapacity_id, 
            T.IdPublicLegalFormation AS OfficialCapacity_idPublicLegalFormation, 
            T.Department AS OfficialCapacity_Department, 
            T.Caption AS OfficialCapacity_Caption, 
            T.IdRefStatus AS OfficialCapacity_idRefStatus, 
            True AS _from0
        FROM DataContext.OfficialCapacity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Role
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Role", @"
    SELECT VALUE -- Constructing Role
        [CodeFirstDatabaseSchema.Role](T1.Role_id, T1.Role_Caption, T1.Role_Description, T1.Role_idAccessGroup, T1.Role_idRoleType, T1.Role_idRoleKind)
    FROM (
        SELECT 
            T.Id AS Role_id, 
            T.Caption AS Role_Caption, 
            T.Description AS Role_Description, 
            T.IdAccessGroup AS Role_idAccessGroup, 
            T.IdRoleType AS Role_idRoleType, 
            T.IdRoleKind AS Role_idRoleKind, 
            True AS _from0
        FROM DataContext.Role AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Role_FunctionalRight
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Role_FunctionalRight", @"
    SELECT VALUE -- Constructing Role_FunctionalRight
        [CodeFirstDatabaseSchema.Role_FunctionalRight](T1.[Role_FunctionalRight.id], T1.[Role_FunctionalRight.idOwner], T1.[Role_FunctionalRight.idEntity], T1.[Role_FunctionalRight.EditingFlag])
    FROM (
        SELECT 
            T.Id AS [Role_FunctionalRight.id], 
            T.IdOwner AS [Role_FunctionalRight.idOwner], 
            T.IdEntity AS [Role_FunctionalRight.idEntity], 
            T.EditingFlag AS [Role_FunctionalRight.EditingFlag], 
            True AS _from0
        FROM DataContext.Role_FunctionalRight AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Role_DocumentOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Role_DocumentOperation", @"
    SELECT VALUE -- Constructing Role_DocumentOperation
        [CodeFirstDatabaseSchema.Role_DocumentOperation](T1.[Role_DocumentOperation.id], T1.[Role_DocumentOperation.idOwner], T1.[Role_DocumentOperation.idOperation], T1.[Role_DocumentOperation.SwitchOn], T1.[Role_DocumentOperation.InitialStatus], T1.[Role_DocumentOperation.FinalStatus], T1.[Role_DocumentOperation.idMaster])
    FROM (
        SELECT 
            T.Id AS [Role_DocumentOperation.id], 
            T.IdOwner AS [Role_DocumentOperation.idOwner], 
            T.IdOperation AS [Role_DocumentOperation.idOperation], 
            T.SwitchOn AS [Role_DocumentOperation.SwitchOn], 
            T.InitialStatus AS [Role_DocumentOperation.InitialStatus], 
            T.FinalStatus AS [Role_DocumentOperation.FinalStatus], 
            T.IdMaster AS [Role_DocumentOperation.idMaster], 
            True AS _from0
        FROM DataContext.Role_DocumentOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Operation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Operation", @"
    SELECT VALUE -- Constructing Operation
        [CodeFirstDatabaseSchema.Operation](T1.Operation_id, T1.Operation_Name, T1.Operation_Caption, T1.Operation_Description)
    FROM (
        SELECT 
            T.Id AS Operation_id, 
            T.Name AS Operation_Name, 
            T.Caption AS Operation_Caption, 
            T.Description AS Operation_Description, 
            True AS _from0
        FROM DataContext.Operation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Role_RefStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Role_RefStatus", @"
    SELECT VALUE -- Constructing Role_RefStatus
        [CodeFirstDatabaseSchema.Role_RefStatus](T1.[Role_RefStatus.id], T1.[Role_RefStatus.idOwner], T1.[Role_RefStatus.idMaster], T1.[Role_RefStatus.idRefStatus], T1.[Role_RefStatus.SwitchOn])
    FROM (
        SELECT 
            T.Id AS [Role_RefStatus.id], 
            T.IdOwner AS [Role_RefStatus.idOwner], 
            T.IdMaster AS [Role_RefStatus.idMaster], 
            T.IdRefStatus AS [Role_RefStatus.idRefStatus], 
            T.SwitchOn AS [Role_RefStatus.SwitchOn], 
            True AS _from0
        FROM DataContext.Role_RefStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Role_OrganizationRight
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Role_OrganizationRight", @"
    SELECT VALUE -- Constructing Role_OrganizationRight
        [CodeFirstDatabaseSchema.Role_OrganizationRight](T1.[Role_OrganizationRight.id], T1.[Role_OrganizationRight.idParentField], T1.[Role_OrganizationRight.idOwner], T1.[Role_OrganizationRight.idElement], T1.[Role_OrganizationRight.idElementEntity], T1.[Role_OrganizationRight.EditingFlag], T1.[Role_OrganizationRight.Disabled])
    FROM (
        SELECT 
            T.Id AS [Role_OrganizationRight.id], 
            T.IdParentField AS [Role_OrganizationRight.idParentField], 
            T.IdOwner AS [Role_OrganizationRight.idOwner], 
            T.IdElement AS [Role_OrganizationRight.idElement], 
            T.IdElementEntity AS [Role_OrganizationRight.idElementEntity], 
            T.EditingFlag AS [Role_OrganizationRight.EditingFlag], 
            T.Disabled AS [Role_OrganizationRight.Disabled], 
            True AS _from0
        FROM DataContext.Role_OrganizationRight AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EntityField
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EntityField", "\r\n    SELECT VALUE -- Constructing EntityField\r\n        [CodeFirstDatabaseSchema." +
                    "EntityField](T1.EntityField_id, T1.EntityField_Name, T1.EntityField_Caption, T1." +
                    "EntityField_idEntity, T1.EntityField_idEntityFieldType, T1.EntityField_Size, T1." +
                    "EntityField_Precision, T1.EntityField_RegExpValidator, T1.EntityField_AllowNull," +
                    " T1.EntityField_DefaultValue, T1.EntityField_isSystem, T1.EntityField_idEntityLi" +
                    "nk, T1.EntityField_idOwnerField, T1.EntityField_Expression, T1.EntityField_idFor" +
                    "eignKeyType, T1.EntityField_isCaption, T1.EntityField_isDescription, T1.EntityFi" +
                    "eld_isHidden, T1.EntityField_ReadOnly, T1.EntityField_idCalculatedFieldType, T1." +
                    "EntityField_Tooltip)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS EntityFie" +
                    "ld_id, \r\n            T.Name AS EntityField_Name, \r\n            T.Caption AS Enti" +
                    "tyField_Caption, \r\n            T.IdEntity AS EntityField_idEntity, \r\n           " +
                    " T.IdEntityFieldType AS EntityField_idEntityFieldType, \r\n            T.Size AS E" +
                    "ntityField_Size, \r\n            T.Precision AS EntityField_Precision, \r\n         " +
                    "   T.RegExpValidator AS EntityField_RegExpValidator, \r\n            T.AllowNull A" +
                    "S EntityField_AllowNull, \r\n            T.DefaultValue AS EntityField_DefaultValu" +
                    "e, \r\n            T.IsSystem AS EntityField_isSystem, \r\n            T.IdEntityLin" +
                    "k AS EntityField_idEntityLink, \r\n            T.IdOwnerField AS EntityField_idOwn" +
                    "erField, \r\n            T.Expression AS EntityField_Expression, \r\n            T.I" +
                    "dForeignKeyType AS EntityField_idForeignKeyType, \r\n            T.IsCaption AS En" +
                    "tityField_isCaption, \r\n            T.IsDescription AS EntityField_isDescription," +
                    " \r\n            T.IsHidden AS EntityField_isHidden, \r\n            T.ReadOnly AS E" +
                    "ntityField_ReadOnly, \r\n            T.IdCalculatedFieldType AS EntityField_idCalc" +
                    "ulatedFieldType, \r\n            T.Tooltip AS EntityField_Tooltip, \r\n            T" +
                    "rue AS _from0\r\n        FROM DataContext.EntityField AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EntityOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EntityOperation", @"
    SELECT VALUE -- Constructing EntityOperation
        [CodeFirstDatabaseSchema.EntityOperation](T1.EntityOperation_id, T1.EntityOperation_idEntity, T1.EntityOperation_idOperation, T1.EntityOperation_isHidden)
    FROM (
        SELECT 
            T.Id AS EntityOperation_id, 
            T.IdEntity AS EntityOperation_idEntity, 
            T.IdOperation AS EntityOperation_idOperation, 
            T.IsHidden AS EntityOperation_isHidden, 
            True AS _from0
        FROM DataContext.EntityOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DocStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DocStatus", @"
    SELECT VALUE -- Constructing DocStatus
        [CodeFirstDatabaseSchema.DocStatus](T1.DocStatus_id, T1.DocStatus_Name, T1.DocStatus_Caption, T1.DocStatus_Description)
    FROM (
        SELECT 
            T.Id AS DocStatus_id, 
            T.Name AS DocStatus_Name, 
            T.Caption AS DocStatus_Caption, 
            T.Description AS DocStatus_Description, 
            True AS _from0
        FROM DataContext.DocStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DocType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DocType", @"
    SELECT VALUE -- Constructing DocType
        [CodeFirstDatabaseSchema.DocType](T1.DocType_id, T1.DocType_idEntity, T1.DocType_Caption)
    FROM (
        SELECT 
            T.Id AS DocType_id, 
            T.IdEntity AS DocType_idEntity, 
            T.Caption AS DocType_Caption, 
            True AS _from0
        FROM DataContext.DocType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SBP", @"
    SELECT VALUE -- Constructing SBP
        [CodeFirstDatabaseSchema.SBP](T1.SBP_id, T1.SBP_idPublicLegalFormation, T1.SBP_idOrganization, T1.SBP_Caption, T1.SBP_idSBPType, T1.SBP_isFounder, T1.SBP_idParent, T1.SBP_idKVSR, T1.SBP_ValidityFrom, T1.SBP_ValidityTo, T1.SBP_idRoot, T1.SBP_idRefStatus)
    FROM (
        SELECT 
            T.Id AS SBP_id, 
            T.IdPublicLegalFormation AS SBP_idPublicLegalFormation, 
            T.IdOrganization AS SBP_idOrganization, 
            T.Caption AS SBP_Caption, 
            T.IdSBPType AS SBP_idSBPType, 
            T.IsFounder AS SBP_isFounder, 
            T.IdParent AS SBP_idParent, 
            T.IdKVSR AS SBP_idKVSR, 
            T.ValidityFrom AS SBP_ValidityFrom, 
            T.ValidityTo AS SBP_ValidityTo, 
            T.IdRoot AS SBP_idRoot, 
            T.IdRefStatus AS SBP_idRefStatus, 
            True AS _from0
        FROM DataContext.SBP AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.KVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.KVSR", @"
    SELECT VALUE -- Constructing KVSR
        [CodeFirstDatabaseSchema.KVSR](T1.KVSR_id, T1.KVSR_idPublicLegalFormation, T1.KVSR_Caption, T1.KVSR_Description, T1.KVSR_ValidityFrom, T1.KVSR_ValidityTo, T1.KVSR_idRoot, T1.KVSR_idRefStatus)
    FROM (
        SELECT 
            T.Id AS KVSR_id, 
            T.IdPublicLegalFormation AS KVSR_idPublicLegalFormation, 
            T.Caption AS KVSR_Caption, 
            T.Description AS KVSR_Description, 
            T.ValidityFrom AS KVSR_ValidityFrom, 
            T.ValidityTo AS KVSR_ValidityTo, 
            T.IdRoot AS KVSR_idRoot, 
            T.IdRefStatus AS KVSR_idRefStatus, 
            True AS _from0
        FROM DataContext.KVSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SBP_Blank
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2075);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SBP_Blank\r\n        [CodeFirstDatabaseSchema.S");
            viewString.Append("BP_Blank](T1.[SBP_Blank.id], T1.[SBP_Blank.idOwner], T1.[SBP_Blank.idBudget], T1");
            viewString.Append(".[SBP_Blank.idBlankType], T1.[SBP_Blank.idBlankValueType_ExpenseObligationType],");
            viewString.Append(" T1.[SBP_Blank.idBlankValueType_FinanceSource], T1.[SBP_Blank.idBlankValueType_K");
            viewString.Append("FO], T1.[SBP_Blank.idBlankValueType_KVSR], T1.[SBP_Blank.idBlankValueType_RZPR],");
            viewString.Append(" T1.[SBP_Blank.idBlankValueType_KCSR], T1.[SBP_Blank.idBlankValueType_KVR], T1.[");
            viewString.Append("SBP_Blank.idBlankValueType_KOSGU], T1.[SBP_Blank.idBlankValueType_DFK], T1.[SBP_");
            viewString.Append("Blank.idBlankValueType_DKR], T1.[SBP_Blank.idBlankValueType_DEK], T1.[SBP_Blank.");
            viewString.Append("idBlankValueType_CodeSubsidy], T1.[SBP_Blank.idBlankValueType_BranchCode])\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.Id AS [SBP_Blank.id], \r\n            T.IdO");
            viewString.Append("wner AS [SBP_Blank.idOwner], \r\n            T.IdBudget AS [SBP_Blank.idBudget], \r");
            viewString.Append("\n            T.IdBlankType AS [SBP_Blank.idBlankType], \r\n            T.IdBlankVa");
            viewString.Append("lueType_ExpenseObligationType AS [SBP_Blank.idBlankValueType_ExpenseObligationTy");
            viewString.Append("pe], \r\n            T.IdBlankValueType_FinanceSource AS [SBP_Blank.idBlankValueTy");
            viewString.Append("pe_FinanceSource], \r\n            T.IdBlankValueType_KFO AS [SBP_Blank.idBlankVal");
            viewString.Append("ueType_KFO], \r\n            T.IdBlankValueType_KVSR AS [SBP_Blank.idBlankValueTyp");
            viewString.Append("e_KVSR], \r\n            T.IdBlankValueType_RZPR AS [SBP_Blank.idBlankValueType_RZ");
            viewString.Append("PR], \r\n            T.IdBlankValueType_KCSR AS [SBP_Blank.idBlankValueType_KCSR],");
            viewString.Append(" \r\n            T.IdBlankValueType_KVR AS [SBP_Blank.idBlankValueType_KVR], \r\n   ");
            viewString.Append("         T.IdBlankValueType_KOSGU AS [SBP_Blank.idBlankValueType_KOSGU], \r\n     ");
            viewString.Append("       T.IdBlankValueType_DFK AS [SBP_Blank.idBlankValueType_DFK], \r\n           ");
            viewString.Append(" T.IdBlankValueType_DKR AS [SBP_Blank.idBlankValueType_DKR], \r\n            T.IdB");
            viewString.Append("lankValueType_DEK AS [SBP_Blank.idBlankValueType_DEK], \r\n            T.IdBlankVa");
            viewString.Append("lueType_CodeSubsidy AS [SBP_Blank.idBlankValueType_CodeSubsidy], \r\n            T");
            viewString.Append(".IdBlankValueType_BranchCode AS [SBP_Blank.idBlankValueType_BranchCode], \r\n     ");
            viewString.Append("       True AS _from0\r\n        FROM DataContext.SBP_Blank AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SBP_Blank", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SBP_PlanningPeriodsInDocumentsAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SBP_PlanningPeriodsInDocumentsAUBU", @"
    SELECT VALUE -- Constructing SBP_PlanningPeriodsInDocumentsAUBU
        [CodeFirstDatabaseSchema.SBP_PlanningPeriodsInDocumentsAUBU](T1.[SBP_PlanningPeriodsInDocumentsAUBU.id], T1.[SBP_PlanningPeriodsInDocumentsAUBU.idOwner], T1.[SBP_PlanningPeriodsInDocumentsAUBU.idBudget], T1.[SBP_PlanningPeriodsInDocumentsAUBU.idDocAUBUPeriodType_OFG], T1.[SBP_PlanningPeriodsInDocumentsAUBU.idDocAUBUPeriodType_PFG1], T1.[SBP_PlanningPeriodsInDocumentsAUBU.idDocAUBUPeriodType_PFG2])
    FROM (
        SELECT 
            T.Id AS [SBP_PlanningPeriodsInDocumentsAUBU.id], 
            T.IdOwner AS [SBP_PlanningPeriodsInDocumentsAUBU.idOwner], 
            T.IdBudget AS [SBP_PlanningPeriodsInDocumentsAUBU.idBudget], 
            T.IdDocAUBUPeriodType_OFG AS [SBP_PlanningPeriodsInDocumentsAUBU.idDocAUBUPeriodType_OFG], 
            T.IdDocAUBUPeriodType_PFG1 AS [SBP_PlanningPeriodsInDocumentsAUBU.idDocAUBUPeriodType_PFG1], 
            T.IdDocAUBUPeriodType_PFG2 AS [SBP_PlanningPeriodsInDocumentsAUBU.idDocAUBUPeriodType_PFG2], 
            True AS _from0
        FROM DataContext.SBP_PlanningPeriodsInDocumentsAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SBP_BlankHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2429);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SBP_BlankHistory\r\n        [CodeFirstDatabaseS");
            viewString.Append("chema.SBP_BlankHistory](T1.[SBP_BlankHistory.id], T1.[SBP_BlankHistory.idOwner],");
            viewString.Append(" T1.[SBP_BlankHistory.DateCreate], T1.[SBP_BlankHistory.idBlankType], T1.[SBP_Bl");
            viewString.Append("ankHistory.idBlankValueType_ExpenseObligationType], T1.[SBP_BlankHistory.idBlank");
            viewString.Append("ValueType_FinanceSource], T1.[SBP_BlankHistory.idBlankValueType_KFO], T1.[SBP_Bl");
            viewString.Append("ankHistory.idBlankValueType_KVSR], T1.[SBP_BlankHistory.idBlankValueType_RZPR], ");
            viewString.Append("T1.[SBP_BlankHistory.idBlankValueType_KCSR], T1.[SBP_BlankHistory.idBlankValueTy");
            viewString.Append("pe_KVR], T1.[SBP_BlankHistory.idBlankValueType_KOSGU], T1.[SBP_BlankHistory.idBl");
            viewString.Append("ankValueType_DFK], T1.[SBP_BlankHistory.idBlankValueType_DKR], T1.[SBP_BlankHist");
            viewString.Append("ory.idBlankValueType_DEK], T1.[SBP_BlankHistory.idBlankValueType_CodeSubsidy], T");
            viewString.Append("1.[SBP_BlankHistory.idBlankValueType_BranchCode], T1.[SBP_BlankHistory.idBudget]");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [SBP_BlankHistory.id], \r\n   ");
            viewString.Append("         T.IdOwner AS [SBP_BlankHistory.idOwner], \r\n            T.DateCreate AS ");
            viewString.Append("[SBP_BlankHistory.DateCreate], \r\n            T.IdBlankType AS [SBP_BlankHistory.");
            viewString.Append("idBlankType], \r\n            T.IdBlankValueType_ExpenseObligationType AS [SBP_Bla");
            viewString.Append("nkHistory.idBlankValueType_ExpenseObligationType], \r\n            T.IdBlankValueT");
            viewString.Append("ype_FinanceSource AS [SBP_BlankHistory.idBlankValueType_FinanceSource], \r\n      ");
            viewString.Append("      T.IdBlankValueType_KFO AS [SBP_BlankHistory.idBlankValueType_KFO], \r\n     ");
            viewString.Append("       T.IdBlankValueType_KVSR AS [SBP_BlankHistory.idBlankValueType_KVSR], \r\n  ");
            viewString.Append("          T.IdBlankValueType_RZPR AS [SBP_BlankHistory.idBlankValueType_RZPR], \r");
            viewString.Append("\n            T.IdBlankValueType_KCSR AS [SBP_BlankHistory.idBlankValueType_KCSR]");
            viewString.Append(", \r\n            T.IdBlankValueType_KVR AS [SBP_BlankHistory.idBlankValueType_KVR");
            viewString.Append("], \r\n            T.IdBlankValueType_KOSGU AS [SBP_BlankHistory.idBlankValueType_");
            viewString.Append("KOSGU], \r\n            T.IdBlankValueType_DFK AS [SBP_BlankHistory.idBlankValueTy");
            viewString.Append("pe_DFK], \r\n            T.IdBlankValueType_DKR AS [SBP_BlankHistory.idBlankValueT");
            viewString.Append("ype_DKR], \r\n            T.IdBlankValueType_DEK AS [SBP_BlankHistory.idBlankValue");
            viewString.Append("Type_DEK], \r\n            T.IdBlankValueType_CodeSubsidy AS [SBP_BlankHistory.idB");
            viewString.Append("lankValueType_CodeSubsidy], \r\n            T.IdBlankValueType_BranchCode AS [SBP_");
            viewString.Append("BlankHistory.idBlankValueType_BranchCode], \r\n            T.IdBudget AS [SBP_Blan");
            viewString.Append("kHistory.idBudget], \r\n            True AS _from0\r\n        FROM DataContext.SBP_B");
            viewString.Append("lankHistory AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SBP_BlankHistory", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_SBPBlankActual
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_SBPBlankActual", @"
    SELECT VALUE -- Constructing ActivityOfSBP_SBPBlankActual
        [CodeFirstDatabaseSchema.ActivityOfSBP_SBPBlankActual](T1.[ActivityOfSBP_SBPBlankActual.id], T1.[ActivityOfSBP_SBPBlankActual.idOwner], T1.[ActivityOfSBP_SBPBlankActual.idSBP_BlankHistory])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_SBPBlankActual.id], 
            T.IdOwner AS [ActivityOfSBP_SBPBlankActual.idOwner], 
            T.IdSBP_BlankHistory AS [ActivityOfSBP_SBPBlankActual.idSBP_BlankHistory], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_SBPBlankActual AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2666);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ActivityOfSBP\r\n        [CodeFirstDatabaseSche");
            viewString.Append("ma.ActivityOfSBP](T1.ActivityOfSBP_id, T1.ActivityOfSBP_idPublicLegalFormation, ");
            viewString.Append("T1.ActivityOfSBP_idDocType, T1.ActivityOfSBP_idVersion, T1.ActivityOfSBP_Number,");
            viewString.Append(" T1.ActivityOfSBP_Date, T1.ActivityOfSBP_idAnalyticalCodeStateProgram, T1.Activi");
            viewString.Append("tyOfSBP_DateStart, T1.ActivityOfSBP_DateEnd, T1.ActivityOfSBP_DateCommit, T1.Act");
            viewString.Append("ivityOfSBP_isApproved, T1.ActivityOfSBP_Caption, T1.ActivityOfSBP_idResponsibleE");
            viewString.Append("xecutantType, T1.ActivityOfSBP_idSBP, T1.ActivityOfSBP_HasMasterDoc, T1.Activity");
            viewString.Append("OfSBP_idMasterDoc, T1.ActivityOfSBP_Description, T1.ActivityOfSBP_isRequireClari");
            viewString.Append("fication, T1.ActivityOfSBP_ReasonClarification, T1.ActivityOfSBP_DateTerminate, ");
            viewString.Append("T1.ActivityOfSBP_ReasonTerminate, T1.ActivityOfSBP_idParent, T1.ActivityOfSBP_Re");
            viewString.Append("asonCancel, T1.ActivityOfSBP_idDocStatus, T1.ActivityOfSBP_Header, T1.ActivityOf");
            viewString.Append("SBP_DateLastEdit, T1.ActivityOfSBP_HasAdditionalNeed)\r\n    FROM (\r\n        SELEC");
            viewString.Append("T \r\n            T.Id AS ActivityOfSBP_id, \r\n            T.IdPublicLegalFormation");
            viewString.Append(" AS ActivityOfSBP_idPublicLegalFormation, \r\n            T.IdDocType AS ActivityO");
            viewString.Append("fSBP_idDocType, \r\n            T.IdVersion AS ActivityOfSBP_idVersion, \r\n        ");
            viewString.Append("    T.Number AS ActivityOfSBP_Number, \r\n            T.Date AS ActivityOfSBP_Date");
            viewString.Append(", \r\n            T.IdAnalyticalCodeStateProgram AS ActivityOfSBP_idAnalyticalCode");
            viewString.Append("StateProgram, \r\n            T.DateStart AS ActivityOfSBP_DateStart, \r\n          ");
            viewString.Append("  T.DateEnd AS ActivityOfSBP_DateEnd, \r\n            T.DateCommit AS ActivityOfSB");
            viewString.Append("P_DateCommit, \r\n            T.IsApproved AS ActivityOfSBP_isApproved, \r\n        ");
            viewString.Append("    T.Caption AS ActivityOfSBP_Caption, \r\n            T.IdResponsibleExecutantTy");
            viewString.Append("pe AS ActivityOfSBP_idResponsibleExecutantType, \r\n            T.IdSBP AS Activit");
            viewString.Append("yOfSBP_idSBP, \r\n            T.HasMasterDoc AS ActivityOfSBP_HasMasterDoc, \r\n    ");
            viewString.Append("        T.IdMasterDoc AS ActivityOfSBP_idMasterDoc, \r\n            T.Description ");
            viewString.Append("AS ActivityOfSBP_Description, \r\n            T.IsRequireClarification AS Activity");
            viewString.Append("OfSBP_isRequireClarification, \r\n            T.ReasonClarification AS ActivityOfS");
            viewString.Append("BP_ReasonClarification, \r\n            T.DateTerminate AS ActivityOfSBP_DateTermi");
            viewString.Append("nate, \r\n            T.ReasonTerminate AS ActivityOfSBP_ReasonTerminate, \r\n      ");
            viewString.Append("      T.IdParent AS ActivityOfSBP_idParent, \r\n            T.ReasonCancel AS Acti");
            viewString.Append("vityOfSBP_ReasonCancel, \r\n            T.IdDocStatus AS ActivityOfSBP_idDocStatus");
            viewString.Append(", \r\n            T.Header AS ActivityOfSBP_Header, \r\n            T.DateLastEdit A");
            viewString.Append("S ActivityOfSBP_DateLastEdit, \r\n            T.HasAdditionalNeed AS ActivityOfSBP");
            viewString.Append("_HasAdditionalNeed, \r\n            True AS _from0\r\n        FROM DataContext.Activ");
            viewString.Append("ityOfSBP AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AnalyticalCodeStateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AnalyticalCodeStateProgram", @"
    SELECT VALUE -- Constructing AnalyticalCodeStateProgram
        [CodeFirstDatabaseSchema.AnalyticalCodeStateProgram](T1.AnalyticalCodeStateProgram_id, T1.AnalyticalCodeStateProgram_idPublicLegalFormation, T1.AnalyticalCodeStateProgram_idTypeOfAnalyticalCodeStateProgram, T1.AnalyticalCodeStateProgram_AnalyticalCode, T1.AnalyticalCodeStateProgram_Caption, T1.AnalyticalCodeStateProgram_idParent, T1.AnalyticalCodeStateProgram_idRefStatus)
    FROM (
        SELECT 
            T.Id AS AnalyticalCodeStateProgram_id, 
            T.IdPublicLegalFormation AS AnalyticalCodeStateProgram_idPublicLegalFormation, 
            T.IdTypeOfAnalyticalCodeStateProgram AS AnalyticalCodeStateProgram_idTypeOfAnalyticalCodeStateProgram, 
            T.AnalyticalCode AS AnalyticalCodeStateProgram_AnalyticalCode, 
            T.Caption AS AnalyticalCodeStateProgram_Caption, 
            T.IdParent AS AnalyticalCodeStateProgram_idParent, 
            T.IdRefStatus AS AnalyticalCodeStateProgram_idRefStatus, 
            True AS _from0
        FROM DataContext.AnalyticalCodeStateProgram AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ResponsibleExecutantType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ResponsibleExecutantType", @"
    SELECT VALUE -- Constructing ResponsibleExecutantType
        [CodeFirstDatabaseSchema.ResponsibleExecutantType](T1.ResponsibleExecutantType_id, T1.ResponsibleExecutantType_Caption, T1.ResponsibleExecutantType_idPublicLegalFormation, T1.ResponsibleExecutantType_idRefStatus)
    FROM (
        SELECT 
            T.Id AS ResponsibleExecutantType_id, 
            T.Caption AS ResponsibleExecutantType_Caption, 
            T.IdPublicLegalFormation AS ResponsibleExecutantType_idPublicLegalFormation, 
            T.IdRefStatus AS ResponsibleExecutantType_idRefStatus, 
            True AS _from0
        FROM DataContext.ResponsibleExecutantType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2520);
            viewString.Append("\r\n    SELECT VALUE -- Constructing StateProgram\r\n        [CodeFirstDatabaseSchem");
            viewString.Append("a.StateProgram](T1.StateProgram_id, T1.StateProgram_idPublicLegalFormation, T1.S");
            viewString.Append("tateProgram_idDocType, T1.StateProgram_idVersion, T1.StateProgram_Number, T1.Sta");
            viewString.Append("teProgram_Date, T1.StateProgram_idAnalyticalCodeStateProgram, T1.StateProgram_Da");
            viewString.Append("teStart, T1.StateProgram_DateEnd, T1.StateProgram_DateCommit, T1.StateProgram_is");
            viewString.Append("Approved, T1.StateProgram_Caption, T1.StateProgram_idResponsibleExecutantType, T");
            viewString.Append("1.StateProgram_idSBP, T1.StateProgram_Description, T1.StateProgram_idParent, T1.");
            viewString.Append("StateProgram_isRequireClarification, T1.StateProgram_ReasonClarification, T1.Sta");
            viewString.Append("teProgram_DateTerminate, T1.StateProgram_ReasonTerminate, T1.StateProgram_idMast");
            viewString.Append("erDoc, T1.StateProgram_ReasonCancel, T1.StateProgram_idDocStatus, T1.StateProgra");
            viewString.Append("m_Header, T1.StateProgram_DateLastEdit, T1.StateProgram_HasAdditionalNeed)\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.Id AS StateProgram_id, \r\n            T.Id");
            viewString.Append("PublicLegalFormation AS StateProgram_idPublicLegalFormation, \r\n            T.IdD");
            viewString.Append("ocType AS StateProgram_idDocType, \r\n            T.IdVersion AS StateProgram_idVe");
            viewString.Append("rsion, \r\n            T.Number AS StateProgram_Number, \r\n            T.Date AS St");
            viewString.Append("ateProgram_Date, \r\n            T.IdAnalyticalCodeStateProgram AS StateProgram_id");
            viewString.Append("AnalyticalCodeStateProgram, \r\n            T.DateStart AS StateProgram_DateStart,");
            viewString.Append(" \r\n            T.DateEnd AS StateProgram_DateEnd, \r\n            T.DateCommit AS ");
            viewString.Append("StateProgram_DateCommit, \r\n            T.IsApproved AS StateProgram_isApproved, ");
            viewString.Append("\r\n            T.Caption AS StateProgram_Caption, \r\n            T.IdResponsibleEx");
            viewString.Append("ecutantType AS StateProgram_idResponsibleExecutantType, \r\n            T.IdSBP AS");
            viewString.Append(" StateProgram_idSBP, \r\n            T.Description AS StateProgram_Description, \r\n");
            viewString.Append("            T.IdParent AS StateProgram_idParent, \r\n            T.IsRequireClarif");
            viewString.Append("ication AS StateProgram_isRequireClarification, \r\n            T.ReasonClarificat");
            viewString.Append("ion AS StateProgram_ReasonClarification, \r\n            T.DateTerminate AS StateP");
            viewString.Append("rogram_DateTerminate, \r\n            T.ReasonTerminate AS StateProgram_ReasonTerm");
            viewString.Append("inate, \r\n            T.IdMasterDoc AS StateProgram_idMasterDoc, \r\n            T.");
            viewString.Append("ReasonCancel AS StateProgram_ReasonCancel, \r\n            T.IdDocStatus AS StateP");
            viewString.Append("rogram_idDocStatus, \r\n            T.Header AS StateProgram_Header, \r\n           ");
            viewString.Append(" T.DateLastEdit AS StateProgram_DateLastEdit, \r\n            T.HasAdditionalNeed ");
            viewString.Append("AS StateProgram_HasAdditionalNeed, \r\n            True AS _from0\r\n        FROM Da");
            viewString.Append("taContext.StateProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_SystemGoalElement", "\r\n    SELECT VALUE -- Constructing StateProgram_SystemGoalElement\r\n        [CodeF" +
                    "irstDatabaseSchema.StateProgram_SystemGoalElement](T1.[StateProgram_SystemGoalEl" +
                    "ement.id], T1.[StateProgram_SystemGoalElement.idOwner], T1.[StateProgram_SystemG" +
                    "oalElement.FromAnotherDocumentSE], T1.[StateProgram_SystemGoalElement.idSystemGo" +
                    "al], T1.[StateProgram_SystemGoalElement.IsMainGoal], T1.[StateProgram_SystemGoal" +
                    "Element.Code], T1.[StateProgram_SystemGoalElement.idElementTypeSystemGoal], T1.[" +
                    "StateProgram_SystemGoalElement.DateStart], T1.[StateProgram_SystemGoalElement.Da" +
                    "teEnd], T1.[StateProgram_SystemGoalElement.idSBP], T1.[StateProgram_SystemGoalEl" +
                    "ement.idParent])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [StateProgram" +
                    "_SystemGoalElement.id], \r\n            T.IdOwner AS [StateProgram_SystemGoalEleme" +
                    "nt.idOwner], \r\n            T.FromAnotherDocumentSE AS [StateProgram_SystemGoalEl" +
                    "ement.FromAnotherDocumentSE], \r\n            T.IdSystemGoal AS [StateProgram_Syst" +
                    "emGoalElement.idSystemGoal], \r\n            T.IsMainGoal AS [StateProgram_SystemG" +
                    "oalElement.IsMainGoal], \r\n            T.Code AS [StateProgram_SystemGoalElement." +
                    "Code], \r\n            T.IdElementTypeSystemGoal AS [StateProgram_SystemGoalElemen" +
                    "t.idElementTypeSystemGoal], \r\n            T.DateStart AS [StateProgram_SystemGoa" +
                    "lElement.DateStart], \r\n            T.DateEnd AS [StateProgram_SystemGoalElement." +
                    "DateEnd], \r\n            T.IdSBP AS [StateProgram_SystemGoalElement.idSBP], \r\n   " +
                    "         T.IdParent AS [StateProgram_SystemGoalElement.idParent], \r\n            " +
                    "True AS _from0\r\n        FROM DataContext.StateProgram_SystemGoalElement AS T\r\n  " +
                    "  ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SystemGoal", "\r\n    SELECT VALUE -- Constructing SystemGoal\r\n        [CodeFirstDatabaseSchema.S" +
                    "ystemGoal](T1.SystemGoal_id, T1.SystemGoal_idPublicLegalFormation, T1.SystemGoal" +
                    "_idParent, T1.SystemGoal_Code, T1.SystemGoal_Caption, T1.SystemGoal_DateStart, T" +
                    "1.SystemGoal_DateEnd, T1.SystemGoal_idElementTypeSystemGoal, T1.SystemGoal_idSBP" +
                    ", T1.[SystemGoal.idDocType_CommitDoc], T1.SystemGoal_idRefStatus, T1.SystemGoal_" +
                    "DateCommit, T1.SystemGoal_isChanged, T1.SystemGoal_idCommitDoc, T1.SystemGoal_id" +
                    "CommitDocEntity, T1.SystemGoal_idImplementDoc, T1.SystemGoal_idImplementDocEntit" +
                    "y, T1.[SystemGoal.idDocType_ImplementDoc])\r\n    FROM (\r\n        SELECT \r\n       " +
                    "     T.Id AS SystemGoal_id, \r\n            T.IdPublicLegalFormation AS SystemGoal" +
                    "_idPublicLegalFormation, \r\n            T.IdParent AS SystemGoal_idParent, \r\n    " +
                    "        T.Code AS SystemGoal_Code, \r\n            T.Caption AS SystemGoal_Caption" +
                    ", \r\n            T.DateStart AS SystemGoal_DateStart, \r\n            T.DateEnd AS " +
                    "SystemGoal_DateEnd, \r\n            T.IdElementTypeSystemGoal AS SystemGoal_idElem" +
                    "entTypeSystemGoal, \r\n            T.IdSBP AS SystemGoal_idSBP, \r\n            T.Id" +
                    "DocType_CommitDoc AS [SystemGoal.idDocType_CommitDoc], \r\n            T.IdRefStat" +
                    "us AS SystemGoal_idRefStatus, \r\n            T.DateCommit AS SystemGoal_DateCommi" +
                    "t, \r\n            T.IsChanged AS SystemGoal_isChanged, \r\n            T.IdCommitDo" +
                    "c AS SystemGoal_idCommitDoc, \r\n            T.IdCommitDocEntity AS SystemGoal_idC" +
                    "ommitDocEntity, \r\n            T.IdImplementDoc AS SystemGoal_idImplementDoc, \r\n " +
                    "           T.IdImplementDocEntity AS SystemGoal_idImplementDocEntity, \r\n        " +
                    "    T.IdDocType_ImplementDoc AS [SystemGoal.idDocType_ImplementDoc], \r\n         " +
                    "   True AS _from0\r\n        FROM DataContext.SystemGoal AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ElementTypeSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ElementTypeSystemGoal", @"
    SELECT VALUE -- Constructing ElementTypeSystemGoal
        [CodeFirstDatabaseSchema.ElementTypeSystemGoal](T1.ElementTypeSystemGoal_id, T1.ElementTypeSystemGoal_idPublicLegalFormation, T1.ElementTypeSystemGoal_Caption, T1.ElementTypeSystemGoal_Description, T1.ElementTypeSystemGoal_idRefStatus)
    FROM (
        SELECT 
            T.Id AS ElementTypeSystemGoal_id, 
            T.IdPublicLegalFormation AS ElementTypeSystemGoal_idPublicLegalFormation, 
            T.Caption AS ElementTypeSystemGoal_Caption, 
            T.Description AS ElementTypeSystemGoal_Description, 
            T.IdRefStatus AS ElementTypeSystemGoal_idRefStatus, 
            True AS _from0
        FROM DataContext.ElementTypeSystemGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ElementTypeSystemGoal_Document
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ElementTypeSystemGoal_Document", @"
    SELECT VALUE -- Constructing ElementTypeSystemGoal_Document
        [CodeFirstDatabaseSchema.ElementTypeSystemGoal_Document](T1.[ElementTypeSystemGoal_Document.id], T1.[ElementTypeSystemGoal_Document.idOwner], T1.[ElementTypeSystemGoal_Document.idDocType], T1.[ElementTypeSystemGoal_Document.isDefault])
    FROM (
        SELECT 
            T.Id AS [ElementTypeSystemGoal_Document.id], 
            T.IdOwner AS [ElementTypeSystemGoal_Document.idOwner], 
            T.IdDocType AS [ElementTypeSystemGoal_Document.idDocType], 
            T.IsDefault AS [ElementTypeSystemGoal_Document.isDefault], 
            True AS _from0
        FROM DataContext.ElementTypeSystemGoal_Document AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SystemGoal_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SystemGoal_GoalIndicator", @"
    SELECT VALUE -- Constructing SystemGoal_GoalIndicator
        [CodeFirstDatabaseSchema.SystemGoal_GoalIndicator](T1.[SystemGoal_GoalIndicator.id], T1.[SystemGoal_GoalIndicator.idOwner], T1.[SystemGoal_GoalIndicator.idGoalIndicator], T1.[SystemGoal_GoalIndicator.idVersion])
    FROM (
        SELECT 
            T.Id AS [SystemGoal_GoalIndicator.id], 
            T.IdOwner AS [SystemGoal_GoalIndicator.idOwner], 
            T.IdGoalIndicator AS [SystemGoal_GoalIndicator.idGoalIndicator], 
            T.IdVersion AS [SystemGoal_GoalIndicator.idVersion], 
            True AS _from0
        FROM DataContext.SystemGoal_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.GoalIndicator", @"
    SELECT VALUE -- Constructing GoalIndicator
        [CodeFirstDatabaseSchema.GoalIndicator](T1.GoalIndicator_id, T1.GoalIndicator_idPublicLegalFormation, T1.GoalIndicator_Code, T1.GoalIndicator_Caption, T1.GoalIndicator_idUnitDimension, T1.GoalIndicator_idTermsOfPerception, T1.GoalIndicator_idSBP, T1.GoalIndicator_idRefStatus, T1.GoalIndicator_idCalculationFormula, T1.GoalIndicator_idRegulatoryAct, T1.GoalIndicator_IndicatedCumulatively)
    FROM (
        SELECT 
            T.Id AS GoalIndicator_id, 
            T.IdPublicLegalFormation AS GoalIndicator_idPublicLegalFormation, 
            T.Code AS GoalIndicator_Code, 
            T.Caption AS GoalIndicator_Caption, 
            T.IdUnitDimension AS GoalIndicator_idUnitDimension, 
            T.IdTermsOfPerception AS GoalIndicator_idTermsOfPerception, 
            T.IdSBP AS GoalIndicator_idSBP, 
            T.IdRefStatus AS GoalIndicator_idRefStatus, 
            T.IdCalculationFormula AS GoalIndicator_idCalculationFormula, 
            T.IdRegulatoryAct AS GoalIndicator_idRegulatoryAct, 
            T.IndicatedCumulatively AS GoalIndicator_IndicatedCumulatively, 
            True AS _from0
        FROM DataContext.GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.UnitDimension
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.UnitDimension", @"
    SELECT VALUE -- Constructing UnitDimension
        [CodeFirstDatabaseSchema.UnitDimension](T1.UnitDimension_id, T1.UnitDimension_OKEICode, T1.UnitDimension_Caption, T1.UnitDimension_Symbol, T1.UnitDimension_InternationalAbbreviation, T1.UnitDimension_idRefStatus)
    FROM (
        SELECT 
            T.Id AS UnitDimension_id, 
            T.OKEICode AS UnitDimension_OKEICode, 
            T.Caption AS UnitDimension_Caption, 
            T.Symbol AS UnitDimension_Symbol, 
            T.InternationalAbbreviation AS UnitDimension_InternationalAbbreviation, 
            T.IdRefStatus AS UnitDimension_idRefStatus, 
            True AS _from0
        FROM DataContext.UnitDimension AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.CalculationFormula
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.CalculationFormula", @"
    SELECT VALUE -- Constructing CalculationFormula
        [CodeFirstDatabaseSchema.CalculationFormula](T1.CalculationFormula_id, T1.CalculationFormula_idPublicLegalFormation, T1.CalculationFormula_Caption, T1.CalculationFormula_Description, T1.CalculationFormula_idRefStatus)
    FROM (
        SELECT 
            T.Id AS CalculationFormula_id, 
            T.IdPublicLegalFormation AS CalculationFormula_idPublicLegalFormation, 
            T.Caption AS CalculationFormula_Caption, 
            T.Description AS CalculationFormula_Description, 
            T.IdRefStatus AS CalculationFormula_idRefStatus, 
            True AS _from0
        FROM DataContext.CalculationFormula AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.IndicatorCalculation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.IndicatorCalculation", @"
    SELECT VALUE -- Constructing IndicatorCalculation
        [CodeFirstDatabaseSchema.IndicatorCalculation](T1.IndicatorCalculation_id, T1.IndicatorCalculation_idPublicLegalFormation, T1.IndicatorCalculation_Caption, T1.IndicatorCalculation_Symbol, T1.IndicatorCalculation_idUnitDimension, T1.IndicatorCalculation_DefaultValue, T1.IndicatorCalculation_idIndicatorCalculationValueType, T1.IndicatorCalculation_idRefStatus)
    FROM (
        SELECT 
            T.Id AS IndicatorCalculation_id, 
            T.IdPublicLegalFormation AS IndicatorCalculation_idPublicLegalFormation, 
            T.Caption AS IndicatorCalculation_Caption, 
            T.Symbol AS IndicatorCalculation_Symbol, 
            T.IdUnitDimension AS IndicatorCalculation_idUnitDimension, 
            T.DefaultValue AS IndicatorCalculation_DefaultValue, 
            T.IdIndicatorCalculationValueType AS IndicatorCalculation_idIndicatorCalculationValueType, 
            T.IdRefStatus AS IndicatorCalculation_idRefStatus, 
            True AS _from0
        FROM DataContext.IndicatorCalculation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegulatoryAct", @"
    SELECT VALUE -- Constructing RegulatoryAct
        [CodeFirstDatabaseSchema.RegulatoryAct](T1.RegulatoryAct_id, T1.RegulatoryAct_idPublicLegalFormation, T1.RegulatoryAct_idBudgetLevel, T1.RegulatoryAct_idTypeRegulatoryAct, T1.RegulatoryAct_Number, T1.RegulatoryAct_Date, T1.RegulatoryAct_DateStart, T1.RegulatoryAct_DateEnd, T1.RegulatoryAct_AuthorityRegulatoryAct, T1.RegulatoryAct_Caption, T1.RegulatoryAct_idRefStatus)
    FROM (
        SELECT 
            T.Id AS RegulatoryAct_id, 
            T.IdPublicLegalFormation AS RegulatoryAct_idPublicLegalFormation, 
            T.IdBudgetLevel AS RegulatoryAct_idBudgetLevel, 
            T.IdTypeRegulatoryAct AS RegulatoryAct_idTypeRegulatoryAct, 
            T.Number AS RegulatoryAct_Number, 
            T.Date AS RegulatoryAct_Date, 
            T.DateStart AS RegulatoryAct_DateStart, 
            T.DateEnd AS RegulatoryAct_DateEnd, 
            T.AuthorityRegulatoryAct AS RegulatoryAct_AuthorityRegulatoryAct, 
            T.Caption AS RegulatoryAct_Caption, 
            T.IdRefStatus AS RegulatoryAct_idRefStatus, 
            True AS _from0
        FROM DataContext.RegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TypeRegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TypeRegulatoryAct", @"
    SELECT VALUE -- Constructing TypeRegulatoryAct
        [CodeFirstDatabaseSchema.TypeRegulatoryAct](T1.TypeRegulatoryAct_id, T1.TypeRegulatoryAct_idAccessGroup, T1.TypeRegulatoryAct_Caption, T1.TypeRegulatoryAct_idRefStatus)
    FROM (
        SELECT 
            T.Id AS TypeRegulatoryAct_id, 
            T.IdAccessGroup AS TypeRegulatoryAct_idAccessGroup, 
            T.Caption AS TypeRegulatoryAct_Caption, 
            T.IdRefStatus AS TypeRegulatoryAct_idRefStatus, 
            True AS _from0
        FROM DataContext.TypeRegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegulatoryAct_StructuralUnit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegulatoryAct_StructuralUnit", @"
    SELECT VALUE -- Constructing RegulatoryAct_StructuralUnit
        [CodeFirstDatabaseSchema.RegulatoryAct_StructuralUnit](T1.[RegulatoryAct_StructuralUnit.id], T1.[RegulatoryAct_StructuralUnit.idOwner], T1.[RegulatoryAct_StructuralUnit.Article], T1.[RegulatoryAct_StructuralUnit.Part], T1.[RegulatoryAct_StructuralUnit.Item], T1.[RegulatoryAct_StructuralUnit.SubItem], T1.[RegulatoryAct_StructuralUnit.Paragraph], T1.[RegulatoryAct_StructuralUnit.Caption])
    FROM (
        SELECT 
            T.Id AS [RegulatoryAct_StructuralUnit.id], 
            T.IdOwner AS [RegulatoryAct_StructuralUnit.idOwner], 
            T.Article AS [RegulatoryAct_StructuralUnit.Article], 
            T.Part AS [RegulatoryAct_StructuralUnit.Part], 
            T.Item AS [RegulatoryAct_StructuralUnit.Item], 
            T.SubItem AS [RegulatoryAct_StructuralUnit.SubItem], 
            T.Paragraph AS [RegulatoryAct_StructuralUnit.Paragraph], 
            T.Caption AS [RegulatoryAct_StructuralUnit.Caption], 
            True AS _from0
        FROM DataContext.RegulatoryAct_StructuralUnit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ExpenditureObligations_RegulatoryAct_StructuralUnit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ExpenditureObligations_RegulatoryAct_StructuralUnit", @"
    SELECT VALUE -- Constructing ExpenditureObligations_RegulatoryAct_StructuralUnit
        [CodeFirstDatabaseSchema.ExpenditureObligations_RegulatoryAct_StructuralUnit](T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.id], T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.idOwner], T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.idMaster], T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.idRegulatoryAct_StructuralUnit])
    FROM (
        SELECT 
            T.Id AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.id], 
            T.IdOwner AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.idOwner], 
            T.IdMaster AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.idMaster], 
            T.IdRegulatoryAct_StructuralUnit AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.idRegulatoryAct_StructuralUnit], 
            True AS _from0
        FROM DataContext.ExpenditureObligations_RegulatoryAct_StructuralUnit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ExpenditureObligations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ExpenditureObligations", @"
    SELECT VALUE -- Constructing ExpenditureObligations
        [CodeFirstDatabaseSchema.ExpenditureObligations](T1.ExpenditureObligations_id, T1.ExpenditureObligations_idPublicLegalFormation, T1.ExpenditureObligations_idSBP, T1.ExpenditureObligations_idAuthorityOfExpenseObligation, T1.ExpenditureObligations_Caption, T1.ExpenditureObligations_Description, T1.ExpenditureObligations_idRefStatus)
    FROM (
        SELECT 
            T.Id AS ExpenditureObligations_id, 
            T.IdPublicLegalFormation AS ExpenditureObligations_idPublicLegalFormation, 
            T.IdSBP AS ExpenditureObligations_idSBP, 
            T.IdAuthorityOfExpenseObligation AS ExpenditureObligations_idAuthorityOfExpenseObligation, 
            T.Caption AS ExpenditureObligations_Caption, 
            T.Description AS ExpenditureObligations_Description, 
            T.IdRefStatus AS ExpenditureObligations_idRefStatus, 
            True AS _from0
        FROM DataContext.ExpenditureObligations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AuthorityOfExpenseObligation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AuthorityOfExpenseObligation", @"
    SELECT VALUE -- Constructing AuthorityOfExpenseObligation
        [CodeFirstDatabaseSchema.AuthorityOfExpenseObligation](T1.AuthorityOfExpenseObligation_id, T1.AuthorityOfExpenseObligation_idParent, T1.AuthorityOfExpenseObligation_Caption, T1.AuthorityOfExpenseObligation_idAuthorityType, T1.AuthorityOfExpenseObligation_Description, T1.AuthorityOfExpenseObligation_LineNumber, T1.AuthorityOfExpenseObligation_idRefStatus)
    FROM (
        SELECT 
            T.Id AS AuthorityOfExpenseObligation_id, 
            T.IdParent AS AuthorityOfExpenseObligation_idParent, 
            T.Caption AS AuthorityOfExpenseObligation_Caption, 
            T.IdAuthorityType AS AuthorityOfExpenseObligation_idAuthorityType, 
            T.Description AS AuthorityOfExpenseObligation_Description, 
            T.LineNumber AS AuthorityOfExpenseObligation_LineNumber, 
            T.IdRefStatus AS AuthorityOfExpenseObligation_idRefStatus, 
            True AS _from0
        FROM DataContext.AuthorityOfExpenseObligation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ExpenditureObligations_RegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ExpenditureObligations_RegulatoryAct", @"
    SELECT VALUE -- Constructing ExpenditureObligations_RegulatoryAct
        [CodeFirstDatabaseSchema.ExpenditureObligations_RegulatoryAct](T1.[ExpenditureObligations_RegulatoryAct.id], T1.[ExpenditureObligations_RegulatoryAct.idOwner], T1.[ExpenditureObligations_RegulatoryAct.idRegulatoryAct])
    FROM (
        SELECT 
            T.Id AS [ExpenditureObligations_RegulatoryAct.id], 
            T.IdOwner AS [ExpenditureObligations_RegulatoryAct.idOwner], 
            T.IdRegulatoryAct AS [ExpenditureObligations_RegulatoryAct.idRegulatoryAct], 
            True AS _from0
        FROM DataContext.ExpenditureObligations_RegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SystemGoal_GoalIndicatorValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SystemGoal_GoalIndicatorValue", @"
    SELECT VALUE -- Constructing SystemGoal_GoalIndicatorValue
        [CodeFirstDatabaseSchema.SystemGoal_GoalIndicatorValue](T1.[SystemGoal_GoalIndicatorValue.id], T1.[SystemGoal_GoalIndicatorValue.idHierarchyPeriod], T1.[SystemGoal_GoalIndicatorValue.Value], T1.[SystemGoal_GoalIndicatorValue.idOwner], T1.[SystemGoal_GoalIndicatorValue.idMaster])
    FROM (
        SELECT 
            T.Id AS [SystemGoal_GoalIndicatorValue.id], 
            T.IdHierarchyPeriod AS [SystemGoal_GoalIndicatorValue.idHierarchyPeriod], 
            T.[Value] AS [SystemGoal_GoalIndicatorValue.Value], 
            T.IdOwner AS [SystemGoal_GoalIndicatorValue.idOwner], 
            T.IdMaster AS [SystemGoal_GoalIndicatorValue.idMaster], 
            True AS _from0
        FROM DataContext.SystemGoal_GoalIndicatorValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SystemGoal_GoalIndicatorParent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SystemGoal_GoalIndicatorParent", @"
    SELECT VALUE -- Constructing SystemGoal_GoalIndicatorParent
        [CodeFirstDatabaseSchema.SystemGoal_GoalIndicatorParent](T1.[SystemGoal_GoalIndicatorParent.id], T1.[SystemGoal_GoalIndicatorParent.idOwner], T1.[SystemGoal_GoalIndicatorParent.idGoalIndicator])
    FROM (
        SELECT 
            T.Id AS [SystemGoal_GoalIndicatorParent.id], 
            T.IdOwner AS [SystemGoal_GoalIndicatorParent.idOwner], 
            T.IdGoalIndicator AS [SystemGoal_GoalIndicatorParent.idGoalIndicator], 
            True AS _from0
        FROM DataContext.SystemGoal_GoalIndicatorParent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_GoalIndicator", @"
    SELECT VALUE -- Constructing StateProgram_GoalIndicator
        [CodeFirstDatabaseSchema.StateProgram_GoalIndicator](T1.[StateProgram_GoalIndicator.id], T1.[StateProgram_GoalIndicator.idOwner], T1.[StateProgram_GoalIndicator.idMaster], T1.[StateProgram_GoalIndicator.idGoalIndicator])
    FROM (
        SELECT 
            T.Id AS [StateProgram_GoalIndicator.id], 
            T.IdOwner AS [StateProgram_GoalIndicator.idOwner], 
            T.IdMaster AS [StateProgram_GoalIndicator.idMaster], 
            T.IdGoalIndicator AS [StateProgram_GoalIndicator.idGoalIndicator], 
            True AS _from0
        FROM DataContext.StateProgram_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_GoalIndicator_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_GoalIndicator_Value", @"
    SELECT VALUE -- Constructing StateProgram_GoalIndicator_Value
        [CodeFirstDatabaseSchema.StateProgram_GoalIndicator_Value](T1.[StateProgram_GoalIndicator_Value.id], T1.[StateProgram_GoalIndicator_Value.idHierarchyPeriod], T1.[StateProgram_GoalIndicator_Value.Value], T1.[StateProgram_GoalIndicator_Value.idOwner], T1.[StateProgram_GoalIndicator_Value.idMaster])
    FROM (
        SELECT 
            T.Id AS [StateProgram_GoalIndicator_Value.id], 
            T.IdHierarchyPeriod AS [StateProgram_GoalIndicator_Value.idHierarchyPeriod], 
            T.[Value] AS [StateProgram_GoalIndicator_Value.Value], 
            T.IdOwner AS [StateProgram_GoalIndicator_Value.idOwner], 
            T.IdMaster AS [StateProgram_GoalIndicator_Value.idMaster], 
            True AS _from0
        FROM DataContext.StateProgram_GoalIndicator_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_CoExecutor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_CoExecutor", @"
    SELECT VALUE -- Constructing StateProgram_CoExecutor
        [CodeFirstDatabaseSchema.StateProgram_CoExecutor](T1.[StateProgram_CoExecutor.id], T1.[StateProgram_CoExecutor.idOwner], T1.[StateProgram_CoExecutor.idSBP], T1.[StateProgram_CoExecutor.idResponsibleExecutantType])
    FROM (
        SELECT 
            T.Id AS [StateProgram_CoExecutor.id], 
            T.IdOwner AS [StateProgram_CoExecutor.idOwner], 
            T.IdSBP AS [StateProgram_CoExecutor.idSBP], 
            T.IdResponsibleExecutantType AS [StateProgram_CoExecutor.idResponsibleExecutantType], 
            True AS _from0
        FROM DataContext.StateProgram_CoExecutor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_ResourceMaintenance", @"
    SELECT VALUE -- Constructing StateProgram_ResourceMaintenance
        [CodeFirstDatabaseSchema.StateProgram_ResourceMaintenance](T1.[StateProgram_ResourceMaintenance.id], T1.[StateProgram_ResourceMaintenance.idOwner], T1.[StateProgram_ResourceMaintenance.idFinanceSource])
    FROM (
        SELECT 
            T.Id AS [StateProgram_ResourceMaintenance.id], 
            T.IdOwner AS [StateProgram_ResourceMaintenance.idOwner], 
            T.IdFinanceSource AS [StateProgram_ResourceMaintenance.idFinanceSource], 
            True AS _from0
        FROM DataContext.StateProgram_ResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FinanceSource", @"
    SELECT VALUE -- Constructing FinanceSource
        [CodeFirstDatabaseSchema.FinanceSource](T1.FinanceSource_id, T1.FinanceSource_Code, T1.FinanceSource_Caption, T1.FinanceSource_idFinanceSourceType, T1.FinanceSource_idRefStatus)
    FROM (
        SELECT 
            T.Id AS FinanceSource_id, 
            T.Code AS FinanceSource_Code, 
            T.Caption AS FinanceSource_Caption, 
            T.IdFinanceSourceType AS FinanceSource_idFinanceSourceType, 
            T.IdRefStatus AS FinanceSource_idRefStatus, 
            True AS _from0
        FROM DataContext.FinanceSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_ResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_ResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing StateProgram_ResourceMaintenance_Value
        [CodeFirstDatabaseSchema.StateProgram_ResourceMaintenance_Value](T1.[StateProgram_ResourceMaintenance_Value.id], T1.[StateProgram_ResourceMaintenance_Value.idHierarchyPeriod], T1.[StateProgram_ResourceMaintenance_Value.Value], T1.[StateProgram_ResourceMaintenance_Value.idOwner], T1.[StateProgram_ResourceMaintenance_Value.idMaster], T1.[StateProgram_ResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [StateProgram_ResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [StateProgram_ResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [StateProgram_ResourceMaintenance_Value.Value], 
            T.IdOwner AS [StateProgram_ResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [StateProgram_ResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [StateProgram_ResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.StateProgram_ResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_ListSubProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2135);
            viewString.Append("\r\n    SELECT VALUE -- Constructing StateProgram_ListSubProgram\r\n        [CodeFir");
            viewString.Append("stDatabaseSchema.StateProgram_ListSubProgram](T1.[StateProgram_ListSubProgram.id");
            viewString.Append("], T1.[StateProgram_ListSubProgram.ActiveDocumentCaption], T1.[StateProgram_List");
            viewString.Append("SubProgram.idOwner], T1.[StateProgram_ListSubProgram.idAnalyticalCodeStateProgra");
            viewString.Append("m], T1.[StateProgram_ListSubProgram.idDocType], T1.[StateProgram_ListSubProgram.");
            viewString.Append("idSBP], T1.[StateProgram_ListSubProgram.idResponsibleExecutantType], T1.[StatePr");
            viewString.Append("ogram_ListSubProgram.idSystemGoal], T1.[StateProgram_ListSubProgram.DateStart], ");
            viewString.Append("T1.[StateProgram_ListSubProgram.DateEnd], T1.[StateProgram_ListSubProgram.Captio");
            viewString.Append("n], T1.[StateProgram_ListSubProgram.idDocument], T1.[StateProgram_ListSubProgram");
            viewString.Append(".idDocumentEntity], T1.[StateProgram_ListSubProgram.idActiveDocStatus], T1.[Stat");
            viewString.Append("eProgram_ListSubProgram.idActiveDocument])\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.Id AS [StateProgram_ListSubProgram.id], \r\n            T.ActiveDocumentCap");
            viewString.Append("tion AS [StateProgram_ListSubProgram.ActiveDocumentCaption], \r\n            T.IdO");
            viewString.Append("wner AS [StateProgram_ListSubProgram.idOwner], \r\n            T.IdAnalyticalCodeS");
            viewString.Append("tateProgram AS [StateProgram_ListSubProgram.idAnalyticalCodeStateProgram], \r\n   ");
            viewString.Append("         T.IdDocType AS [StateProgram_ListSubProgram.idDocType], \r\n            T");
            viewString.Append(".IdSBP AS [StateProgram_ListSubProgram.idSBP], \r\n            T.IdResponsibleExec");
            viewString.Append("utantType AS [StateProgram_ListSubProgram.idResponsibleExecutantType], \r\n       ");
            viewString.Append("     T.IdSystemGoal AS [StateProgram_ListSubProgram.idSystemGoal], \r\n           ");
            viewString.Append(" T.DateStart AS [StateProgram_ListSubProgram.DateStart], \r\n            T.DateEnd");
            viewString.Append(" AS [StateProgram_ListSubProgram.DateEnd], \r\n            T.Caption AS [StateProg");
            viewString.Append("ram_ListSubProgram.Caption], \r\n            T.IdDocument AS [StateProgram_ListSub");
            viewString.Append("Program.idDocument], \r\n            T.IdDocumentEntity AS [StateProgram_ListSubPr");
            viewString.Append("ogram.idDocumentEntity], \r\n            T.IdActiveDocStatus AS [StateProgram_List");
            viewString.Append("SubProgram.idActiveDocStatus], \r\n            T.IdActiveDocument AS [StateProgram");
            viewString.Append("_ListSubProgram.idActiveDocument], \r\n            True AS _from0\r\n        FROM Da");
            viewString.Append("taContext.StateProgram_ListSubProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_ListSubProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_SubProgramResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_SubProgramResourceMaintenance", @"
    SELECT VALUE -- Constructing StateProgram_SubProgramResourceMaintenance
        [CodeFirstDatabaseSchema.StateProgram_SubProgramResourceMaintenance](T1.[StateProgram_SubProgramResourceMaintenance.id], T1.[StateProgram_SubProgramResourceMaintenance.idOwner], T1.[StateProgram_SubProgramResourceMaintenance.idMaster], T1.[StateProgram_SubProgramResourceMaintenance.idFinanceSource])
    FROM (
        SELECT 
            T.Id AS [StateProgram_SubProgramResourceMaintenance.id], 
            T.IdOwner AS [StateProgram_SubProgramResourceMaintenance.idOwner], 
            T.IdMaster AS [StateProgram_SubProgramResourceMaintenance.idMaster], 
            T.IdFinanceSource AS [StateProgram_SubProgramResourceMaintenance.idFinanceSource], 
            True AS _from0
        FROM DataContext.StateProgram_SubProgramResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_SubProgramResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_SubProgramResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing StateProgram_SubProgramResourceMaintenance_Value
        [CodeFirstDatabaseSchema.StateProgram_SubProgramResourceMaintenance_Value](T1.[StateProgram_SubProgramResourceMaintenance_Value.id], T1.[StateProgram_SubProgramResourceMaintenance_Value.idHierarchyPeriod], T1.[StateProgram_SubProgramResourceMaintenance_Value.Value], T1.[StateProgram_SubProgramResourceMaintenance_Value.idOwner], T1.[StateProgram_SubProgramResourceMaintenance_Value.idMaster], T1.[StateProgram_SubProgramResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [StateProgram_SubProgramResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [StateProgram_SubProgramResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [StateProgram_SubProgramResourceMaintenance_Value.Value], 
            T.IdOwner AS [StateProgram_SubProgramResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [StateProgram_SubProgramResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [StateProgram_SubProgramResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.StateProgram_SubProgramResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_DepartmentGoalProgramAndKeyActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2828);
            viewString.Append("\r\n    SELECT VALUE -- Constructing StateProgram_DepartmentGoalProgramAndKeyActiv");
            viewString.Append("ity\r\n        [CodeFirstDatabaseSchema.StateProgram_DepartmentGoalProgramAndKeyAc");
            viewString.Append("tivity](T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.id], T1.[StateProgr");
            viewString.Append("am_DepartmentGoalProgramAndKeyActivity.idOwner], T1.[StateProgram_DepartmentGoal");
            viewString.Append("ProgramAndKeyActivity.idAnalyticalCodeStateProgram], T1.[StateProgram_Department");
            viewString.Append("GoalProgramAndKeyActivity.idDocType], T1.[StateProgram_DepartmentGoalProgramAndK");
            viewString.Append("eyActivity.idSBP], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.idRespon");
            viewString.Append("sibleExecutantType], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.idSyst");
            viewString.Append("emGoal], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.DateStart], T1.[St");
            viewString.Append("ateProgram_DepartmentGoalProgramAndKeyActivity.DateEnd], T1.[StateProgram_Depart");
            viewString.Append("mentGoalProgramAndKeyActivity.Caption], T1.[StateProgram_DepartmentGoalProgramAn");
            viewString.Append("dKeyActivity.idDocument], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.i");
            viewString.Append("dDocumentEntity], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.idActiveD");
            viewString.Append("ocStatus], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.idActiveDocument");
            viewString.Append("], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.ActiveDocumentCaption])\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.Id AS [StateProgram_DepartmentGoalPr");
            viewString.Append("ogramAndKeyActivity.id], \r\n            T.IdOwner AS [StateProgram_DepartmentGoal");
            viewString.Append("ProgramAndKeyActivity.idOwner], \r\n            T.IdAnalyticalCodeStateProgram AS ");
            viewString.Append("[StateProgram_DepartmentGoalProgramAndKeyActivity.idAnalyticalCodeStateProgram],");
            viewString.Append(" \r\n            T.IdDocType AS [StateProgram_DepartmentGoalProgramAndKeyActivity.");
            viewString.Append("idDocType], \r\n            T.IdSBP AS [StateProgram_DepartmentGoalProgramAndKeyAc");
            viewString.Append("tivity.idSBP], \r\n            T.IdResponsibleExecutantType AS [StateProgram_Depar");
            viewString.Append("tmentGoalProgramAndKeyActivity.idResponsibleExecutantType], \r\n            T.IdSy");
            viewString.Append("stemGoal AS [StateProgram_DepartmentGoalProgramAndKeyActivity.idSystemGoal], \r\n ");
            viewString.Append("           T.DateStart AS [StateProgram_DepartmentGoalProgramAndKeyActivity.Date");
            viewString.Append("Start], \r\n            T.DateEnd AS [StateProgram_DepartmentGoalProgramAndKeyActi");
            viewString.Append("vity.DateEnd], \r\n            T.Caption AS [StateProgram_DepartmentGoalProgramAnd");
            viewString.Append("KeyActivity.Caption], \r\n            T.IdDocument AS [StateProgram_DepartmentGoal");
            viewString.Append("ProgramAndKeyActivity.idDocument], \r\n            T.IdDocumentEntity AS [StatePro");
            viewString.Append("gram_DepartmentGoalProgramAndKeyActivity.idDocumentEntity], \r\n            T.IdAc");
            viewString.Append("tiveDocStatus AS [StateProgram_DepartmentGoalProgramAndKeyActivity.idActiveDocSt");
            viewString.Append("atus], \r\n            T.IdActiveDocument AS [StateProgram_DepartmentGoalProgramAn");
            viewString.Append("dKeyActivity.idActiveDocument], \r\n            T.ActiveDocumentCaption AS [StateP");
            viewString.Append("rogram_DepartmentGoalProgramAndKeyActivity.ActiveDocumentCaption], \r\n           ");
            viewString.Append(" True AS _from0\r\n        FROM DataContext.StateProgram_DepartmentGoalProgramAndK");
            viewString.Append("eyActivity AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_DepartmentGoalProgramAndKeyActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_DGPKAResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_DGPKAResourceMaintenance", @"
    SELECT VALUE -- Constructing StateProgram_DGPKAResourceMaintenance
        [CodeFirstDatabaseSchema.StateProgram_DGPKAResourceMaintenance](T1.[StateProgram_DGPKAResourceMaintenance.id], T1.[StateProgram_DGPKAResourceMaintenance.idOwner], T1.[StateProgram_DGPKAResourceMaintenance.idMaster], T1.[StateProgram_DGPKAResourceMaintenance.idFinanceSource])
    FROM (
        SELECT 
            T.Id AS [StateProgram_DGPKAResourceMaintenance.id], 
            T.IdOwner AS [StateProgram_DGPKAResourceMaintenance.idOwner], 
            T.IdMaster AS [StateProgram_DGPKAResourceMaintenance.idMaster], 
            T.IdFinanceSource AS [StateProgram_DGPKAResourceMaintenance.idFinanceSource], 
            True AS _from0
        FROM DataContext.StateProgram_DGPKAResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StateProgram_DGPKAResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StateProgram_DGPKAResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing StateProgram_DGPKAResourceMaintenance_Value
        [CodeFirstDatabaseSchema.StateProgram_DGPKAResourceMaintenance_Value](T1.[StateProgram_DGPKAResourceMaintenance_Value.id], T1.[StateProgram_DGPKAResourceMaintenance_Value.idHierarchyPeriod], T1.[StateProgram_DGPKAResourceMaintenance_Value.Value], T1.[StateProgram_DGPKAResourceMaintenance_Value.idOwner], T1.[StateProgram_DGPKAResourceMaintenance_Value.idMaster], T1.[StateProgram_DGPKAResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [StateProgram_DGPKAResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [StateProgram_DGPKAResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [StateProgram_DGPKAResourceMaintenance_Value.Value], 
            T.IdOwner AS [StateProgram_DGPKAResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [StateProgram_DGPKAResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [StateProgram_DGPKAResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.StateProgram_DGPKAResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_SystemGoalElement", "\r\n    SELECT VALUE -- Constructing ActivityOfSBP_SystemGoalElement\r\n        [Code" +
                    "FirstDatabaseSchema.ActivityOfSBP_SystemGoalElement](T1.[ActivityOfSBP_SystemGoa" +
                    "lElement.id], T1.[ActivityOfSBP_SystemGoalElement.idOwner], T1.[ActivityOfSBP_Sy" +
                    "stemGoalElement.FromAnotherDocumentSE], T1.[ActivityOfSBP_SystemGoalElement.idSy" +
                    "stemGoal], T1.[ActivityOfSBP_SystemGoalElement.IsMainGoal], T1.[ActivityOfSBP_Sy" +
                    "stemGoalElement.Code], T1.[ActivityOfSBP_SystemGoalElement.idElementTypeSystemGo" +
                    "al], T1.[ActivityOfSBP_SystemGoalElement.DateStart], T1.[ActivityOfSBP_SystemGoa" +
                    "lElement.DateEnd], T1.[ActivityOfSBP_SystemGoalElement.idSBP], T1.[ActivityOfSBP" +
                    "_SystemGoalElement.idParent])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS " +
                    "[ActivityOfSBP_SystemGoalElement.id], \r\n            T.IdOwner AS [ActivityOfSBP_" +
                    "SystemGoalElement.idOwner], \r\n            T.FromAnotherDocumentSE AS [ActivityOf" +
                    "SBP_SystemGoalElement.FromAnotherDocumentSE], \r\n            T.IdSystemGoal AS [A" +
                    "ctivityOfSBP_SystemGoalElement.idSystemGoal], \r\n            T.IsMainGoal AS [Act" +
                    "ivityOfSBP_SystemGoalElement.IsMainGoal], \r\n            T.Code AS [ActivityOfSBP" +
                    "_SystemGoalElement.Code], \r\n            T.IdElementTypeSystemGoal AS [ActivityOf" +
                    "SBP_SystemGoalElement.idElementTypeSystemGoal], \r\n            T.DateStart AS [Ac" +
                    "tivityOfSBP_SystemGoalElement.DateStart], \r\n            T.DateEnd AS [ActivityOf" +
                    "SBP_SystemGoalElement.DateEnd], \r\n            T.IdSBP AS [ActivityOfSBP_SystemGo" +
                    "alElement.idSBP], \r\n            T.IdParent AS [ActivityOfSBP_SystemGoalElement.i" +
                    "dParent], \r\n            True AS _from0\r\n        FROM DataContext.ActivityOfSBP_S" +
                    "ystemGoalElement AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_GoalIndicator", @"
    SELECT VALUE -- Constructing ActivityOfSBP_GoalIndicator
        [CodeFirstDatabaseSchema.ActivityOfSBP_GoalIndicator](T1.[ActivityOfSBP_GoalIndicator.id], T1.[ActivityOfSBP_GoalIndicator.idOwner], T1.[ActivityOfSBP_GoalIndicator.idMaster], T1.[ActivityOfSBP_GoalIndicator.idGoalIndicator])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_GoalIndicator.id], 
            T.IdOwner AS [ActivityOfSBP_GoalIndicator.idOwner], 
            T.IdMaster AS [ActivityOfSBP_GoalIndicator.idMaster], 
            T.IdGoalIndicator AS [ActivityOfSBP_GoalIndicator.idGoalIndicator], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_GoalIndicator_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_GoalIndicator_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_GoalIndicator_Value
        [CodeFirstDatabaseSchema.ActivityOfSBP_GoalIndicator_Value](T1.[ActivityOfSBP_GoalIndicator_Value.id], T1.[ActivityOfSBP_GoalIndicator_Value.idHierarchyPeriod], T1.[ActivityOfSBP_GoalIndicator_Value.Value], T1.[ActivityOfSBP_GoalIndicator_Value.idOwner], T1.[ActivityOfSBP_GoalIndicator_Value.idMaster])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_GoalIndicator_Value.id], 
            T.IdHierarchyPeriod AS [ActivityOfSBP_GoalIndicator_Value.idHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_GoalIndicator_Value.Value], 
            T.IdOwner AS [ActivityOfSBP_GoalIndicator_Value.idOwner], 
            T.IdMaster AS [ActivityOfSBP_GoalIndicator_Value.idMaster], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_GoalIndicator_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_Activity", @"
    SELECT VALUE -- Constructing ActivityOfSBP_Activity
        [CodeFirstDatabaseSchema.ActivityOfSBP_Activity](T1.[ActivityOfSBP_Activity.id], T1.[ActivityOfSBP_Activity.idOwner], T1.[ActivityOfSBP_Activity.idMaster], T1.[ActivityOfSBP_Activity.idSBP], T1.[ActivityOfSBP_Activity.idContingent], T1.[ActivityOfSBP_Activity.idIndicatorActivity_Volume], T1.[ActivityOfSBP_Activity.idActivity])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_Activity.id], 
            T.IdOwner AS [ActivityOfSBP_Activity.idOwner], 
            T.IdMaster AS [ActivityOfSBP_Activity.idMaster], 
            T.IdSBP AS [ActivityOfSBP_Activity.idSBP], 
            T.IdContingent AS [ActivityOfSBP_Activity.idContingent], 
            T.IdIndicatorActivity_Volume AS [ActivityOfSBP_Activity.idIndicatorActivity_Volume], 
            T.IdActivity AS [ActivityOfSBP_Activity.idActivity], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Contingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Contingent", @"
    SELECT VALUE -- Constructing Contingent
        [CodeFirstDatabaseSchema.Contingent](T1.Contingent_id, T1.Contingent_idPublicLegalFormation, T1.Contingent_Caption, T1.Contingent_idRefStatus)
    FROM (
        SELECT 
            T.Id AS Contingent_id, 
            T.IdPublicLegalFormation AS Contingent_idPublicLegalFormation, 
            T.Caption AS Contingent_Caption, 
            T.IdRefStatus AS Contingent_idRefStatus, 
            True AS _from0
        FROM DataContext.Contingent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.CategoryContingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.CategoryContingent", @"
    SELECT VALUE -- Constructing CategoryContingent
        [CodeFirstDatabaseSchema.CategoryContingent](T1.CategoryContingent_id, T1.CategoryContingent_idPublicLegalFormation, T1.CategoryContingent_Caption, T1.CategoryContingent_idParent, T1.CategoryContingent_idRefStatus)
    FROM (
        SELECT 
            T.Id AS CategoryContingent_id, 
            T.IdPublicLegalFormation AS CategoryContingent_idPublicLegalFormation, 
            T.Caption AS CategoryContingent_Caption, 
            T.IdParent AS CategoryContingent_idParent, 
            T.IdRefStatus AS CategoryContingent_idRefStatus, 
            True AS _from0
        FROM DataContext.CategoryContingent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Activity", @"
    SELECT VALUE -- Constructing Activity
        [CodeFirstDatabaseSchema.Activity](T1.Activity_id, T1.Activity_idPublicLegalFormation, T1.Activity_Code, T1.Activity_idActivityType, T1.Activity_Caption, T1.Activity_FullCaption, T1.Activity_OrganSetPrice, T1.Activity_idRefStatus, T1.Activity_idPaidType)
    FROM (
        SELECT 
            T.Id AS Activity_id, 
            T.IdPublicLegalFormation AS Activity_idPublicLegalFormation, 
            T.Code AS Activity_Code, 
            T.IdActivityType AS Activity_idActivityType, 
            T.Caption AS Activity_Caption, 
            T.FullCaption AS Activity_FullCaption, 
            T.OrganSetPrice AS Activity_OrganSetPrice, 
            T.IdRefStatus AS Activity_idRefStatus, 
            T.IdPaidType AS Activity_idPaidType, 
            True AS _from0
        FROM DataContext.Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Activity_RegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Activity_RegulatoryAct", @"
    SELECT VALUE -- Constructing Activity_RegulatoryAct
        [CodeFirstDatabaseSchema.Activity_RegulatoryAct](T1.[Activity_RegulatoryAct.id], T1.[Activity_RegulatoryAct.idOwner], T1.[Activity_RegulatoryAct.idRegulatoryAct], T1.[Activity_RegulatoryAct.IsBasis], T1.[Activity_RegulatoryAct.IsEstablishQualityStandard], T1.[Activity_RegulatoryAct.IsSetMaxPrice], T1.[Activity_RegulatoryAct.idSBP])
    FROM (
        SELECT 
            T.Id AS [Activity_RegulatoryAct.id], 
            T.IdOwner AS [Activity_RegulatoryAct.idOwner], 
            T.IdRegulatoryAct AS [Activity_RegulatoryAct.idRegulatoryAct], 
            T.IsBasis AS [Activity_RegulatoryAct.IsBasis], 
            T.IsEstablishQualityStandard AS [Activity_RegulatoryAct.IsEstablishQualityStandard], 
            T.IsSetMaxPrice AS [Activity_RegulatoryAct.IsSetMaxPrice], 
            T.IdSBP AS [Activity_RegulatoryAct.idSBP], 
            True AS _from0
        FROM DataContext.Activity_RegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Activity_ExtInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Activity_ExtInfo", @"
    SELECT VALUE -- Constructing Activity_ExtInfo
        [CodeFirstDatabaseSchema.Activity_ExtInfo](T1.[Activity_ExtInfo.id], T1.[Activity_ExtInfo.idOwner], T1.[Activity_ExtInfo.Method], T1.[Activity_ExtInfo.Composition], T1.[Activity_ExtInfo.Periodicity], T1.[Activity_ExtInfo.idSBP])
    FROM (
        SELECT 
            T.Id AS [Activity_ExtInfo.id], 
            T.IdOwner AS [Activity_ExtInfo.idOwner], 
            T.Method AS [Activity_ExtInfo.Method], 
            T.Composition AS [Activity_ExtInfo.Composition], 
            T.Periodicity AS [Activity_ExtInfo.Periodicity], 
            T.IdSBP AS [Activity_ExtInfo.idSBP], 
            True AS _from0
        FROM DataContext.Activity_ExtInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Activity_CodeAuthority
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Activity_CodeAuthority", @"
    SELECT VALUE -- Constructing Activity_CodeAuthority
        [CodeFirstDatabaseSchema.Activity_CodeAuthority](T1.[Activity_CodeAuthority.id], T1.[Activity_CodeAuthority.idOwner], T1.[Activity_CodeAuthority.IsMain], T1.[Activity_CodeAuthority.idAuthorityOfExpenseObligation])
    FROM (
        SELECT 
            T.Id AS [Activity_CodeAuthority.id], 
            T.IdOwner AS [Activity_CodeAuthority.idOwner], 
            T.IsMain AS [Activity_CodeAuthority.IsMain], 
            T.IdAuthorityOfExpenseObligation AS [Activity_CodeAuthority.idAuthorityOfExpenseObligation], 
            True AS _from0
        FROM DataContext.Activity_CodeAuthority AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Activity_Indicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Activity_Indicator", @"
    SELECT VALUE -- Constructing Activity_Indicator
        [CodeFirstDatabaseSchema.Activity_Indicator](T1.[Activity_Indicator.id], T1.[Activity_Indicator.idOwner], T1.[Activity_Indicator.idIndicatorActivity], T1.[Activity_Indicator.idSBP])
    FROM (
        SELECT 
            T.Id AS [Activity_Indicator.id], 
            T.IdOwner AS [Activity_Indicator.idOwner], 
            T.IdIndicatorActivity AS [Activity_Indicator.idIndicatorActivity], 
            T.IdSBP AS [Activity_Indicator.idSBP], 
            True AS _from0
        FROM DataContext.Activity_Indicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.IndicatorActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.IndicatorActivity", @"
    SELECT VALUE -- Constructing IndicatorActivity
        [CodeFirstDatabaseSchema.IndicatorActivity](T1.IndicatorActivity_id, T1.IndicatorActivity_idPublicLegalFormation, T1.IndicatorActivity_idIndicatorActivityType, T1.IndicatorActivity_Caption, T1.IndicatorActivity_idUnitDimension, T1.IndicatorActivity_idSBP, T1.IndicatorActivity_idTermsOfPerception, T1.IndicatorActivity_idRefStatus, T1.IndicatorActivity_idCalculationFormula, T1.IndicatorActivity_idRegulatoryAct)
    FROM (
        SELECT 
            T.Id AS IndicatorActivity_id, 
            T.IdPublicLegalFormation AS IndicatorActivity_idPublicLegalFormation, 
            T.IdIndicatorActivityType AS IndicatorActivity_idIndicatorActivityType, 
            T.Caption AS IndicatorActivity_Caption, 
            T.IdUnitDimension AS IndicatorActivity_idUnitDimension, 
            T.IdSBP AS IndicatorActivity_idSBP, 
            T.IdTermsOfPerception AS IndicatorActivity_idTermsOfPerception, 
            T.IdRefStatus AS IndicatorActivity_idRefStatus, 
            T.IdCalculationFormula AS IndicatorActivity_idCalculationFormula, 
            T.IdRegulatoryAct AS IndicatorActivity_idRegulatoryAct, 
            True AS _from0
        FROM DataContext.IndicatorActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_ActivityResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3151);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ActivityOfSBP_ActivityResourceMaintenance\r\n  ");
            viewString.Append("      [CodeFirstDatabaseSchema.ActivityOfSBP_ActivityResourceMaintenance](T1.[Ac");
            viewString.Append("tivityOfSBP_ActivityResourceMaintenance.id], T1.[ActivityOfSBP_ActivityResourceM");
            viewString.Append("aintenance.idBudget], T1.[ActivityOfSBP_ActivityResourceMaintenance.idExpenseObl");
            viewString.Append("igationType], T1.[ActivityOfSBP_ActivityResourceMaintenance.idKFO], T1.[Activity");
            viewString.Append("OfSBP_ActivityResourceMaintenance.idKVSR], T1.[ActivityOfSBP_ActivityResourceMai");
            viewString.Append("ntenance.idRZPR], T1.[ActivityOfSBP_ActivityResourceMaintenance.idKCSR], T1.[Act");
            viewString.Append("ivityOfSBP_ActivityResourceMaintenance.idKVR], T1.[ActivityOfSBP_ActivityResourc");
            viewString.Append("eMaintenance.idKOSGU], T1.[ActivityOfSBP_ActivityResourceMaintenance.idDFK], T1.");
            viewString.Append("[ActivityOfSBP_ActivityResourceMaintenance.idDKR], T1.[ActivityOfSBP_ActivityRes");
            viewString.Append("ourceMaintenance.idDEK], T1.[ActivityOfSBP_ActivityResourceMaintenance.idCodeSub");
            viewString.Append("sidy], T1.[ActivityOfSBP_ActivityResourceMaintenance.idBranchCode], T1.[Activity");
            viewString.Append("OfSBP_ActivityResourceMaintenance.isDocument], T1.[ActivityOfSBP_ActivityResourc");
            viewString.Append("eMaintenance.idOwner], T1.[ActivityOfSBP_ActivityResourceMaintenance.idMaster], ");
            viewString.Append("T1.[ActivityOfSBP_ActivityResourceMaintenance.idFinanceSource], T1.[ActivityOfSB");
            viewString.Append("P_ActivityResourceMaintenance.idOKATO], T1.[ActivityOfSBP_ActivityResourceMainte");
            viewString.Append("nance.idAuthorityOfExpenseObligation])\r\n    FROM (\r\n        SELECT \r\n           ");
            viewString.Append(" T.Id AS [ActivityOfSBP_ActivityResourceMaintenance.id], \r\n            T.IdBudge");
            viewString.Append("t AS [ActivityOfSBP_ActivityResourceMaintenance.idBudget], \r\n            T.IdExp");
            viewString.Append("enseObligationType AS [ActivityOfSBP_ActivityResourceMaintenance.idExpenseObliga");
            viewString.Append("tionType], \r\n            T.IdKFO AS [ActivityOfSBP_ActivityResourceMaintenance.i");
            viewString.Append("dKFO], \r\n            T.IdKVSR AS [ActivityOfSBP_ActivityResourceMaintenance.idKV");
            viewString.Append("SR], \r\n            T.IdRZPR AS [ActivityOfSBP_ActivityResourceMaintenance.idRZPR");
            viewString.Append("], \r\n            T.IdKCSR AS [ActivityOfSBP_ActivityResourceMaintenance.idKCSR],");
            viewString.Append(" \r\n            T.IdKVR AS [ActivityOfSBP_ActivityResourceMaintenance.idKVR], \r\n ");
            viewString.Append("           T.IdKOSGU AS [ActivityOfSBP_ActivityResourceMaintenance.idKOSGU], \r\n ");
            viewString.Append("           T.IdDFK AS [ActivityOfSBP_ActivityResourceMaintenance.idDFK], \r\n     ");
            viewString.Append("       T.IdDKR AS [ActivityOfSBP_ActivityResourceMaintenance.idDKR], \r\n         ");
            viewString.Append("   T.IdDEK AS [ActivityOfSBP_ActivityResourceMaintenance.idDEK], \r\n            T");
            viewString.Append(".IdCodeSubsidy AS [ActivityOfSBP_ActivityResourceMaintenance.idCodeSubsidy], \r\n ");
            viewString.Append("           T.IdBranchCode AS [ActivityOfSBP_ActivityResourceMaintenance.idBranch");
            viewString.Append("Code], \r\n            T.IsDocument AS [ActivityOfSBP_ActivityResourceMaintenance.");
            viewString.Append("isDocument], \r\n            T.IdOwner AS [ActivityOfSBP_ActivityResourceMaintenan");
            viewString.Append("ce.idOwner], \r\n            T.IdMaster AS [ActivityOfSBP_ActivityResourceMaintena");
            viewString.Append("nce.idMaster], \r\n            T.IdFinanceSource AS [ActivityOfSBP_ActivityResourc");
            viewString.Append("eMaintenance.idFinanceSource], \r\n            T.IdOKATO AS [ActivityOfSBP_Activit");
            viewString.Append("yResourceMaintenance.idOKATO], \r\n            T.IdAuthorityOfExpenseObligation AS");
            viewString.Append(" [ActivityOfSBP_ActivityResourceMaintenance.idAuthorityOfExpenseObligation], \r\n ");
            viewString.Append("           True AS _from0\r\n        FROM DataContext.ActivityOfSBP_ActivityResour");
            viewString.Append("ceMaintenance AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_ActivityResourceMaintenance", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.KFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.KFO", @"
    SELECT VALUE -- Constructing KFO
        [CodeFirstDatabaseSchema.KFO](T1.KFO_id, T1.KFO_idRefStatus, T1.KFO_Code, T1.KFO_Caption, T1.KFO_IsIncludedInBudget, T1.KFO_ValidityFrom, T1.KFO_ValidityTo, T1.KFO_idRoot)
    FROM (
        SELECT 
            T.Id AS KFO_id, 
            T.IdRefStatus AS KFO_idRefStatus, 
            T.Code AS KFO_Code, 
            T.Caption AS KFO_Caption, 
            T.IsIncludedInBudget AS KFO_IsIncludedInBudget, 
            T.ValidityFrom AS KFO_ValidityFrom, 
            T.ValidityTo AS KFO_ValidityTo, 
            T.IdRoot AS KFO_idRoot, 
            True AS _from0
        FROM DataContext.KFO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RZPR", @"
    SELECT VALUE -- Constructing RZPR
        [CodeFirstDatabaseSchema.RZPR](T1.RZPR_id, T1.RZPR_idRefStatus, T1.RZPR_Code, T1.RZPR_Caption, T1.RZPR_idParent, T1.RZPR_ValidityFrom, T1.RZPR_ValidityTo, T1.RZPR_idRoot)
    FROM (
        SELECT 
            T.Id AS RZPR_id, 
            T.IdRefStatus AS RZPR_idRefStatus, 
            T.Code AS RZPR_Code, 
            T.Caption AS RZPR_Caption, 
            T.IdParent AS RZPR_idParent, 
            T.ValidityFrom AS RZPR_ValidityFrom, 
            T.ValidityTo AS RZPR_ValidityTo, 
            T.IdRoot AS RZPR_idRoot, 
            True AS _from0
        FROM DataContext.RZPR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.KCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.KCSR", @"
    SELECT VALUE -- Constructing KCSR
        [CodeFirstDatabaseSchema.KCSR](T1.KCSR_id, T1.KCSR_idRefStatus, T1.KCSR_Code, T1.KCSR_Caption, T1.KCSR_idPublicLegalFormation, T1.KCSR_idParent, T1.KCSR_ValidityFrom, T1.KCSR_ValidityTo, T1.KCSR_idRoot)
    FROM (
        SELECT 
            T.Id AS KCSR_id, 
            T.IdRefStatus AS KCSR_idRefStatus, 
            T.Code AS KCSR_Code, 
            T.Caption AS KCSR_Caption, 
            T.IdPublicLegalFormation AS KCSR_idPublicLegalFormation, 
            T.IdParent AS KCSR_idParent, 
            T.ValidityFrom AS KCSR_ValidityFrom, 
            T.ValidityTo AS KCSR_ValidityTo, 
            T.IdRoot AS KCSR_idRoot, 
            True AS _from0
        FROM DataContext.KCSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.KVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.KVR", @"
    SELECT VALUE -- Constructing KVR
        [CodeFirstDatabaseSchema.KVR](T1.KVR_id, T1.KVR_ValidityFrom, T1.KVR_ValidityTo, T1.KVR_idRoot, T1.KVR_idPublicLegalFormation, T1.KVR_Code, T1.KVR_Caption, T1.KVR_idParent, T1.KVR_idRefStatus)
    FROM (
        SELECT 
            T.Id AS KVR_id, 
            T.ValidityFrom AS KVR_ValidityFrom, 
            T.ValidityTo AS KVR_ValidityTo, 
            T.IdRoot AS KVR_idRoot, 
            T.IdPublicLegalFormation AS KVR_idPublicLegalFormation, 
            T.Code AS KVR_Code, 
            T.Caption AS KVR_Caption, 
            T.IdParent AS KVR_idParent, 
            T.IdRefStatus AS KVR_idRefStatus, 
            True AS _from0
        FROM DataContext.KVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.KOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.KOSGU", @"
    SELECT VALUE -- Constructing KOSGU
        [CodeFirstDatabaseSchema.KOSGU](T1.KOSGU_id, T1.KOSGU_idRefStatus, T1.KOSGU_Code, T1.KOSGU_Caption, T1.KOSGU_idParent, T1.KOSGU_ValidityFrom, T1.KOSGU_ValidityTo, T1.KOSGU_idRoot)
    FROM (
        SELECT 
            T.Id AS KOSGU_id, 
            T.IdRefStatus AS KOSGU_idRefStatus, 
            T.Code AS KOSGU_Code, 
            T.Caption AS KOSGU_Caption, 
            T.IdParent AS KOSGU_idParent, 
            T.ValidityFrom AS KOSGU_ValidityFrom, 
            T.ValidityTo AS KOSGU_ValidityTo, 
            T.IdRoot AS KOSGU_idRoot, 
            True AS _from0
        FROM DataContext.KOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DFK", @"
    SELECT VALUE -- Constructing DFK
        [CodeFirstDatabaseSchema.DFK](T1.DFK_id, T1.DFK_idRefStatus, T1.DFK_Code, T1.DFK_Caption, T1.DFK_idPublicLegalFormation, T1.DFK_idParent, T1.DFK_ValidityFrom, T1.DFK_ValidityTo, T1.DFK_idRoot)
    FROM (
        SELECT 
            T.Id AS DFK_id, 
            T.IdRefStatus AS DFK_idRefStatus, 
            T.Code AS DFK_Code, 
            T.Caption AS DFK_Caption, 
            T.IdPublicLegalFormation AS DFK_idPublicLegalFormation, 
            T.IdParent AS DFK_idParent, 
            T.ValidityFrom AS DFK_ValidityFrom, 
            T.ValidityTo AS DFK_ValidityTo, 
            T.IdRoot AS DFK_idRoot, 
            True AS _from0
        FROM DataContext.DFK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DKR", @"
    SELECT VALUE -- Constructing DKR
        [CodeFirstDatabaseSchema.DKR](T1.DKR_id, T1.DKR_idRefStatus, T1.DKR_Code, T1.DKR_Caption, T1.DKR_idPublicLegalFormation, T1.DKR_idParent, T1.DKR_ValidityFrom, T1.DKR_ValidityTo, T1.DKR_idRoot)
    FROM (
        SELECT 
            T.Id AS DKR_id, 
            T.IdRefStatus AS DKR_idRefStatus, 
            T.Code AS DKR_Code, 
            T.Caption AS DKR_Caption, 
            T.IdPublicLegalFormation AS DKR_idPublicLegalFormation, 
            T.IdParent AS DKR_idParent, 
            T.ValidityFrom AS DKR_ValidityFrom, 
            T.ValidityTo AS DKR_ValidityTo, 
            T.IdRoot AS DKR_idRoot, 
            True AS _from0
        FROM DataContext.DKR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DEK", @"
    SELECT VALUE -- Constructing DEK
        [CodeFirstDatabaseSchema.DEK](T1.DEK_id, T1.DEK_idRefStatus, T1.DEK_Code, T1.DEK_Caption, T1.DEK_idPublicLegalFormation, T1.DEK_idParent, T1.DEK_ValidityFrom, T1.DEK_ValidityTo, T1.DEK_idRoot)
    FROM (
        SELECT 
            T.Id AS DEK_id, 
            T.IdRefStatus AS DEK_idRefStatus, 
            T.Code AS DEK_Code, 
            T.Caption AS DEK_Caption, 
            T.IdPublicLegalFormation AS DEK_idPublicLegalFormation, 
            T.IdParent AS DEK_idParent, 
            T.ValidityFrom AS DEK_ValidityFrom, 
            T.ValidityTo AS DEK_ValidityTo, 
            T.IdRoot AS DEK_idRoot, 
            True AS _from0
        FROM DataContext.DEK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.CodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.CodeSubsidy", @"
    SELECT VALUE -- Constructing CodeSubsidy
        [CodeFirstDatabaseSchema.CodeSubsidy](T1.CodeSubsidy_id, T1.CodeSubsidy_idRefStatus, T1.CodeSubsidy_Code, T1.CodeSubsidy_Caption, T1.CodeSubsidy_idPublicLegalFormation, T1.CodeSubsidy_ValidityFrom, T1.CodeSubsidy_ValidityTo, T1.CodeSubsidy_idRoot, T1.CodeSubsidy_idParent)
    FROM (
        SELECT 
            T.Id AS CodeSubsidy_id, 
            T.IdRefStatus AS CodeSubsidy_idRefStatus, 
            T.Code AS CodeSubsidy_Code, 
            T.Caption AS CodeSubsidy_Caption, 
            T.IdPublicLegalFormation AS CodeSubsidy_idPublicLegalFormation, 
            T.ValidityFrom AS CodeSubsidy_ValidityFrom, 
            T.ValidityTo AS CodeSubsidy_ValidityTo, 
            T.IdRoot AS CodeSubsidy_idRoot, 
            T.IdParent AS CodeSubsidy_idParent, 
            True AS _from0
        FROM DataContext.CodeSubsidy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BranchCode", @"
    SELECT VALUE -- Constructing BranchCode
        [CodeFirstDatabaseSchema.BranchCode](T1.BranchCode_id, T1.BranchCode_idParent, T1.BranchCode_Code, T1.BranchCode_Caption, T1.BranchCode_idRefStatus, T1.BranchCode_idPublicLegalFormation, T1.BranchCode_ValidityFrom, T1.BranchCode_ValidityTo, T1.BranchCode_idRoot)
    FROM (
        SELECT 
            T.Id AS BranchCode_id, 
            T.IdParent AS BranchCode_idParent, 
            T.Code AS BranchCode_Code, 
            T.Caption AS BranchCode_Caption, 
            T.IdRefStatus AS BranchCode_idRefStatus, 
            T.IdPublicLegalFormation AS BranchCode_idPublicLegalFormation, 
            T.ValidityFrom AS BranchCode_ValidityFrom, 
            T.ValidityTo AS BranchCode_ValidityTo, 
            T.IdRoot AS BranchCode_idRoot, 
            True AS _from0
        FROM DataContext.BranchCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_ActivityResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_ActivityResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ActivityResourceMaintenance_Value
        [CodeFirstDatabaseSchema.ActivityOfSBP_ActivityResourceMaintenance_Value](T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.id], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.idHierarchyPeriod], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.Value], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.idOwner], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.idMaster], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_ActivityResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [ActivityOfSBP_ActivityResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_ActivityResourceMaintenance_Value.Value], 
            T.IdOwner AS [ActivityOfSBP_ActivityResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [ActivityOfSBP_ActivityResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [ActivityOfSBP_ActivityResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_ActivityResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_IndicatorQualityActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_IndicatorQualityActivity", @"
    SELECT VALUE -- Constructing ActivityOfSBP_IndicatorQualityActivity
        [CodeFirstDatabaseSchema.ActivityOfSBP_IndicatorQualityActivity](T1.[ActivityOfSBP_IndicatorQualityActivity.id], T1.[ActivityOfSBP_IndicatorQualityActivity.idOwner], T1.[ActivityOfSBP_IndicatorQualityActivity.idMaster], T1.[ActivityOfSBP_IndicatorQualityActivity.idIndicatorActivity])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_IndicatorQualityActivity.id], 
            T.IdOwner AS [ActivityOfSBP_IndicatorQualityActivity.idOwner], 
            T.IdMaster AS [ActivityOfSBP_IndicatorQualityActivity.idMaster], 
            T.IdIndicatorActivity AS [ActivityOfSBP_IndicatorQualityActivity.idIndicatorActivity], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_IndicatorQualityActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_IndicatorQualityActivity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_IndicatorQualityActivity_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_IndicatorQualityActivity_Value
        [CodeFirstDatabaseSchema.ActivityOfSBP_IndicatorQualityActivity_Value](T1.[ActivityOfSBP_IndicatorQualityActivity_Value.id], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.idHierarchyPeriod], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.Value], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.idOwner], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.idMaster], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_IndicatorQualityActivity_Value.id], 
            T.IdHierarchyPeriod AS [ActivityOfSBP_IndicatorQualityActivity_Value.idHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_IndicatorQualityActivity_Value.Value], 
            T.IdOwner AS [ActivityOfSBP_IndicatorQualityActivity_Value.idOwner], 
            T.IdMaster AS [ActivityOfSBP_IndicatorQualityActivity_Value.idMaster], 
            T.AdditionalValue AS [ActivityOfSBP_IndicatorQualityActivity_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_IndicatorQualityActivity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_Activity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_Activity_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_Activity_Value
        [CodeFirstDatabaseSchema.ActivityOfSBP_Activity_Value](T1.[ActivityOfSBP_Activity_Value.id], T1.[ActivityOfSBP_Activity_Value.idHierarchyPeriod], T1.[ActivityOfSBP_Activity_Value.Value], T1.[ActivityOfSBP_Activity_Value.idOwner], T1.[ActivityOfSBP_Activity_Value.idMaster], T1.[ActivityOfSBP_Activity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_Activity_Value.id], 
            T.IdHierarchyPeriod AS [ActivityOfSBP_Activity_Value.idHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_Activity_Value.Value], 
            T.IdOwner AS [ActivityOfSBP_Activity_Value.idOwner], 
            T.IdMaster AS [ActivityOfSBP_Activity_Value.idMaster], 
            T.AdditionalValue AS [ActivityOfSBP_Activity_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_Activity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_ActivityDemandAndCapacity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_ActivityDemandAndCapacity", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ActivityDemandAndCapacity
        [CodeFirstDatabaseSchema.ActivityOfSBP_ActivityDemandAndCapacity](T1.[ActivityOfSBP_ActivityDemandAndCapacity.id], T1.[ActivityOfSBP_ActivityDemandAndCapacity.idOwner], T1.[ActivityOfSBP_ActivityDemandAndCapacity.idActivity])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_ActivityDemandAndCapacity.id], 
            T.IdOwner AS [ActivityOfSBP_ActivityDemandAndCapacity.idOwner], 
            T.IdActivity AS [ActivityOfSBP_ActivityDemandAndCapacity.idActivity], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_ActivityDemandAndCapacity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_ActivityDemandAndCapacity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_ActivityDemandAndCapacity_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ActivityDemandAndCapacity_Value
        [CodeFirstDatabaseSchema.ActivityOfSBP_ActivityDemandAndCapacity_Value](T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.id], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.idOwner], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.idMaster], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.idHierarchyPeriod], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.Demand], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.Capacity])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.id], 
            T.IdOwner AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.idOwner], 
            T.IdMaster AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.idMaster], 
            T.IdHierarchyPeriod AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.idHierarchyPeriod], 
            T.Demand AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.Demand], 
            T.Capacity AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.Capacity], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_ActivityDemandAndCapacity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_ResourceMaintenance", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ResourceMaintenance
        [CodeFirstDatabaseSchema.ActivityOfSBP_ResourceMaintenance](T1.[ActivityOfSBP_ResourceMaintenance.id], T1.[ActivityOfSBP_ResourceMaintenance.idOwner], T1.[ActivityOfSBP_ResourceMaintenance.idFinanceSource])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_ResourceMaintenance.id], 
            T.IdOwner AS [ActivityOfSBP_ResourceMaintenance.idOwner], 
            T.IdFinanceSource AS [ActivityOfSBP_ResourceMaintenance.idFinanceSource], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_ResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityOfSBP_ResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityOfSBP_ResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ResourceMaintenance_Value
        [CodeFirstDatabaseSchema.ActivityOfSBP_ResourceMaintenance_Value](T1.[ActivityOfSBP_ResourceMaintenance_Value.id], T1.[ActivityOfSBP_ResourceMaintenance_Value.idHierarchyPeriod], T1.[ActivityOfSBP_ResourceMaintenance_Value.Value], T1.[ActivityOfSBP_ResourceMaintenance_Value.idOwner], T1.[ActivityOfSBP_ResourceMaintenance_Value.idMaster], T1.[ActivityOfSBP_ResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [ActivityOfSBP_ResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [ActivityOfSBP_ResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_ResourceMaintenance_Value.Value], 
            T.IdOwner AS [ActivityOfSBP_ResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [ActivityOfSBP_ResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [ActivityOfSBP_ResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.ActivityOfSBP_ResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DirectionAndFundingOfDepartment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2249);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DirectionAndFundingOfDepartment\r\n        [Cod");
            viewString.Append("eFirstDatabaseSchema.DirectionAndFundingOfDepartment](T1.DirectionAndFundingOfDe");
            viewString.Append("partment_id, T1.DirectionAndFundingOfDepartment_isTemporary, T1.DirectionAndFund");
            viewString.Append("ingOfDepartment_idPublicLegalFormation, T1.DirectionAndFundingOfDepartment_idBud");
            viewString.Append("get, T1.DirectionAndFundingOfDepartment_idVersion, T1.DirectionAndFundingOfDepar");
            viewString.Append("tment_Caption, T1.DirectionAndFundingOfDepartment_idProgram, T1.DirectionAndFund");
            viewString.Append("ingOfDepartment_byApproved, T1.DirectionAndFundingOfDepartment_isRatingAdditiona");
            viewString.Append("lNeeds, T1.DirectionAndFundingOfDepartment_DateReport, T1.DirectionAndFundingOfD");
            viewString.Append("epartment_repeatTableHeader, T1.DirectionAndFundingOfDepartment_idReportProfileT");
            viewString.Append("ype, T1.DirectionAndFundingOfDepartment_idReportProfileUser, T1.DirectionAndFund");
            viewString.Append("ingOfDepartment_ReportProfileCaption, T1.DirectionAndFundingOfDepartment_idSourc");
            viewString.Append("esDataReports)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS DirectionAndFun");
            viewString.Append("dingOfDepartment_id, \r\n            T.IsTemporary AS DirectionAndFundingOfDepartm");
            viewString.Append("ent_isTemporary, \r\n            T.IdPublicLegalFormation AS DirectionAndFundingOf");
            viewString.Append("Department_idPublicLegalFormation, \r\n            T.IdBudget AS DirectionAndFundi");
            viewString.Append("ngOfDepartment_idBudget, \r\n            T.IdVersion AS DirectionAndFundingOfDepar");
            viewString.Append("tment_idVersion, \r\n            T.Caption AS DirectionAndFundingOfDepartment_Capt");
            viewString.Append("ion, \r\n            T.IdProgram AS DirectionAndFundingOfDepartment_idProgram, \r\n ");
            viewString.Append("           T.ByApproved AS DirectionAndFundingOfDepartment_byApproved, \r\n       ");
            viewString.Append("     T.IsRatingAdditionalNeeds AS DirectionAndFundingOfDepartment_isRatingAdditi");
            viewString.Append("onalNeeds, \r\n            T.DateReport AS DirectionAndFundingOfDepartment_DateRep");
            viewString.Append("ort, \r\n            T.RepeatTableHeader AS DirectionAndFundingOfDepartment_repeat");
            viewString.Append("TableHeader, \r\n            T.IdReportProfileType AS DirectionAndFundingOfDepartm");
            viewString.Append("ent_idReportProfileType, \r\n            T.IdReportProfileUser AS DirectionAndFund");
            viewString.Append("ingOfDepartment_idReportProfileUser, \r\n            T.ReportProfileCaption AS Dir");
            viewString.Append("ectionAndFundingOfDepartment_ReportProfileCaption, \r\n            T.IdSourcesData");
            viewString.Append("Reports AS DirectionAndFundingOfDepartment_idSourcesDataReports, \r\n            T");
            viewString.Append("rue AS _from0\r\n        FROM DataContext.DirectionAndFundingOfDepartment AS T\r\n  ");
            viewString.Append("  ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DirectionAndFundingOfDepartment", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AnalysisBAofDirectAndIndirectCost
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AnalysisBAofDirectAndIndirectCost", "\r\n    SELECT VALUE -- Constructing AnalysisBAofDirectAndIndirectCost\r\n        [Co" +
                    "deFirstDatabaseSchema.AnalysisBAofDirectAndIndirectCost](T1.AnalysisBAofDirectAn" +
                    "dIndirectCost_id, T1.AnalysisBAofDirectAndIndirectCost_ReportProfileCaption, T1." +
                    "AnalysisBAofDirectAndIndirectCost_idReportProfileType, T1.AnalysisBAofDirectAndI" +
                    "ndirectCost_idReportProfileUser, T1.AnalysisBAofDirectAndIndirectCost_isTemporar" +
                    "y, T1.AnalysisBAofDirectAndIndirectCost_idBudget, T1.AnalysisBAofDirectAndIndire" +
                    "ctCost_idVersion, T1.AnalysisBAofDirectAndIndirectCost_byApproved, T1.AnalysisBA" +
                    "ofDirectAndIndirectCost_DateReport, T1.AnalysisBAofDirectAndIndirectCost_repeatT" +
                    "ableHeader, T1.AnalysisBAofDirectAndIndirectCost_idUnitDimension, T1.AnalysisBAo" +
                    "fDirectAndIndirectCost_byActivity, T1.AnalysisBAofDirectAndIndirectCost_bySBP)\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.Id AS AnalysisBAofDirectAndIndirectCo" +
                    "st_id, \r\n            T.ReportProfileCaption AS AnalysisBAofDirectAndIndirectCost" +
                    "_ReportProfileCaption, \r\n            T.IdReportProfileType AS AnalysisBAofDirect" +
                    "AndIndirectCost_idReportProfileType, \r\n            T.IdReportProfileUser AS Anal" +
                    "ysisBAofDirectAndIndirectCost_idReportProfileUser, \r\n            T.IsTemporary A" +
                    "S AnalysisBAofDirectAndIndirectCost_isTemporary, \r\n            T.IdBudget AS Ana" +
                    "lysisBAofDirectAndIndirectCost_idBudget, \r\n            T.IdVersion AS AnalysisBA" +
                    "ofDirectAndIndirectCost_idVersion, \r\n            T.ByApproved AS AnalysisBAofDir" +
                    "ectAndIndirectCost_byApproved, \r\n            T.DateReport AS AnalysisBAofDirectA" +
                    "ndIndirectCost_DateReport, \r\n            T.RepeatTableHeader AS AnalysisBAofDire" +
                    "ctAndIndirectCost_repeatTableHeader, \r\n            T.IdUnitDimension AS Analysis" +
                    "BAofDirectAndIndirectCost_idUnitDimension, \r\n            T.ByActivity AS Analysi" +
                    "sBAofDirectAndIndirectCost_byActivity, \r\n            T.BySBP AS AnalysisBAofDire" +
                    "ctAndIndirectCost_bySBP, \r\n            True AS _from0\r\n        FROM DataContext." +
                    "AnalysisBAofDirectAndIndirectCost AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EditionsComparision
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EditionsComparision", @"
    SELECT VALUE -- Constructing EditionsComparision
        [CodeFirstDatabaseSchema.EditionsComparision](T1.EditionsComparision_id, T1.EditionsComparision_isTemporary, T1.EditionsComparision_idEditionA, T1.EditionsComparision_idEditionAEntity, T1.EditionsComparision_idEditionB, T1.EditionsComparision_idEditionBEntity, T1.EditionsComparision_ReportProfileCaption, T1.EditionsComparision_idReportProfileType, T1.EditionsComparision_idReportProfileUser)
    FROM (
        SELECT 
            T.Id AS EditionsComparision_id, 
            T.IsTemporary AS EditionsComparision_isTemporary, 
            T.IdEditionA AS EditionsComparision_idEditionA, 
            T.IdEditionAEntity AS EditionsComparision_idEditionAEntity, 
            T.IdEditionB AS EditionsComparision_idEditionB, 
            T.IdEditionBEntity AS EditionsComparision_idEditionBEntity, 
            T.ReportProfileCaption AS EditionsComparision_ReportProfileCaption, 
            T.IdReportProfileType AS EditionsComparision_idReportProfileType, 
            T.IdReportProfileUser AS EditionsComparision_idReportProfileUser, 
            True AS _from0
        FROM DataContext.EditionsComparision AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Report1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Report1", @"
    SELECT VALUE -- Constructing Report1
        [CodeFirstDatabaseSchema.Report1](T1.Report1_id, T1.Report1_isTemporary, T1.Report1_Text, T1.Report1_SBP, T1.Report1_Boolean, T1.Report1_Date, T1.Report1_ReportProfileCaption, T1.Report1_idReportProfileType, T1.Report1_idReportProfileUser)
    FROM (
        SELECT 
            T.Id AS Report1_id, 
            T.IsTemporary AS Report1_isTemporary, 
            T.Text AS Report1_Text, 
            T.SBP AS Report1_SBP, 
            T.Boolean AS Report1_Boolean, 
            T.Date AS Report1_Date, 
            T.ReportProfileCaption AS Report1_ReportProfileCaption, 
            T.IdReportProfileType AS Report1_idReportProfileType, 
            T.IdReportProfileUser AS Report1_idReportProfileUser, 
            True AS _from0
        FROM DataContext.Report1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Report1_Tp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Report1_Tp", @"
    SELECT VALUE -- Constructing Report1_Tp
        [CodeFirstDatabaseSchema.Report1_Tp](T1.[Report1_Tp.id], T1.[Report1_Tp.idOwner], T1.[Report1_Tp.Name])
    FROM (
        SELECT 
            T.Id AS [Report1_Tp.id], 
            T.IdOwner AS [Report1_Tp.idOwner], 
            T.Name AS [Report1_Tp.Name], 
            True AS _from0
        FROM DataContext.Report1_Tp AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestAuditReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestAuditReport", @"
    SELECT VALUE -- Constructing TestAuditReport
        [CodeFirstDatabaseSchema.TestAuditReport](T1.TestAuditReport_id, T1.TestAuditReport_isTemporary, T1.TestAuditReport_DateFrom, T1.TestAuditReport_DateTo, T1.TestAuditReport_idUser, T1.TestAuditReport_ReportProfileCaption, T1.TestAuditReport_idReportProfileType, T1.TestAuditReport_idReportProfileUser)
    FROM (
        SELECT 
            T.Id AS TestAuditReport_id, 
            T.IsTemporary AS TestAuditReport_isTemporary, 
            T.DateFrom AS TestAuditReport_DateFrom, 
            T.DateTo AS TestAuditReport_DateTo, 
            T.IdUser AS TestAuditReport_idUser, 
            T.ReportProfileCaption AS TestAuditReport_ReportProfileCaption, 
            T.IdReportProfileType AS TestAuditReport_idReportProfileType, 
            T.IdReportProfileUser AS TestAuditReport_idReportProfileUser, 
            True AS _from0
        FROM DataContext.TestAuditReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure\r\n        [CodeFirstDat" +
                    "abaseSchema.ConsolidatedExpenditure](T1.ConsolidatedExpenditure_id, T1.Consolida" +
                    "tedExpenditure_ReportProfileCaption, T1.ConsolidatedExpenditure_idReportProfileT" +
                    "ype, T1.ConsolidatedExpenditure_idReportProfileUser, T1.ConsolidatedExpenditure_" +
                    "isTemporary, T1.ConsolidatedExpenditure_idPublicLegalFormation, T1.ConsolidatedE" +
                    "xpenditure_idHierarchyPeriod, T1.ConsolidatedExpenditure_idUnitDimension, T1.Con" +
                    "solidatedExpenditure_idSourcesDataReports, T1.ConsolidatedExpenditure_isApproved" +
                    "Only, T1.ConsolidatedExpenditure_ReportDate, T1.ConsolidatedExpenditure_Caption," +
                    " T1.ConsolidatedExpenditure_repeatTableHeader, T1.ConsolidatedExpenditure_idCurr" +
                    "entPPO)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS ConsolidatedExpenditur" +
                    "e_id, \r\n            T.ReportProfileCaption AS ConsolidatedExpenditure_ReportProf" +
                    "ileCaption, \r\n            T.IdReportProfileType AS ConsolidatedExpenditure_idRep" +
                    "ortProfileType, \r\n            T.IdReportProfileUser AS ConsolidatedExpenditure_i" +
                    "dReportProfileUser, \r\n            T.IsTemporary AS ConsolidatedExpenditure_isTem" +
                    "porary, \r\n            T.IdPublicLegalFormation AS ConsolidatedExpenditure_idPubl" +
                    "icLegalFormation, \r\n            T.IdHierarchyPeriod AS ConsolidatedExpenditure_i" +
                    "dHierarchyPeriod, \r\n            T.IdUnitDimension AS ConsolidatedExpenditure_idU" +
                    "nitDimension, \r\n            T.IdSourcesDataReports AS ConsolidatedExpenditure_id" +
                    "SourcesDataReports, \r\n            T.IsApprovedOnly AS ConsolidatedExpenditure_is" +
                    "ApprovedOnly, \r\n            T.ReportDate AS ConsolidatedExpenditure_ReportDate, " +
                    "\r\n            T.Caption AS ConsolidatedExpenditure_Caption, \r\n            T.Repe" +
                    "atTableHeader AS ConsolidatedExpenditure_repeatTableHeader, \r\n            T.IdCu" +
                    "rrentPPO AS ConsolidatedExpenditure_idCurrentPPO, \r\n            True AS _from0\r\n" +
                    "        FROM DataContext.ConsolidatedExpenditure AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_PPO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_PPO", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_PPO
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_PPO](T1.[ConsolidatedExpenditure_PPO.id], T1.[ConsolidatedExpenditure_PPO.idOwner], T1.[ConsolidatedExpenditure_PPO.idPublicLegalFormation], T1.[ConsolidatedExpenditure_PPO.idBudget], T1.[ConsolidatedExpenditure_PPO.idVersion])
    FROM (
        SELECT 
            T.Id AS [ConsolidatedExpenditure_PPO.id], 
            T.IdOwner AS [ConsolidatedExpenditure_PPO.idOwner], 
            T.IdPublicLegalFormation AS [ConsolidatedExpenditure_PPO.idPublicLegalFormation], 
            T.IdBudget AS [ConsolidatedExpenditure_PPO.idBudget], 
            T.IdVersion AS [ConsolidatedExpenditure_PPO.idVersion], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_PPO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2780);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter\r\n        [");
            viewString.Append("CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilter](T1.[ConsolidatedExpe");
            viewString.Append("nditure_BaseFilter.id], T1.[ConsolidatedExpenditure_BaseFilter.idOwner], T1.[Con");
            viewString.Append("solidatedExpenditure_BaseFilter.idFilterFieldType_DKR], T1.[ConsolidatedExpendit");
            viewString.Append("ure_BaseFilter.idFilterFieldType_DFK], T1.[ConsolidatedExpenditure_BaseFilter.id");
            viewString.Append("FilterFieldType_DEK], T1.[ConsolidatedExpenditure_BaseFilter.idFilterFieldType_F");
            viewString.Append("inanceSource], T1.[ConsolidatedExpenditure_BaseFilter.idFilterFieldType_KVR], T1");
            viewString.Append(".[ConsolidatedExpenditure_BaseFilter.idFilterFieldType_KVSR], T1.[ConsolidatedEx");
            viewString.Append("penditure_BaseFilter.idFilterFieldType_CodeSubsidy], T1.[ConsolidatedExpenditure");
            viewString.Append("_BaseFilter.idFilterFieldType_KOSGU], T1.[ConsolidatedExpenditure_BaseFilter.idF");
            viewString.Append("ilterFieldType_KFO], T1.[ConsolidatedExpenditure_BaseFilter.idFilterFieldType_KC");
            viewString.Append("SR], T1.[ConsolidatedExpenditure_BaseFilter.idFilterFieldType_BranchCode], T1.[C");
            viewString.Append("onsolidatedExpenditure_BaseFilter.idFilterFieldType_RZPR], T1.[ConsolidatedExpen");
            viewString.Append("diture_BaseFilter.idFilterFieldType_ExpenseObligationType])\r\n    FROM (\r\n       ");
            viewString.Append(" SELECT \r\n            T.Id AS [ConsolidatedExpenditure_BaseFilter.id], \r\n       ");
            viewString.Append("     T.IdOwner AS [ConsolidatedExpenditure_BaseFilter.idOwner], \r\n            T.");
            viewString.Append("IdFilterFieldType_DKR AS [ConsolidatedExpenditure_BaseFilter.idFilterFieldType_D");
            viewString.Append("KR], \r\n            T.IdFilterFieldType_DFK AS [ConsolidatedExpenditure_BaseFilte");
            viewString.Append("r.idFilterFieldType_DFK], \r\n            T.IdFilterFieldType_DEK AS [Consolidated");
            viewString.Append("Expenditure_BaseFilter.idFilterFieldType_DEK], \r\n            T.IdFilterFieldType");
            viewString.Append("_FinanceSource AS [ConsolidatedExpenditure_BaseFilter.idFilterFieldType_FinanceS");
            viewString.Append("ource], \r\n            T.IdFilterFieldType_KVR AS [ConsolidatedExpenditure_BaseFi");
            viewString.Append("lter.idFilterFieldType_KVR], \r\n            T.IdFilterFieldType_KVSR AS [Consolid");
            viewString.Append("atedExpenditure_BaseFilter.idFilterFieldType_KVSR], \r\n            T.IdFilterFiel");
            viewString.Append("dType_CodeSubsidy AS [ConsolidatedExpenditure_BaseFilter.idFilterFieldType_CodeS");
            viewString.Append("ubsidy], \r\n            T.IdFilterFieldType_KOSGU AS [ConsolidatedExpenditure_Bas");
            viewString.Append("eFilter.idFilterFieldType_KOSGU], \r\n            T.IdFilterFieldType_KFO AS [Cons");
            viewString.Append("olidatedExpenditure_BaseFilter.idFilterFieldType_KFO], \r\n            T.IdFilterF");
            viewString.Append("ieldType_KCSR AS [ConsolidatedExpenditure_BaseFilter.idFilterFieldType_KCSR], \r\n");
            viewString.Append("            T.IdFilterFieldType_BranchCode AS [ConsolidatedExpenditure_BaseFilte");
            viewString.Append("r.idFilterFieldType_BranchCode], \r\n            T.IdFilterFieldType_RZPR AS [Cons");
            viewString.Append("olidatedExpenditure_BaseFilter.idFilterFieldType_RZPR], \r\n            T.IdFilter");
            viewString.Append("FieldType_ExpenseObligationType AS [ConsolidatedExpenditure_BaseFilter.idFilterF");
            viewString.Append("ieldType_ExpenseObligationType], \r\n            True AS _from0\r\n        FROM Data");
            viewString.Append("Context.ConsolidatedExpenditure_BaseFilter AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_ExpenseObligationType
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType](T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.id], T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.idOwner], T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.idExpenseObligationType])
    FROM (
        SELECT 
            T.Id AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.id], 
            T.IdOwner AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.idOwner], 
            T.IdExpenseObligationType AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.idExpenseObligationType], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.GoalTargetsOfProgramSbp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.GoalTargetsOfProgramSbp", "\r\n    SELECT VALUE -- Constructing GoalTargetsOfProgramSbp\r\n        [CodeFirstDat" +
                    "abaseSchema.GoalTargetsOfProgramSbp](T1.GoalTargetsOfProgramSbp_id, T1.GoalTarge" +
                    "tsOfProgramSbp_ReportProfileCaption, T1.GoalTargetsOfProgramSbp_idReportProfileT" +
                    "ype, T1.GoalTargetsOfProgramSbp_idReportProfileUser, T1.GoalTargetsOfProgramSbp_" +
                    "isTemporary, T1.GoalTargetsOfProgramSbp_idPublicLegalFormation, T1.GoalTargetsOf" +
                    "ProgramSbp_DateReport, T1.GoalTargetsOfProgramSbp_byApproved, T1.GoalTargetsOfPr" +
                    "ogramSbp_idVersion, T1.GoalTargetsOfProgramSbp_repeatTableHeader, T1.GoalTargets" +
                    "OfProgramSbp_Caption, T1.GoalTargetsOfProgramSbp_idProgram)\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.Id AS GoalTargetsOfProgramSbp_id, \r\n            T.Report" +
                    "ProfileCaption AS GoalTargetsOfProgramSbp_ReportProfileCaption, \r\n            T." +
                    "IdReportProfileType AS GoalTargetsOfProgramSbp_idReportProfileType, \r\n          " +
                    "  T.IdReportProfileUser AS GoalTargetsOfProgramSbp_idReportProfileUser, \r\n      " +
                    "      T.IsTemporary AS GoalTargetsOfProgramSbp_isTemporary, \r\n            T.IdPu" +
                    "blicLegalFormation AS GoalTargetsOfProgramSbp_idPublicLegalFormation, \r\n        " +
                    "    T.DateReport AS GoalTargetsOfProgramSbp_DateReport, \r\n            T.ByApprov" +
                    "ed AS GoalTargetsOfProgramSbp_byApproved, \r\n            T.IdVersion AS GoalTarge" +
                    "tsOfProgramSbp_idVersion, \r\n            T.RepeatTableHeader AS GoalTargetsOfProg" +
                    "ramSbp_repeatTableHeader, \r\n            T.Caption AS GoalTargetsOfProgramSbp_Cap" +
                    "tion, \r\n            T.IdProgram AS GoalTargetsOfProgramSbp_idProgram, \r\n        " +
                    "    True AS _from0\r\n        FROM DataContext.GoalTargetsOfProgramSbp AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.NeedForTheProvisionOfActivitySbpWithinTheStateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2417);
            viewString.Append("\r\n    SELECT VALUE -- Constructing NeedForTheProvisionOfActivitySbpWithinTheStat");
            viewString.Append("eProgram\r\n        [CodeFirstDatabaseSchema.NeedForTheProvisionOfActivitySbpWithi");
            viewString.Append("nTheStateProgram](T1.NeedForTheProvisionOfActivitySbpWithinTheStateProgram_id, T");
            viewString.Append("1.NeedForTheProvisionOfActivitySbpWithinTheStateProgram_ReportProfileCaption, T1");
            viewString.Append(".NeedForTheProvisionOfActivitySbpWithinTheStateProgram_idReportProfileType, T1.N");
            viewString.Append("eedForTheProvisionOfActivitySbpWithinTheStateProgram_idReportProfileUser, T1.Nee");
            viewString.Append("dForTheProvisionOfActivitySbpWithinTheStateProgram_isTemporary, T1.NeedForThePro");
            viewString.Append("visionOfActivitySbpWithinTheStateProgram_idPublicLegalFormation, T1.NeedForThePr");
            viewString.Append("ovisionOfActivitySbpWithinTheStateProgram_DateReport, T1.NeedForTheProvisionOfAc");
            viewString.Append("tivitySbpWithinTheStateProgram_byApproved, T1.NeedForTheProvisionOfActivitySbpWi");
            viewString.Append("thinTheStateProgram_idVersion, T1.NeedForTheProvisionOfActivitySbpWithinTheState");
            viewString.Append("Program_repeatTableHeader, T1.NeedForTheProvisionOfActivitySbpWithinTheStateProg");
            viewString.Append("ram_Caption, T1.NeedForTheProvisionOfActivitySbpWithinTheStateProgram_idProgram)");
            viewString.Append("\r\n    FROM (\r\n        SELECT \r\n            T.Id AS NeedForTheProvisionOfActivity");
            viewString.Append("SbpWithinTheStateProgram_id, \r\n            T.ReportProfileCaption AS NeedForTheP");
            viewString.Append("rovisionOfActivitySbpWithinTheStateProgram_ReportProfileCaption, \r\n            T");
            viewString.Append(".IdReportProfileType AS NeedForTheProvisionOfActivitySbpWithinTheStateProgram_id");
            viewString.Append("ReportProfileType, \r\n            T.IdReportProfileUser AS NeedForTheProvisionOfA");
            viewString.Append("ctivitySbpWithinTheStateProgram_idReportProfileUser, \r\n            T.IsTemporary");
            viewString.Append(" AS NeedForTheProvisionOfActivitySbpWithinTheStateProgram_isTemporary, \r\n       ");
            viewString.Append("     T.IdPublicLegalFormation AS NeedForTheProvisionOfActivitySbpWithinTheStateP");
            viewString.Append("rogram_idPublicLegalFormation, \r\n            T.DateReport AS NeedForTheProvision");
            viewString.Append("OfActivitySbpWithinTheStateProgram_DateReport, \r\n            T.ByApproved AS Nee");
            viewString.Append("dForTheProvisionOfActivitySbpWithinTheStateProgram_byApproved, \r\n            T.I");
            viewString.Append("dVersion AS NeedForTheProvisionOfActivitySbpWithinTheStateProgram_idVersion, \r\n ");
            viewString.Append("           T.RepeatTableHeader AS NeedForTheProvisionOfActivitySbpWithinTheState");
            viewString.Append("Program_repeatTableHeader, \r\n            T.Caption AS NeedForTheProvisionOfActiv");
            viewString.Append("itySbpWithinTheStateProgram_Caption, \r\n            T.IdProgram AS NeedForTheProv");
            viewString.Append("isionOfActivitySbpWithinTheStateProgram_idProgram, \r\n            True AS _from0\r");
            viewString.Append("\n        FROM DataContext.NeedForTheProvisionOfActivitySbpWithinTheStateProgram ");
            viewString.Append("AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.NeedForTheProvisionOfActivitySbpWithinTheStateProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.JustificationOfBudget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.JustificationOfBudget", "\r\n    SELECT VALUE -- Constructing JustificationOfBudget\r\n        [CodeFirstDatab" +
                    "aseSchema.JustificationOfBudget](T1.JustificationOfBudget_id, T1.JustificationOf" +
                    "Budget_ReportProfileCaption, T1.JustificationOfBudget_idReportProfileType, T1.Ju" +
                    "stificationOfBudget_idReportProfileUser, T1.JustificationOfBudget_isTemporary, T" +
                    "1.JustificationOfBudget_idPublicLegalFormation, T1.JustificationOfBudget_idBudge" +
                    "t, T1.JustificationOfBudget_DateReport, T1.JustificationOfBudget_byApproved, T1." +
                    "JustificationOfBudget_idVersion, T1.JustificationOfBudget_repeatTableHeader, T1." +
                    "JustificationOfBudget_HasAdditionalNeed, T1.JustificationOfBudget_idSBP)\r\n    FR" +
                    "OM (\r\n        SELECT \r\n            T.Id AS JustificationOfBudget_id, \r\n         " +
                    "   T.ReportProfileCaption AS JustificationOfBudget_ReportProfileCaption, \r\n     " +
                    "       T.IdReportProfileType AS JustificationOfBudget_idReportProfileType, \r\n   " +
                    "         T.IdReportProfileUser AS JustificationOfBudget_idReportProfileUser, \r\n " +
                    "           T.IsTemporary AS JustificationOfBudget_isTemporary, \r\n            T.I" +
                    "dPublicLegalFormation AS JustificationOfBudget_idPublicLegalFormation, \r\n       " +
                    "     T.IdBudget AS JustificationOfBudget_idBudget, \r\n            T.DateReport AS" +
                    " JustificationOfBudget_DateReport, \r\n            T.ByApproved AS JustificationOf" +
                    "Budget_byApproved, \r\n            T.IdVersion AS JustificationOfBudget_idVersion," +
                    " \r\n            T.RepeatTableHeader AS JustificationOfBudget_repeatTableHeader, \r" +
                    "\n            T.HasAdditionalNeed AS JustificationOfBudget_HasAdditionalNeed, \r\n " +
                    "           T.IdSBP AS JustificationOfBudget_idSBP, \r\n            True AS _from0\r" +
                    "\n        FROM DataContext.JustificationOfBudget AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ListRemovedFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ListRemovedFields", @"
    SELECT VALUE -- Constructing ListRemovedFields
        [CodeFirstDatabaseSchema.ListRemovedFields](T1.ListRemovedFields_id, T1.ListRemovedFields_Caption, T1.ListRemovedFields_Number, T1.ListRemovedFields_idEntity)
    FROM (
        SELECT 
            T.Id AS ListRemovedFields_id, 
            T.Caption AS ListRemovedFields_Caption, 
            T.Number AS ListRemovedFields_Number, 
            T.IdEntity AS ListRemovedFields_idEntity, 
            True AS _from0
        FROM DataContext.ListRemovedFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.CostGoals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.CostGoals", @"
    SELECT VALUE -- Constructing CostGoals
        [CodeFirstDatabaseSchema.CostGoals](T1.CostGoals_id, T1.CostGoals_ReportProfileCaption, T1.CostGoals_idReportProfileType, T1.CostGoals_idReportProfileUser, T1.CostGoals_isTemporary, T1.CostGoals_idPublicLegalFormation, T1.CostGoals_idBudget, T1.CostGoals_DateReport, T1.CostGoals_byApproved, T1.CostGoals_idVersion, T1.CostGoals_repeatTableHeader)
    FROM (
        SELECT 
            T.Id AS CostGoals_id, 
            T.ReportProfileCaption AS CostGoals_ReportProfileCaption, 
            T.IdReportProfileType AS CostGoals_idReportProfileType, 
            T.IdReportProfileUser AS CostGoals_idReportProfileUser, 
            T.IsTemporary AS CostGoals_isTemporary, 
            T.IdPublicLegalFormation AS CostGoals_idPublicLegalFormation, 
            T.IdBudget AS CostGoals_idBudget, 
            T.DateReport AS CostGoals_DateReport, 
            T.ByApproved AS CostGoals_byApproved, 
            T.IdVersion AS CostGoals_idVersion, 
            T.RepeatTableHeader AS CostGoals_repeatTableHeader, 
            True AS _from0
        FROM DataContext.CostGoals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2420);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers\r\n        [CodeFirstDa");
            viewString.Append("tabaseSchema.InterBudgetaryTransfers](T1.InterBudgetaryTransfers_id, T1.InterBud");
            viewString.Append("getaryTransfers_ReportProfileCaption, T1.InterBudgetaryTransfers_idReportProfile");
            viewString.Append("Type, T1.InterBudgetaryTransfers_idReportProfileUser, T1.InterBudgetaryTransfers");
            viewString.Append("_isTemporary, T1.InterBudgetaryTransfers_idPublicLegalFormation, T1.InterBudgeta");
            viewString.Append("ryTransfers_idBudget, T1.InterBudgetaryTransfers_idVersion, T1.InterBudgetaryTra");
            viewString.Append("nsfers_byApproved, T1.InterBudgetaryTransfers_DateReport, T1.InterBudgetaryTrans");
            viewString.Append("fers_idUnitDimension, T1.InterBudgetaryTransfers_idSourcesDataReports, T1.InterB");
            viewString.Append("udgetaryTransfers_repeatTableHeader, T1.InterBudgetaryTransfers_Caption, T1.Inte");
            viewString.Append("rBudgetaryTransfers_IsShowYear, T1.InterBudgetaryTransfers_IsShowYear1, T1.Inter");
            viewString.Append("BudgetaryTransfers_IsShowYear2, T1.InterBudgetaryTransfers_IsShowUnallocatedRese");
            viewString.Append("rve, T1.InterBudgetaryTransfers_Header)\r\n    FROM (\r\n        SELECT \r\n          ");
            viewString.Append("  T.Id AS InterBudgetaryTransfers_id, \r\n            T.ReportProfileCaption AS In");
            viewString.Append("terBudgetaryTransfers_ReportProfileCaption, \r\n            T.IdReportProfileType ");
            viewString.Append("AS InterBudgetaryTransfers_idReportProfileType, \r\n            T.IdReportProfileU");
            viewString.Append("ser AS InterBudgetaryTransfers_idReportProfileUser, \r\n            T.IsTemporary ");
            viewString.Append("AS InterBudgetaryTransfers_isTemporary, \r\n            T.IdPublicLegalFormation A");
            viewString.Append("S InterBudgetaryTransfers_idPublicLegalFormation, \r\n            T.IdBudget AS In");
            viewString.Append("terBudgetaryTransfers_idBudget, \r\n            T.IdVersion AS InterBudgetaryTrans");
            viewString.Append("fers_idVersion, \r\n            T.ByApproved AS InterBudgetaryTransfers_byApproved");
            viewString.Append(", \r\n            T.DateReport AS InterBudgetaryTransfers_DateReport, \r\n          ");
            viewString.Append("  T.IdUnitDimension AS InterBudgetaryTransfers_idUnitDimension, \r\n            T.");
            viewString.Append("IdSourcesDataReports AS InterBudgetaryTransfers_idSourcesDataReports, \r\n        ");
            viewString.Append("    T.RepeatTableHeader AS InterBudgetaryTransfers_repeatTableHeader, \r\n        ");
            viewString.Append("    T.Caption AS InterBudgetaryTransfers_Caption, \r\n            T.IsShowYear AS ");
            viewString.Append("InterBudgetaryTransfers_IsShowYear, \r\n            T.IsShowYear1 AS InterBudgetar");
            viewString.Append("yTransfers_IsShowYear1, \r\n            T.IsShowYear2 AS InterBudgetaryTransfers_I");
            viewString.Append("sShowYear2, \r\n            T.IsShowUnallocatedReserve AS InterBudgetaryTransfers_");
            viewString.Append("IsShowUnallocatedReserve, \r\n            T.Header AS InterBudgetaryTransfers_Head");
            viewString.Append("er, \r\n            True AS _from0\r\n        FROM DataContext.InterBudgetaryTransfe");
            viewString.Append("rs AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_CustomizableColumns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_CustomizableColumns", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_CustomizableColumns
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_CustomizableColumns](T1.[InterBudgetaryTransfers_CustomizableColumns.id], T1.[InterBudgetaryTransfers_CustomizableColumns.idOwner], T1.[InterBudgetaryTransfers_CustomizableColumns.Caption], T1.[InterBudgetaryTransfers_CustomizableColumns.idParent], T1.[InterBudgetaryTransfers_CustomizableColumns.Order])
    FROM (
        SELECT 
            T.Id AS [InterBudgetaryTransfers_CustomizableColumns.id], 
            T.IdOwner AS [InterBudgetaryTransfers_CustomizableColumns.idOwner], 
            T.Caption AS [InterBudgetaryTransfers_CustomizableColumns.Caption], 
            T.IdParent AS [InterBudgetaryTransfers_CustomizableColumns.idParent], 
            T.[Order] AS [InterBudgetaryTransfers_CustomizableColumns.Order], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_CustomizableColumns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3010);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK\r\n      ");
            viewString.Append("  [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBK](T1.[InterBudge");
            viewString.Append("taryTransfers_RuleFilterKBK.id], T1.[InterBudgetaryTransfers_RuleFilterKBK.idOwn");
            viewString.Append("er], T1.[InterBudgetaryTransfers_RuleFilterKBK.idMaster], T1.[InterBudgetaryTran");
            viewString.Append("sfers_RuleFilterKBK.idFilterFieldType_BranchCode], T1.[InterBudgetaryTransfers_R");
            viewString.Append("uleFilterKBK.idFilterFieldType_CodeSubsidy], T1.[InterBudgetaryTransfers_RuleFil");
            viewString.Append("terKBK.idFilterFieldType_DEK], T1.[InterBudgetaryTransfers_RuleFilterKBK.idFilte");
            viewString.Append("rFieldType_DFK], T1.[InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_DKR");
            viewString.Append("], T1.[InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_ExpenseObligation");
            viewString.Append("Type], T1.[InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_FinanceSource");
            viewString.Append("], T1.[InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_KCSR], T1.[InterB");
            viewString.Append("udgetaryTransfers_RuleFilterKBK.idFilterFieldType_KFO], T1.[InterBudgetaryTransf");
            viewString.Append("ers_RuleFilterKBK.idFilterFieldType_KOSGU], T1.[InterBudgetaryTransfers_RuleFilt");
            viewString.Append("erKBK.idFilterFieldType_KVR], T1.[InterBudgetaryTransfers_RuleFilterKBK.idFilter");
            viewString.Append("FieldType_KVSR], T1.[InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_RZP");
            viewString.Append("R])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [InterBudgetaryTransfers_R");
            viewString.Append("uleFilterKBK.id], \r\n            T.IdOwner AS [InterBudgetaryTransfers_RuleFilter");
            viewString.Append("KBK.idOwner], \r\n            T.IdMaster AS [InterBudgetaryTransfers_RuleFilterKBK");
            viewString.Append(".idMaster], \r\n            T.IdFilterFieldType_BranchCode AS [InterBudgetaryTrans");
            viewString.Append("fers_RuleFilterKBK.idFilterFieldType_BranchCode], \r\n            T.IdFilterFieldT");
            viewString.Append("ype_CodeSubsidy AS [InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_Code");
            viewString.Append("Subsidy], \r\n            T.IdFilterFieldType_DEK AS [InterBudgetaryTransfers_Rule");
            viewString.Append("FilterKBK.idFilterFieldType_DEK], \r\n            T.IdFilterFieldType_DFK AS [Inte");
            viewString.Append("rBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_DFK], \r\n            T.IdFilt");
            viewString.Append("erFieldType_DKR AS [InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_DKR]");
            viewString.Append(", \r\n            T.IdFilterFieldType_ExpenseObligationType AS [InterBudgetaryTran");
            viewString.Append("sfers_RuleFilterKBK.idFilterFieldType_ExpenseObligationType], \r\n            T.Id");
            viewString.Append("FilterFieldType_FinanceSource AS [InterBudgetaryTransfers_RuleFilterKBK.idFilter");
            viewString.Append("FieldType_FinanceSource], \r\n            T.IdFilterFieldType_KCSR AS [InterBudget");
            viewString.Append("aryTransfers_RuleFilterKBK.idFilterFieldType_KCSR], \r\n            T.IdFilterFiel");
            viewString.Append("dType_KFO AS [InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_KFO], \r\n  ");
            viewString.Append("          T.IdFilterFieldType_KOSGU AS [InterBudgetaryTransfers_RuleFilterKBK.id");
            viewString.Append("FilterFieldType_KOSGU], \r\n            T.IdFilterFieldType_KVR AS [InterBudgetary");
            viewString.Append("Transfers_RuleFilterKBK.idFilterFieldType_KVR], \r\n            T.IdFilterFieldTyp");
            viewString.Append("e_KVSR AS [InterBudgetaryTransfers_RuleFilterKBK.idFilterFieldType_KVSR], \r\n    ");
            viewString.Append("        T.IdFilterFieldType_RZPR AS [InterBudgetaryTransfers_RuleFilterKBK.idFil");
            viewString.Append("terFieldType_RZPR], \r\n            True AS _from0\r\n        FROM DataContext.Inter");
            viewString.Append("BudgetaryTransfers_RuleFilterKBK AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBK", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.IBT_RuleFilterKBK_ExpenseObligationTypeT
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.IBT_RuleFilterKBK_ExpenseObligationTypeT", @"
    SELECT VALUE -- Constructing IBT_RuleFilterKBK_ExpenseObligationTypeT
        [CodeFirstDatabaseSchema.IBT_RuleFilterKBK_ExpenseObligationTypeT](T1.[IBT_RuleFilterKBK_ExpenseObligationTypeT.id], T1.[IBT_RuleFilterKBK_ExpenseObligationTypeT.idOwner], T1.[IBT_RuleFilterKBK_ExpenseObligationTypeT.idExpenseObligationType])
    FROM (
        SELECT 
            T.Id AS [IBT_RuleFilterKBK_ExpenseObligationTypeT.id], 
            T.IdOwner AS [IBT_RuleFilterKBK_ExpenseObligationTypeT.idOwner], 
            T.IdExpenseObligationType AS [IBT_RuleFilterKBK_ExpenseObligationTypeT.idExpenseObligationType], 
            True AS _from0
        FROM DataContext.IBT_RuleFilterKBK_ExpenseObligationTypeT AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SummaryReportOfSelectedIndicators
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2169);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SummaryReportOfSelectedIndicators\r\n        [C");
            viewString.Append("odeFirstDatabaseSchema.SummaryReportOfSelectedIndicators](T1.SummaryReportOfSele");
            viewString.Append("ctedIndicators_id, T1.SummaryReportOfSelectedIndicators_ReportProfileCaption, T1");
            viewString.Append(".SummaryReportOfSelectedIndicators_idReportProfileType, T1.SummaryReportOfSelect");
            viewString.Append("edIndicators_idReportProfileUser, T1.SummaryReportOfSelectedIndicators_isTempora");
            viewString.Append("ry, T1.SummaryReportOfSelectedIndicators_idPublicLegalFormation, T1.SummaryRepor");
            viewString.Append("tOfSelectedIndicators_idBudget, T1.SummaryReportOfSelectedIndicators_idVersion, ");
            viewString.Append("T1.SummaryReportOfSelectedIndicators_byApproved, T1.SummaryReportOfSelectedIndic");
            viewString.Append("ators_DateReport, T1.SummaryReportOfSelectedIndicators_idUnitDimension, T1.Summa");
            viewString.Append("ryReportOfSelectedIndicators_idSourcesDataReports, T1.SummaryReportOfSelectedInd");
            viewString.Append("icators_repeatTableHeader, T1.SummaryReportOfSelectedIndicators_Caption)\r\n    FR");
            viewString.Append("OM (\r\n        SELECT \r\n            T.Id AS SummaryReportOfSelectedIndicators_id,");
            viewString.Append(" \r\n            T.ReportProfileCaption AS SummaryReportOfSelectedIndicators_Repor");
            viewString.Append("tProfileCaption, \r\n            T.IdReportProfileType AS SummaryReportOfSelectedI");
            viewString.Append("ndicators_idReportProfileType, \r\n            T.IdReportProfileUser AS SummaryRep");
            viewString.Append("ortOfSelectedIndicators_idReportProfileUser, \r\n            T.IsTemporary AS Summ");
            viewString.Append("aryReportOfSelectedIndicators_isTemporary, \r\n            T.IdPublicLegalFormatio");
            viewString.Append("n AS SummaryReportOfSelectedIndicators_idPublicLegalFormation, \r\n            T.I");
            viewString.Append("dBudget AS SummaryReportOfSelectedIndicators_idBudget, \r\n            T.IdVersion");
            viewString.Append(" AS SummaryReportOfSelectedIndicators_idVersion, \r\n            T.ByApproved AS S");
            viewString.Append("ummaryReportOfSelectedIndicators_byApproved, \r\n            T.DateReport AS Summa");
            viewString.Append("ryReportOfSelectedIndicators_DateReport, \r\n            T.IdUnitDimension AS Summ");
            viewString.Append("aryReportOfSelectedIndicators_idUnitDimension, \r\n            T.IdSourcesDataRepo");
            viewString.Append("rts AS SummaryReportOfSelectedIndicators_idSourcesDataReports, \r\n            T.R");
            viewString.Append("epeatTableHeader AS SummaryReportOfSelectedIndicators_repeatTableHeader, \r\n     ");
            viewString.Append("       T.Caption AS SummaryReportOfSelectedIndicators_Caption, \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM DataContext.SummaryReportOfSelectedIndicators AS T\r\n  ");
            viewString.Append("  ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SummaryReportOfSelectedIndicators", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.WordCommonReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.WordCommonReport", @"
    SELECT VALUE -- Constructing WordCommonReport
        [CodeFirstDatabaseSchema.WordCommonReport](T1.WordCommonReport_id, T1.WordCommonReport_ReportProfileCaption, T1.WordCommonReport_idReportProfileType, T1.WordCommonReport_idReportProfileUser, T1.WordCommonReport_isTemporary, T1.WordCommonReport_idTemplateFile)
    FROM (
        SELECT 
            T.Id AS WordCommonReport_id, 
            T.ReportProfileCaption AS WordCommonReport_ReportProfileCaption, 
            T.IdReportProfileType AS WordCommonReport_idReportProfileType, 
            T.IdReportProfileUser AS WordCommonReport_idReportProfileUser, 
            T.IsTemporary AS WordCommonReport_isTemporary, 
            T.IdTemplateFile AS WordCommonReport_idTemplateFile, 
            True AS _from0
        FROM DataContext.WordCommonReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.WordCommonReportParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.WordCommonReportParams", @"
    SELECT VALUE -- Constructing WordCommonReportParams
        [CodeFirstDatabaseSchema.WordCommonReportParams](T1.WordCommonReportParams_id, T1.WordCommonReportParams_caption, T1.WordCommonReportParams_description, T1.WordCommonReportParams_idOutputEntity, T1.WordCommonReportParams_idOutputEntityField, T1.WordCommonReportParams_sqlQuery)
    FROM (
        SELECT 
            T.Id AS WordCommonReportParams_id, 
            T.Caption AS WordCommonReportParams_caption, 
            T.Description AS WordCommonReportParams_description, 
            T.IdOutputEntity AS WordCommonReportParams_idOutputEntity, 
            T.IdOutputEntityField AS WordCommonReportParams_idOutputEntityField, 
            T.SqlQuery AS WordCommonReportParams_sqlQuery, 
            True AS _from0
        FROM DataContext.WordCommonReportParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.WordCommonReportParams_InputParam
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.WordCommonReportParams_InputParam", @"
    SELECT VALUE -- Constructing WordCommonReportParams_InputParam
        [CodeFirstDatabaseSchema.WordCommonReportParams_InputParam](T1.[WordCommonReportParams_InputParam.id], T1.[WordCommonReportParams_InputParam.idOwner], T1.[WordCommonReportParams_InputParam.caption], T1.[WordCommonReportParams_InputParam.description], T1.[WordCommonReportParams_InputParam.defaultValue])
    FROM (
        SELECT 
            T.Id AS [WordCommonReportParams_InputParam.id], 
            T.IdOwner AS [WordCommonReportParams_InputParam.idOwner], 
            T.Caption AS [WordCommonReportParams_InputParam.caption], 
            T.Description AS [WordCommonReportParams_InputParam.description], 
            T.DefaultValue AS [WordCommonReportParams_InputParam.defaultValue], 
            True AS _from0
        FROM DataContext.WordCommonReportParams_InputParam AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegistryGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView121()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2607);
            viewString.Append("\r\n    SELECT VALUE -- Constructing RegistryGoal\r\n        [CodeFirstDatabaseSchem");
            viewString.Append("a.RegistryGoal](T1.RegistryGoal_id, T1.RegistryGoal_ReportProfileCaption, T1.Reg");
            viewString.Append("istryGoal_idReportProfileType, T1.RegistryGoal_idReportProfileUser, T1.RegistryG");
            viewString.Append("oal_isTemporary, T1.RegistryGoal_idSBP, T1.RegistryGoal_DateStart, T1.RegistryGo");
            viewString.Append("al_DateEnd, T1.RegistryGoal_OutputGoalOperatingPeriod, T1.RegistryGoal_idPublicL");
            viewString.Append("egalFormation, T1.RegistryGoal_idSourcesDataReports, T1.RegistryGoal_idVersion, ");
            viewString.Append("T1.RegistryGoal_ConstructReportApprovedData, T1.RegistryGoal_DateReport, T1.Regi");
            viewString.Append("stryGoal_DisplayReportCodeS, T1.RegistryGoal_DisplayReportDataGoal, T1.RegistryG");
            viewString.Append("oal_DispleySelectedParameterValues, T1.RegistryGoal_RepeatTableHeader, T1.Regist");
            viewString.Append("ryGoal_GenerateValuesWithDetails, T1.RegistryGoal_idBudget, T1.RegistryGoal_Disp");
            viewString.Append("layResourceProvision, T1.RegistryGoal_DisplayResourceSupport, T1.RegistryGoal_Di");
            viewString.Append("splayDataBudgetPeriod)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS Registr");
            viewString.Append("yGoal_id, \r\n            T.ReportProfileCaption AS RegistryGoal_ReportProfileCapt");
            viewString.Append("ion, \r\n            T.IdReportProfileType AS RegistryGoal_idReportProfileType, \r\n");
            viewString.Append("            T.IdReportProfileUser AS RegistryGoal_idReportProfileUser, \r\n       ");
            viewString.Append("     T.IsTemporary AS RegistryGoal_isTemporary, \r\n            T.IdSBP AS Registr");
            viewString.Append("yGoal_idSBP, \r\n            T.DateStart AS RegistryGoal_DateStart, \r\n            ");
            viewString.Append("T.DateEnd AS RegistryGoal_DateEnd, \r\n            T.OutputGoalOperatingPeriod AS ");
            viewString.Append("RegistryGoal_OutputGoalOperatingPeriod, \r\n            T.IdPublicLegalFormation A");
            viewString.Append("S RegistryGoal_idPublicLegalFormation, \r\n            T.IdSourcesDataReports AS R");
            viewString.Append("egistryGoal_idSourcesDataReports, \r\n            T.IdVersion AS RegistryGoal_idVe");
            viewString.Append("rsion, \r\n            T.ConstructReportApprovedData AS RegistryGoal_ConstructRepo");
            viewString.Append("rtApprovedData, \r\n            T.DateReport AS RegistryGoal_DateReport, \r\n       ");
            viewString.Append("     T.DisplayReportCodeS AS RegistryGoal_DisplayReportCodeS, \r\n            T.Di");
            viewString.Append("splayReportDataGoal AS RegistryGoal_DisplayReportDataGoal, \r\n            T.Displ");
            viewString.Append("eySelectedParameterValues AS RegistryGoal_DispleySelectedParameterValues, \r\n    ");
            viewString.Append("        T.RepeatTableHeader AS RegistryGoal_RepeatTableHeader, \r\n            T.G");
            viewString.Append("enerateValuesWithDetails AS RegistryGoal_GenerateValuesWithDetails, \r\n          ");
            viewString.Append("  T.IdBudget AS RegistryGoal_idBudget, \r\n            T.DisplayResourceProvision ");
            viewString.Append("AS RegistryGoal_DisplayResourceProvision, \r\n            T.DisplayResourceSupport");
            viewString.Append(" AS RegistryGoal_DisplayResourceSupport, \r\n            T.DisplayDataBudgetPeriod");
            viewString.Append(" AS RegistryGoal_DisplayDataBudgetPeriod, \r\n            True AS _from0\r\n        ");
            viewString.Append("FROM DataContext.RegistryGoal AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegistryGoal", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.UserActivityReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView122()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.UserActivityReport", @"
    SELECT VALUE -- Constructing UserActivityReport
        [CodeFirstDatabaseSchema.UserActivityReport](T1.UserActivityReport_id, T1.UserActivityReport_ReportProfileCaption, T1.UserActivityReport_idReportProfileType, T1.UserActivityReport_idReportProfileUser, T1.UserActivityReport_isTemporary, T1.UserActivityReport_idUser, T1.UserActivityReport_DateFrom, T1.UserActivityReport_DateTo, T1.UserActivityReport_idAuditEntity, T1.UserActivityReport_idAuditEntityEntity, T1.UserActivityReport_idEntity, T1.UserActivityReport_idElement)
    FROM (
        SELECT 
            T.Id AS UserActivityReport_id, 
            T.ReportProfileCaption AS UserActivityReport_ReportProfileCaption, 
            T.IdReportProfileType AS UserActivityReport_idReportProfileType, 
            T.IdReportProfileUser AS UserActivityReport_idReportProfileUser, 
            T.IsTemporary AS UserActivityReport_isTemporary, 
            T.IdUser AS UserActivityReport_idUser, 
            T.DateFrom AS UserActivityReport_DateFrom, 
            T.DateTo AS UserActivityReport_DateTo, 
            T.IdAuditEntity AS UserActivityReport_idAuditEntity, 
            T.IdAuditEntityEntity AS UserActivityReport_idAuditEntityEntity, 
            T.IdEntity AS UserActivityReport_idEntity, 
            T.IdElement AS UserActivityReport_idElement, 
            True AS _from0
        FROM DataContext.UserActivityReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView123()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2476);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure\r\n        [CodeFirstDat");
            viewString.Append("abaseSchema.BudgetExpenseStructure](T1.BudgetExpenseStructure_id, T1.BudgetExpen");
            viewString.Append("seStructure_ReportProfileCaption, T1.BudgetExpenseStructure_idReportProfileType,");
            viewString.Append(" T1.BudgetExpenseStructure_idReportProfileUser, T1.BudgetExpenseStructure_Report");
            viewString.Append("Cap, T1.BudgetExpenseStructure_isTemporary, T1.BudgetExpenseStructure_idPublicLe");
            viewString.Append("galFormation, T1.BudgetExpenseStructure_idBudget, T1.BudgetExpenseStructure_idVe");
            viewString.Append("rsion, T1.BudgetExpenseStructure_Caption, T1.BudgetExpenseStructure_isApprovedOn");
            viewString.Append("ly, T1.BudgetExpenseStructure_ReportDate, T1.BudgetExpenseStructure_idUnitDimens");
            viewString.Append("ion, T1.BudgetExpenseStructure_idPeriodOption, T1.BudgetExpenseStructure_idSourc");
            viewString.Append("esDataReports, T1.BudgetExpenseStructure_repeatTableHeader, T1.BudgetExpenseStru");
            viewString.Append("cture_showGoals, T1.BudgetExpenseStructure_showProgram, T1.BudgetExpenseStructur");
            viewString.Append("e_showActivities, T1.BudgetExpenseStructure_idDocType)\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.Id AS BudgetExpenseStructure_id, \r\n            T.ReportProfil");
            viewString.Append("eCaption AS BudgetExpenseStructure_ReportProfileCaption, \r\n            T.IdRepor");
            viewString.Append("tProfileType AS BudgetExpenseStructure_idReportProfileType, \r\n            T.IdRe");
            viewString.Append("portProfileUser AS BudgetExpenseStructure_idReportProfileUser, \r\n            T.R");
            viewString.Append("eportCap AS BudgetExpenseStructure_ReportCap, \r\n            T.IsTemporary AS Bud");
            viewString.Append("getExpenseStructure_isTemporary, \r\n            T.IdPublicLegalFormation AS Budge");
            viewString.Append("tExpenseStructure_idPublicLegalFormation, \r\n            T.IdBudget AS BudgetExpe");
            viewString.Append("nseStructure_idBudget, \r\n            T.IdVersion AS BudgetExpenseStructure_idVer");
            viewString.Append("sion, \r\n            T.Caption AS BudgetExpenseStructure_Caption, \r\n            T");
            viewString.Append(".IsApprovedOnly AS BudgetExpenseStructure_isApprovedOnly, \r\n            T.Report");
            viewString.Append("Date AS BudgetExpenseStructure_ReportDate, \r\n            T.IdUnitDimension AS Bu");
            viewString.Append("dgetExpenseStructure_idUnitDimension, \r\n            T.IdPeriodOption AS BudgetEx");
            viewString.Append("penseStructure_idPeriodOption, \r\n            T.IdSourcesDataReports AS BudgetExp");
            viewString.Append("enseStructure_idSourcesDataReports, \r\n            T.RepeatTableHeader AS BudgetE");
            viewString.Append("xpenseStructure_repeatTableHeader, \r\n            T.ShowGoals AS BudgetExpenseStr");
            viewString.Append("ucture_showGoals, \r\n            T.ShowProgram AS BudgetExpenseStructure_showProg");
            viewString.Append("ram, \r\n            T.ShowActivities AS BudgetExpenseStructure_showActivities, \r\n");
            viewString.Append("            T.IdDocType AS BudgetExpenseStructure_idDocType, \r\n            True ");
            viewString.Append("AS _from0\r\n        FROM DataContext.BudgetExpenseStructure AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_Columns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_Columns", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_Columns
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_Columns](T1.[BudgetExpenseStructure_Columns.id], T1.[BudgetExpenseStructure_Columns.idOwner], T1.[BudgetExpenseStructure_Columns.idKBKEntity], T1.[BudgetExpenseStructure_Columns.Order], T1.[BudgetExpenseStructure_Columns.isGroupResult], T1.[BudgetExpenseStructure_Columns.minLevel], T1.[BudgetExpenseStructure_Columns.maxLevel])
    FROM (
        SELECT 
            T.Id AS [BudgetExpenseStructure_Columns.id], 
            T.IdOwner AS [BudgetExpenseStructure_Columns.idOwner], 
            T.IdKBKEntity AS [BudgetExpenseStructure_Columns.idKBKEntity], 
            T.[Order] AS [BudgetExpenseStructure_Columns.Order], 
            T.IsGroupResult AS [BudgetExpenseStructure_Columns.isGroupResult], 
            T.MinLevel AS [BudgetExpenseStructure_Columns.minLevel], 
            T.MaxLevel AS [BudgetExpenseStructure_Columns.maxLevel], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_Columns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView125()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2747);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter\r\n        [C");
            viewString.Append("odeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilter](T1.[BudgetExpenseStruc");
            viewString.Append("ture_BaseFilter.id], T1.[BudgetExpenseStructure_BaseFilter.idOwner], T1.[BudgetE");
            viewString.Append("xpenseStructure_BaseFilter.idFilterFieldType_ExpenseObligationType], T1.[BudgetE");
            viewString.Append("xpenseStructure_BaseFilter.idFilterFieldType_FinanceSource], T1.[BudgetExpenseSt");
            viewString.Append("ructure_BaseFilter.idFilterFieldType_KFO], T1.[BudgetExpenseStructure_BaseFilter");
            viewString.Append(".idFilterFieldType_KVSR], T1.[BudgetExpenseStructure_BaseFilter.idFilterFieldTyp");
            viewString.Append("e_RZPR], T1.[BudgetExpenseStructure_BaseFilter.idFilterFieldType_KCSR], T1.[Budg");
            viewString.Append("etExpenseStructure_BaseFilter.idFilterFieldType_KVR], T1.[BudgetExpenseStructure");
            viewString.Append("_BaseFilter.idFilterFieldType_KOSGU], T1.[BudgetExpenseStructure_BaseFilter.idFi");
            viewString.Append("lterFieldType_DFK], T1.[BudgetExpenseStructure_BaseFilter.idFilterFieldType_DKR]");
            viewString.Append(", T1.[BudgetExpenseStructure_BaseFilter.idFilterFieldType_DEK], T1.[BudgetExpens");
            viewString.Append("eStructure_BaseFilter.idFilterFieldType_CodeSubsidy], T1.[BudgetExpenseStructure");
            viewString.Append("_BaseFilter.idFilterFieldType_BranchCode])\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.Id AS [BudgetExpenseStructure_BaseFilter.id], \r\n            T.IdOwner AS ");
            viewString.Append("[BudgetExpenseStructure_BaseFilter.idOwner], \r\n            T.IdFilterFieldType_E");
            viewString.Append("xpenseObligationType AS [BudgetExpenseStructure_BaseFilter.idFilterFieldType_Exp");
            viewString.Append("enseObligationType], \r\n            T.IdFilterFieldType_FinanceSource AS [BudgetE");
            viewString.Append("xpenseStructure_BaseFilter.idFilterFieldType_FinanceSource], \r\n            T.IdF");
            viewString.Append("ilterFieldType_KFO AS [BudgetExpenseStructure_BaseFilter.idFilterFieldType_KFO],");
            viewString.Append(" \r\n            T.IdFilterFieldType_KVSR AS [BudgetExpenseStructure_BaseFilter.id");
            viewString.Append("FilterFieldType_KVSR], \r\n            T.IdFilterFieldType_RZPR AS [BudgetExpenseS");
            viewString.Append("tructure_BaseFilter.idFilterFieldType_RZPR], \r\n            T.IdFilterFieldType_K");
            viewString.Append("CSR AS [BudgetExpenseStructure_BaseFilter.idFilterFieldType_KCSR], \r\n           ");
            viewString.Append(" T.IdFilterFieldType_KVR AS [BudgetExpenseStructure_BaseFilter.idFilterFieldType");
            viewString.Append("_KVR], \r\n            T.IdFilterFieldType_KOSGU AS [BudgetExpenseStructure_BaseFi");
            viewString.Append("lter.idFilterFieldType_KOSGU], \r\n            T.IdFilterFieldType_DFK AS [BudgetE");
            viewString.Append("xpenseStructure_BaseFilter.idFilterFieldType_DFK], \r\n            T.IdFilterField");
            viewString.Append("Type_DKR AS [BudgetExpenseStructure_BaseFilter.idFilterFieldType_DKR], \r\n       ");
            viewString.Append("     T.IdFilterFieldType_DEK AS [BudgetExpenseStructure_BaseFilter.idFilterField");
            viewString.Append("Type_DEK], \r\n            T.IdFilterFieldType_CodeSubsidy AS [BudgetExpenseStruct");
            viewString.Append("ure_BaseFilter.idFilterFieldType_CodeSubsidy], \r\n            T.IdFilterFieldType");
            viewString.Append("_BranchCode AS [BudgetExpenseStructure_BaseFilter.idFilterFieldType_BranchCode],");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM DataContext.BudgetExpenseStructure_B");
            viewString.Append("aseFilter AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilter_ExpenseObligationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView126()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilter_ExpenseObligationType", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_ExpenseObligationType
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilter_ExpenseObligationType](T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationType.id], T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationType.idOwner], T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationType.idExpenseObligationType])
    FROM (
        SELECT 
            T.Id AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationType.id], 
            T.IdOwner AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationType.idOwner], 
            T.IdExpenseObligationType AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationType.idExpenseObligationType], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_ExpenseObligationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomColumn
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView127()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomColumn", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomColumn
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomColumn](T1.[BudgetExpenseStructure_CustomColumn.id], T1.[BudgetExpenseStructure_CustomColumn.idOwner], T1.[BudgetExpenseStructure_CustomColumn.Name])
    FROM (
        SELECT 
            T.Id AS [BudgetExpenseStructure_CustomColumn.id], 
            T.IdOwner AS [BudgetExpenseStructure_CustomColumn.idOwner], 
            T.Name AS [BudgetExpenseStructure_CustomColumn.Name], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomColumn AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView128()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2940);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter\r\n        ");
            viewString.Append("[CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilter](T1.[BudgetExpenseS");
            viewString.Append("tructure_CustomFilter.id], T1.[BudgetExpenseStructure_CustomFilter.idOwner], T1.");
            viewString.Append("[BudgetExpenseStructure_CustomFilter.idMaster], T1.[BudgetExpenseStructure_Custo");
            viewString.Append("mFilter.idFilterFieldType_ExpenseObligationType], T1.[BudgetExpenseStructure_Cus");
            viewString.Append("tomFilter.idFilterFieldType_FinanceSource], T1.[BudgetExpenseStructure_CustomFil");
            viewString.Append("ter.idFilterFieldType_KFO], T1.[BudgetExpenseStructure_CustomFilter.idFilterFiel");
            viewString.Append("dType_KVSR], T1.[BudgetExpenseStructure_CustomFilter.idFilterFieldType_RZPR], T1");
            viewString.Append(".[BudgetExpenseStructure_CustomFilter.idFilterFieldType_KCSR], T1.[BudgetExpense");
            viewString.Append("Structure_CustomFilter.idFilterFieldType_KVR], T1.[BudgetExpenseStructure_Custom");
            viewString.Append("Filter.idFilterFieldType_KOSGU], T1.[BudgetExpenseStructure_CustomFilter.idFilte");
            viewString.Append("rFieldType_DFK], T1.[BudgetExpenseStructure_CustomFilter.idFilterFieldType_DKR],");
            viewString.Append(" T1.[BudgetExpenseStructure_CustomFilter.idFilterFieldType_DEK], T1.[BudgetExpen");
            viewString.Append("seStructure_CustomFilter.idFilterFieldType_CodeSubsidy], T1.[BudgetExpenseStruct");
            viewString.Append("ure_CustomFilter.idFilterFieldType_BranchCode])\r\n    FROM (\r\n        SELECT \r\n  ");
            viewString.Append("          T.Id AS [BudgetExpenseStructure_CustomFilter.id], \r\n            T.IdOw");
            viewString.Append("ner AS [BudgetExpenseStructure_CustomFilter.idOwner], \r\n            T.IdMaster A");
            viewString.Append("S [BudgetExpenseStructure_CustomFilter.idMaster], \r\n            T.IdFilterFieldT");
            viewString.Append("ype_ExpenseObligationType AS [BudgetExpenseStructure_CustomFilter.idFilterFieldT");
            viewString.Append("ype_ExpenseObligationType], \r\n            T.IdFilterFieldType_FinanceSource AS [");
            viewString.Append("BudgetExpenseStructure_CustomFilter.idFilterFieldType_FinanceSource], \r\n        ");
            viewString.Append("    T.IdFilterFieldType_KFO AS [BudgetExpenseStructure_CustomFilter.idFilterFiel");
            viewString.Append("dType_KFO], \r\n            T.IdFilterFieldType_KVSR AS [BudgetExpenseStructure_Cu");
            viewString.Append("stomFilter.idFilterFieldType_KVSR], \r\n            T.IdFilterFieldType_RZPR AS [B");
            viewString.Append("udgetExpenseStructure_CustomFilter.idFilterFieldType_RZPR], \r\n            T.IdFi");
            viewString.Append("lterFieldType_KCSR AS [BudgetExpenseStructure_CustomFilter.idFilterFieldType_KCS");
            viewString.Append("R], \r\n            T.IdFilterFieldType_KVR AS [BudgetExpenseStructure_CustomFilte");
            viewString.Append("r.idFilterFieldType_KVR], \r\n            T.IdFilterFieldType_KOSGU AS [BudgetExpe");
            viewString.Append("nseStructure_CustomFilter.idFilterFieldType_KOSGU], \r\n            T.IdFilterFiel");
            viewString.Append("dType_DFK AS [BudgetExpenseStructure_CustomFilter.idFilterFieldType_DFK], \r\n    ");
            viewString.Append("        T.IdFilterFieldType_DKR AS [BudgetExpenseStructure_CustomFilter.idFilter");
            viewString.Append("FieldType_DKR], \r\n            T.IdFilterFieldType_DEK AS [BudgetExpenseStructure");
            viewString.Append("_CustomFilter.idFilterFieldType_DEK], \r\n            T.IdFilterFieldType_CodeSubs");
            viewString.Append("idy AS [BudgetExpenseStructure_CustomFilter.idFilterFieldType_CodeSubsidy], \r\n  ");
            viewString.Append("          T.IdFilterFieldType_BranchCode AS [BudgetExpenseStructure_CustomFilter");
            viewString.Append(".idFilterFieldType_BranchCode], \r\n            True AS _from0\r\n        FROM DataC");
            viewString.Append("ontext.BudgetExpenseStructure_CustomFilter AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilter_ExpenseObligationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilter_ExpenseObligationType", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_ExpenseObligationType
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilter_ExpenseObligationType](T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType.id], T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType.idOwner], T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType.idExpenseObligationType])
    FROM (
        SELECT 
            T.Id AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationType.id], 
            T.IdOwner AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationType.idOwner], 
            T.IdExpenseObligationType AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationType.idExpenseObligationType], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_ExpenseObligationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ReportBatch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ReportBatch", @"
    SELECT VALUE -- Constructing ReportBatch
        [CodeFirstDatabaseSchema.ReportBatch](T3.ReportBatch_id, T3.ReportBatch_idPublicLegalFormation, T3.ReportBatch_caption, T3.ReportBatch_description, T3.ReportBatch_IdDocStatus, T3.[ReportBatch.DocStatus_Id])
    FROM (
        SELECT T1.ReportBatch_id, T1.ReportBatch_idPublicLegalFormation, T1.ReportBatch_caption, T1.ReportBatch_description, T1.ReportBatch_IdDocStatus, T2.[ReportBatch.DocStatus_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS ReportBatch_id, 
                T.IdPublicLegalFormation AS ReportBatch_idPublicLegalFormation, 
                T.Caption AS ReportBatch_caption, 
                T.Description AS ReportBatch_description, 
                T.IdDocStatus AS ReportBatch_IdDocStatus, 
                True AS _from0
            FROM DataContext.ReportBatch AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.ReportBatch_DocStatus_Source).Id AS ReportBatch_id, 
                Key(T.ReportBatch_DocStatus_Target).Id AS [ReportBatch.DocStatus_Id], 
                True AS _from1
            FROM DataContext.ReportBatch_DocStatus AS T) AS T2
            ON T1.ReportBatch_id = T2.ReportBatch_id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ReportBatch_Reports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ReportBatch_Reports", @"
    SELECT VALUE -- Constructing ReportBatch_Reports
        [CodeFirstDatabaseSchema.ReportBatch_Reports](T1.[ReportBatch_Reports.id], T1.[ReportBatch_Reports.idOwner], T1.[ReportBatch_Reports.number])
    FROM (
        SELECT 
            T.Id AS [ReportBatch_Reports.id], 
            T.IdOwner AS [ReportBatch_Reports.idOwner], 
            T.Number AS [ReportBatch_Reports.number], 
            True AS _from0
        FROM DataContext.ReportBatch_Reports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ModelSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView132()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ModelSystemGoal", @"
    SELECT VALUE -- Constructing ModelSystemGoal
        [CodeFirstDatabaseSchema.ModelSystemGoal](T1.ModelSystemGoal_id, T1.ModelSystemGoal_idPublicLegalFormation, T1.ModelSystemGoal_idParent, T1.ModelSystemGoal_idElementTypeSystemGoal, T1.ModelSystemGoal_idRefStatus)
    FROM (
        SELECT 
            T.Id AS ModelSystemGoal_id, 
            T.IdPublicLegalFormation AS ModelSystemGoal_idPublicLegalFormation, 
            T.IdParent AS ModelSystemGoal_idParent, 
            T.IdElementTypeSystemGoal AS ModelSystemGoal_idElementTypeSystemGoal, 
            T.IdRefStatus AS ModelSystemGoal_idRefStatus, 
            True AS _from0
        FROM DataContext.ModelSystemGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DocumentsOfSED_ItemsSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DocumentsOfSED_ItemsSystemGoal", @"
    SELECT VALUE -- Constructing DocumentsOfSED_ItemsSystemGoal
        [CodeFirstDatabaseSchema.DocumentsOfSED_ItemsSystemGoal](T1.[DocumentsOfSED_ItemsSystemGoal.id], T1.[DocumentsOfSED_ItemsSystemGoal.idOwner], T1.[DocumentsOfSED_ItemsSystemGoal.idSystemGoal], T1.[DocumentsOfSED_ItemsSystemGoal.Code], T1.[DocumentsOfSED_ItemsSystemGoal.idElementTypeSystemGoal], T1.[DocumentsOfSED_ItemsSystemGoal.DateStart], T1.[DocumentsOfSED_ItemsSystemGoal.DateEnd], T1.[DocumentsOfSED_ItemsSystemGoal.idSBP], T1.[DocumentsOfSED_ItemsSystemGoal.isOtherDocSG], T1.[DocumentsOfSED_ItemsSystemGoal.idParent])
    FROM (
        SELECT 
            T.Id AS [DocumentsOfSED_ItemsSystemGoal.id], 
            T.IdOwner AS [DocumentsOfSED_ItemsSystemGoal.idOwner], 
            T.IdSystemGoal AS [DocumentsOfSED_ItemsSystemGoal.idSystemGoal], 
            T.Code AS [DocumentsOfSED_ItemsSystemGoal.Code], 
            T.IdElementTypeSystemGoal AS [DocumentsOfSED_ItemsSystemGoal.idElementTypeSystemGoal], 
            T.DateStart AS [DocumentsOfSED_ItemsSystemGoal.DateStart], 
            T.DateEnd AS [DocumentsOfSED_ItemsSystemGoal.DateEnd], 
            T.IdSBP AS [DocumentsOfSED_ItemsSystemGoal.idSBP], 
            T.IsOtherDocSG AS [DocumentsOfSED_ItemsSystemGoal.isOtherDocSG], 
            T.IdParent AS [DocumentsOfSED_ItemsSystemGoal.idParent], 
            True AS _from0
        FROM DataContext.DocumentsOfSED_ItemsSystemGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DocumentsOfSED
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView134()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DocumentsOfSED", "\r\n    SELECT VALUE -- Constructing DocumentsOfSED\r\n        [CodeFirstDatabaseSche" +
                    "ma.DocumentsOfSED](T1.DocumentsOfSED_id, T1.DocumentsOfSED_idPublicLegalFormatio" +
                    "n, T1.DocumentsOfSED_idVersion, T1.DocumentsOfSED_idDocType, T1.DocumentsOfSED_N" +
                    "umber, T1.DocumentsOfSED_Date, T1.DocumentsOfSED_DateStart, T1.DocumentsOfSED_Da" +
                    "teEnd, T1.DocumentsOfSED_DateCommit, T1.DocumentsOfSED_isApproved, T1.DocumentsO" +
                    "fSED_Description, T1.DocumentsOfSED_idDocStatus, T1.DocumentsOfSED_ReasonCancel," +
                    " T1.DocumentsOfSED_isRequireClarification, T1.DocumentsOfSED_ReasonClarification" +
                    ", T1.DocumentsOfSED_DateTerminate, T1.DocumentsOfSED_ReasonTerminate, T1.Documen" +
                    "tsOfSED_DateLastEdit, T1.DocumentsOfSED_idParent, T1.DocumentsOfSED_Caption)\r\n  " +
                    "  FROM (\r\n        SELECT \r\n            T.Id AS DocumentsOfSED_id, \r\n            " +
                    "T.IdPublicLegalFormation AS DocumentsOfSED_idPublicLegalFormation, \r\n           " +
                    " T.IdVersion AS DocumentsOfSED_idVersion, \r\n            T.IdDocType AS Documents" +
                    "OfSED_idDocType, \r\n            T.Number AS DocumentsOfSED_Number, \r\n            " +
                    "T.Date AS DocumentsOfSED_Date, \r\n            T.DateStart AS DocumentsOfSED_DateS" +
                    "tart, \r\n            T.DateEnd AS DocumentsOfSED_DateEnd, \r\n            T.DateCom" +
                    "mit AS DocumentsOfSED_DateCommit, \r\n            T.IsApproved AS DocumentsOfSED_i" +
                    "sApproved, \r\n            T.Description AS DocumentsOfSED_Description, \r\n        " +
                    "    T.IdDocStatus AS DocumentsOfSED_idDocStatus, \r\n            T.ReasonCancel AS" +
                    " DocumentsOfSED_ReasonCancel, \r\n            T.IsRequireClarification AS Document" +
                    "sOfSED_isRequireClarification, \r\n            T.ReasonClarification AS DocumentsO" +
                    "fSED_ReasonClarification, \r\n            T.DateTerminate AS DocumentsOfSED_DateTe" +
                    "rminate, \r\n            T.ReasonTerminate AS DocumentsOfSED_ReasonTerminate, \r\n  " +
                    "          T.DateLastEdit AS DocumentsOfSED_DateLastEdit, \r\n            T.IdParen" +
                    "t AS DocumentsOfSED_idParent, \r\n            T.Caption AS DocumentsOfSED_Caption," +
                    " \r\n            True AS _from0\r\n        FROM DataContext.DocumentsOfSED AS T\r\n   " +
                    " ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DocumentsOfSED_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DocumentsOfSED_GoalIndicator", @"
    SELECT VALUE -- Constructing DocumentsOfSED_GoalIndicator
        [CodeFirstDatabaseSchema.DocumentsOfSED_GoalIndicator](T1.[DocumentsOfSED_GoalIndicator.id], T1.[DocumentsOfSED_GoalIndicator.idOwner], T1.[DocumentsOfSED_GoalIndicator.idMaster], T1.[DocumentsOfSED_GoalIndicator.idGoalIndicator])
    FROM (
        SELECT 
            T.Id AS [DocumentsOfSED_GoalIndicator.id], 
            T.IdOwner AS [DocumentsOfSED_GoalIndicator.idOwner], 
            T.IdMaster AS [DocumentsOfSED_GoalIndicator.idMaster], 
            T.IdGoalIndicator AS [DocumentsOfSED_GoalIndicator.idGoalIndicator], 
            True AS _from0
        FROM DataContext.DocumentsOfSED_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.DocumentsOfSED_GoalIndicatorValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView136()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.DocumentsOfSED_GoalIndicatorValue", @"
    SELECT VALUE -- Constructing DocumentsOfSED_GoalIndicatorValue
        [CodeFirstDatabaseSchema.DocumentsOfSED_GoalIndicatorValue](T1.[DocumentsOfSED_GoalIndicatorValue.id], T1.[DocumentsOfSED_GoalIndicatorValue.idHierarchyPeriod], T1.[DocumentsOfSED_GoalIndicatorValue.Value], T1.[DocumentsOfSED_GoalIndicatorValue.idOwner], T1.[DocumentsOfSED_GoalIndicatorValue.idMaster])
    FROM (
        SELECT 
            T.Id AS [DocumentsOfSED_GoalIndicatorValue.id], 
            T.IdHierarchyPeriod AS [DocumentsOfSED_GoalIndicatorValue.idHierarchyPeriod], 
            T.[Value] AS [DocumentsOfSED_GoalIndicatorValue.Value], 
            T.IdOwner AS [DocumentsOfSED_GoalIndicatorValue.idOwner], 
            T.IdMaster AS [DocumentsOfSED_GoalIndicatorValue.idMaster], 
            True AS _from0
        FROM DataContext.DocumentsOfSED_GoalIndicatorValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.GoalTarget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView137()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.GoalTarget", "\r\n    SELECT VALUE -- Constructing GoalTarget\r\n        [CodeFirstDatabaseSchema.G" +
                    "oalTarget](T1.GoalTarget_id, T1.GoalTarget_idPublicLegalFormation, T1.GoalTarget" +
                    "_idVersion, T1.GoalTarget_idSystemGoalElement, T1.GoalTarget_idGoalIndicator, T1" +
                    ".GoalTarget_idRegistrator, T1.GoalTarget_DateCommit, T1.GoalTarget_idApproved, T" +
                    "1.GoalTarget_DateTerminate, T1.GoalTarget_idTerminator, T1.GoalTarget_idRegistra" +
                    "torEntity, T1.GoalTarget_idTerminatorEntity, T1.GoalTarget_idApprovedEntity, T1." +
                    "GoalTarget_DateCreate, T1.GoalTarget_IdTerminateOperation, T1.GoalTarget_idExecu" +
                    "tedOperation)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS GoalTarget_id, \r" +
                    "\n            T.IdPublicLegalFormation AS GoalTarget_idPublicLegalFormation, \r\n  " +
                    "          T.IdVersion AS GoalTarget_idVersion, \r\n            T.IdSystemGoalEleme" +
                    "nt AS GoalTarget_idSystemGoalElement, \r\n            T.IdGoalIndicator AS GoalTar" +
                    "get_idGoalIndicator, \r\n            T.IdRegistrator AS GoalTarget_idRegistrator, " +
                    "\r\n            T.DateCommit AS GoalTarget_DateCommit, \r\n            T.IdApproved " +
                    "AS GoalTarget_idApproved, \r\n            T.DateTerminate AS GoalTarget_DateTermin" +
                    "ate, \r\n            T.IdTerminator AS GoalTarget_idTerminator, \r\n            T.Id" +
                    "RegistratorEntity AS GoalTarget_idRegistratorEntity, \r\n            T.IdTerminato" +
                    "rEntity AS GoalTarget_idTerminatorEntity, \r\n            T.IdApprovedEntity AS Go" +
                    "alTarget_idApprovedEntity, \r\n            T.DateCreate AS GoalTarget_DateCreate, " +
                    "\r\n            T.IdTerminateOperation AS GoalTarget_IdTerminateOperation, \r\n     " +
                    "       T.IdExecutedOperation AS GoalTarget_idExecutedOperation, \r\n            Tr" +
                    "ue AS _from0\r\n        FROM DataContext.GoalTarget AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SystemGoalElement", "\r\n    SELECT VALUE -- Constructing SystemGoalElement\r\n        [CodeFirstDatabaseS" +
                    "chema.SystemGoalElement](T1.SystemGoalElement_id, T1.SystemGoalElement_idRegistr" +
                    "ator, T1.SystemGoalElement_idTerminator, T1.SystemGoalElement_idApproved, T1.Sys" +
                    "temGoalElement_idApprovedEntity, T1.SystemGoalElement_idRegistratorEntity, T1.Sy" +
                    "stemGoalElement_idTerminatorEntity, T1.SystemGoalElement_idExecutedOperation, T1" +
                    ".SystemGoalElement_idTerminateOperation, T1.SystemGoalElement_idPublicLegalForma" +
                    "tion, T1.SystemGoalElement_idVersion, T1.SystemGoalElement_idSystemGoal, T1.Syst" +
                    "emGoalElement_DateCommit, T1.SystemGoalElement_DateTerminate, T1.SystemGoalEleme" +
                    "nt_DateCreate, T1.SystemGoalElement_idProgram)\r\n    FROM (\r\n        SELECT \r\n   " +
                    "         T.Id AS SystemGoalElement_id, \r\n            T.IdRegistrator AS SystemGo" +
                    "alElement_idRegistrator, \r\n            T.IdTerminator AS SystemGoalElement_idTer" +
                    "minator, \r\n            T.IdApproved AS SystemGoalElement_idApproved, \r\n         " +
                    "   T.IdApprovedEntity AS SystemGoalElement_idApprovedEntity, \r\n            T.IdR" +
                    "egistratorEntity AS SystemGoalElement_idRegistratorEntity, \r\n            T.IdTer" +
                    "minatorEntity AS SystemGoalElement_idTerminatorEntity, \r\n            T.IdExecute" +
                    "dOperation AS SystemGoalElement_idExecutedOperation, \r\n            T.IdTerminate" +
                    "Operation AS SystemGoalElement_idTerminateOperation, \r\n            T.IdPublicLeg" +
                    "alFormation AS SystemGoalElement_idPublicLegalFormation, \r\n            T.IdVersi" +
                    "on AS SystemGoalElement_idVersion, \r\n            T.IdSystemGoal AS SystemGoalEle" +
                    "ment_idSystemGoal, \r\n            T.DateCommit AS SystemGoalElement_DateCommit, \r" +
                    "\n            T.DateTerminate AS SystemGoalElement_DateTerminate, \r\n            T" +
                    ".DateCreate AS SystemGoalElement_DateCreate, \r\n            T.IdProgram AS System" +
                    "GoalElement_idProgram, \r\n            True AS _from0\r\n        FROM DataContext.Sy" +
                    "stemGoalElement AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ValuesGoalTarget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ValuesGoalTarget", "\r\n    SELECT VALUE -- Constructing ValuesGoalTarget\r\n        [CodeFirstDatabaseSc" +
                    "hema.ValuesGoalTarget](T1.ValuesGoalTarget_id, T1.ValuesGoalTarget_idPublicLegal" +
                    "Formation, T1.ValuesGoalTarget_idVersion, T1.ValuesGoalTarget_idGoalTarget, T1.V" +
                    "aluesGoalTarget_idHierarchyPeriod, T1.ValuesGoalTarget_idValueType, T1.ValuesGoa" +
                    "lTarget_Value, T1.ValuesGoalTarget_DateCommit, T1.ValuesGoalTarget_idApproved, T" +
                    "1.ValuesGoalTarget_DateTerminate, T1.ValuesGoalTarget_idTerminator, T1.ValuesGoa" +
                    "lTarget_idRegistrator, T1.ValuesGoalTarget_idRegistratorEntity, T1.ValuesGoalTar" +
                    "get_idTerminatorEntity, T1.ValuesGoalTarget_idApprovedEntity, T1.ValuesGoalTarge" +
                    "t_DateCreate, T1.ValuesGoalTarget_idExecutedOperation, T1.ValuesGoalTarget_idTer" +
                    "minateOperation)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS ValuesGoalTar" +
                    "get_id, \r\n            T.IdPublicLegalFormation AS ValuesGoalTarget_idPublicLegal" +
                    "Formation, \r\n            T.IdVersion AS ValuesGoalTarget_idVersion, \r\n          " +
                    "  T.IdGoalTarget AS ValuesGoalTarget_idGoalTarget, \r\n            T.IdHierarchyPe" +
                    "riod AS ValuesGoalTarget_idHierarchyPeriod, \r\n            T.IdValueType AS Value" +
                    "sGoalTarget_idValueType, \r\n            T.[Value] AS ValuesGoalTarget_Value, \r\n  " +
                    "          T.DateCommit AS ValuesGoalTarget_DateCommit, \r\n            T.IdApprove" +
                    "d AS ValuesGoalTarget_idApproved, \r\n            T.DateTerminate AS ValuesGoalTar" +
                    "get_DateTerminate, \r\n            T.IdTerminator AS ValuesGoalTarget_idTerminator" +
                    ", \r\n            T.IdRegistrator AS ValuesGoalTarget_idRegistrator, \r\n           " +
                    " T.IdRegistratorEntity AS ValuesGoalTarget_idRegistratorEntity, \r\n            T." +
                    "IdTerminatorEntity AS ValuesGoalTarget_idTerminatorEntity, \r\n            T.IdApp" +
                    "rovedEntity AS ValuesGoalTarget_idApprovedEntity, \r\n            T.DateCreate AS " +
                    "ValuesGoalTarget_DateCreate, \r\n            T.IdExecutedOperation AS ValuesGoalTa" +
                    "rget_idExecutedOperation, \r\n            T.IdTerminateOperation AS ValuesGoalTarg" +
                    "et_idTerminateOperation, \r\n            True AS _from0\r\n        FROM DataContext." +
                    "ValuesGoalTarget AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView140()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2427);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PlanActivity\r\n        [CodeFirstDatabaseSchem");
            viewString.Append("a.PlanActivity](T1.PlanActivity_id, T1.PlanActivity_idPublicLegalFormation, T1.P");
            viewString.Append("lanActivity_idBudget, T1.PlanActivity_idVersion, T1.PlanActivity_Number, T1.Plan");
            viewString.Append("Activity_Date, T1.PlanActivity_isApproved, T1.PlanActivity_Description, T1.PlanA");
            viewString.Append("ctivity_idParent, T1.PlanActivity_isRequireClarification, T1.PlanActivity_Reason");
            viewString.Append("Clarification, T1.PlanActivity_idDocStatus, T1.PlanActivity_Caption, T1.PlanActi");
            viewString.Append("vity_DateCommit, T1.PlanActivity_idSBP, T1.PlanActivity_DateTerminate, T1.PlanAc");
            viewString.Append("tivity_ReasonTerminate, T1.PlanActivity_ReasonCancel, T1.PlanActivity_DateLastEd");
            viewString.Append("it, T1.[PlanActivity.idDocAUBUPeriodType_OFG], T1.[PlanActivity.idDocAUBUPeriodT");
            viewString.Append("ype_PFG1], T1.[PlanActivity.idDocAUBUPeriodType_PFG2], T1.PlanActivity_isAdditio");
            viewString.Append("nalNeed, T1.[PlanActivity.idSBP_BlankActual])\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.Id AS PlanActivity_id, \r\n            T.IdPublicLegalFormation AS PlanA");
            viewString.Append("ctivity_idPublicLegalFormation, \r\n            T.IdBudget AS PlanActivity_idBudge");
            viewString.Append("t, \r\n            T.IdVersion AS PlanActivity_idVersion, \r\n            T.Number A");
            viewString.Append("S PlanActivity_Number, \r\n            T.Date AS PlanActivity_Date, \r\n            ");
            viewString.Append("T.IsApproved AS PlanActivity_isApproved, \r\n            T.Description AS PlanActi");
            viewString.Append("vity_Description, \r\n            T.IdParent AS PlanActivity_idParent, \r\n         ");
            viewString.Append("   T.IsRequireClarification AS PlanActivity_isRequireClarification, \r\n          ");
            viewString.Append("  T.ReasonClarification AS PlanActivity_ReasonClarification, \r\n            T.IdD");
            viewString.Append("ocStatus AS PlanActivity_idDocStatus, \r\n            T.Caption AS PlanActivity_Ca");
            viewString.Append("ption, \r\n            T.DateCommit AS PlanActivity_DateCommit, \r\n            T.Id");
            viewString.Append("SBP AS PlanActivity_idSBP, \r\n            T.DateTerminate AS PlanActivity_DateTer");
            viewString.Append("minate, \r\n            T.ReasonTerminate AS PlanActivity_ReasonTerminate, \r\n     ");
            viewString.Append("       T.ReasonCancel AS PlanActivity_ReasonCancel, \r\n            T.DateLastEdit");
            viewString.Append(" AS PlanActivity_DateLastEdit, \r\n            T.IdDocAUBUPeriodType_OFG AS [PlanA");
            viewString.Append("ctivity.idDocAUBUPeriodType_OFG], \r\n            T.IdDocAUBUPeriodType_PFG1 AS [P");
            viewString.Append("lanActivity.idDocAUBUPeriodType_PFG1], \r\n            T.IdDocAUBUPeriodType_PFG2 ");
            viewString.Append("AS [PlanActivity.idDocAUBUPeriodType_PFG2], \r\n            T.IsAdditionalNeed AS ");
            viewString.Append("PlanActivity_isAdditionalNeed, \r\n            T.IdSBP_BlankActual AS [PlanActivit");
            viewString.Append("y.idSBP_BlankActual], \r\n            True AS _from0\r\n        FROM DataContext.Pla");
            viewString.Append("nActivity AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView141()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_Activity", @"
    SELECT VALUE -- Constructing PlanActivity_Activity
        [CodeFirstDatabaseSchema.PlanActivity_Activity](T1.[PlanActivity_Activity.id], T1.[PlanActivity_Activity.idOwner], T1.[PlanActivity_Activity.idContingent], T1.[PlanActivity_Activity.idIndicatorActivity], T1.[PlanActivity_Activity.idActivity], T1.[PlanActivity_Activity.idActivityOfSBP], T1.[PlanActivity_Activity.idActivityOfSBP_A])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_Activity.id], 
            T.IdOwner AS [PlanActivity_Activity.idOwner], 
            T.IdContingent AS [PlanActivity_Activity.idContingent], 
            T.IdIndicatorActivity AS [PlanActivity_Activity.idIndicatorActivity], 
            T.IdActivity AS [PlanActivity_Activity.idActivity], 
            T.IdActivityOfSBP AS [PlanActivity_Activity.idActivityOfSBP], 
            T.IdActivityOfSBP_A AS [PlanActivity_Activity.idActivityOfSBP_A], 
            True AS _from0
        FROM DataContext.PlanActivity_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_ActivityVolume
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView142()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_ActivityVolume", @"
    SELECT VALUE -- Constructing PlanActivity_ActivityVolume
        [CodeFirstDatabaseSchema.PlanActivity_ActivityVolume](T1.[PlanActivity_ActivityVolume.id], T1.[PlanActivity_ActivityVolume.idOwner], T1.[PlanActivity_ActivityVolume.idMaster], T1.[PlanActivity_ActivityVolume.idHierarchyPeriod], T1.[PlanActivity_ActivityVolume.Volume], T1.[PlanActivity_ActivityVolume.PriceLimit], T1.[PlanActivity_ActivityVolume.AdditionalVolume])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_ActivityVolume.id], 
            T.IdOwner AS [PlanActivity_ActivityVolume.idOwner], 
            T.IdMaster AS [PlanActivity_ActivityVolume.idMaster], 
            T.IdHierarchyPeriod AS [PlanActivity_ActivityVolume.idHierarchyPeriod], 
            T.Volume AS [PlanActivity_ActivityVolume.Volume], 
            T.PriceLimit AS [PlanActivity_ActivityVolume.PriceLimit], 
            T.AdditionalVolume AS [PlanActivity_ActivityVolume.AdditionalVolume], 
            True AS _from0
        FROM DataContext.PlanActivity_ActivityVolume AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_IndicatorQualityActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView143()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_IndicatorQualityActivity", @"
    SELECT VALUE -- Constructing PlanActivity_IndicatorQualityActivity
        [CodeFirstDatabaseSchema.PlanActivity_IndicatorQualityActivity](T1.[PlanActivity_IndicatorQualityActivity.id], T1.[PlanActivity_IndicatorQualityActivity.idOwner], T1.[PlanActivity_IndicatorQualityActivity.idMaster], T1.[PlanActivity_IndicatorQualityActivity.idIndicatorActivity])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_IndicatorQualityActivity.id], 
            T.IdOwner AS [PlanActivity_IndicatorQualityActivity.idOwner], 
            T.IdMaster AS [PlanActivity_IndicatorQualityActivity.idMaster], 
            T.IdIndicatorActivity AS [PlanActivity_IndicatorQualityActivity.idIndicatorActivity], 
            True AS _from0
        FROM DataContext.PlanActivity_IndicatorQualityActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_IndicatorQualityActivityValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView144()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_IndicatorQualityActivityValue", @"
    SELECT VALUE -- Constructing PlanActivity_IndicatorQualityActivityValue
        [CodeFirstDatabaseSchema.PlanActivity_IndicatorQualityActivityValue](T1.[PlanActivity_IndicatorQualityActivityValue.id], T1.[PlanActivity_IndicatorQualityActivityValue.idOwner], T1.[PlanActivity_IndicatorQualityActivityValue.idMaster], T1.[PlanActivity_IndicatorQualityActivityValue.idHierarchyPeriod], T1.[PlanActivity_IndicatorQualityActivityValue.Value], T1.[PlanActivity_IndicatorQualityActivityValue.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_IndicatorQualityActivityValue.id], 
            T.IdOwner AS [PlanActivity_IndicatorQualityActivityValue.idOwner], 
            T.IdMaster AS [PlanActivity_IndicatorQualityActivityValue.idMaster], 
            T.IdHierarchyPeriod AS [PlanActivity_IndicatorQualityActivityValue.idHierarchyPeriod], 
            T.[Value] AS [PlanActivity_IndicatorQualityActivityValue.Value], 
            T.AdditionalValue AS [PlanActivity_IndicatorQualityActivityValue.AdditionalValue], 
            True AS _from0
        FROM DataContext.PlanActivity_IndicatorQualityActivityValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_ActivityAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView145()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_ActivityAUBU", @"
    SELECT VALUE -- Constructing PlanActivity_ActivityAUBU
        [CodeFirstDatabaseSchema.PlanActivity_ActivityAUBU](T1.[PlanActivity_ActivityAUBU.id], T1.[PlanActivity_ActivityAUBU.idOwner], T1.[PlanActivity_ActivityAUBU.idActivity], T1.[PlanActivity_ActivityAUBU.idContingent], T1.[PlanActivity_ActivityAUBU.idIndicatorActivity])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_ActivityAUBU.id], 
            T.IdOwner AS [PlanActivity_ActivityAUBU.idOwner], 
            T.IdActivity AS [PlanActivity_ActivityAUBU.idActivity], 
            T.IdContingent AS [PlanActivity_ActivityAUBU.idContingent], 
            T.IdIndicatorActivity AS [PlanActivity_ActivityAUBU.idIndicatorActivity], 
            True AS _from0
        FROM DataContext.PlanActivity_ActivityAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_ActivityVolumeAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView146()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_ActivityVolumeAUBU", @"
    SELECT VALUE -- Constructing PlanActivity_ActivityVolumeAUBU
        [CodeFirstDatabaseSchema.PlanActivity_ActivityVolumeAUBU](T1.[PlanActivity_ActivityVolumeAUBU.id], T1.[PlanActivity_ActivityVolumeAUBU.idOwner], T1.[PlanActivity_ActivityVolumeAUBU.idMaster], T1.[PlanActivity_ActivityVolumeAUBU.idHierarchyPeriod], T1.[PlanActivity_ActivityVolumeAUBU.Volume], T1.[PlanActivity_ActivityVolumeAUBU.AdditionalVolume])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_ActivityVolumeAUBU.id], 
            T.IdOwner AS [PlanActivity_ActivityVolumeAUBU.idOwner], 
            T.IdMaster AS [PlanActivity_ActivityVolumeAUBU.idMaster], 
            T.IdHierarchyPeriod AS [PlanActivity_ActivityVolumeAUBU.idHierarchyPeriod], 
            T.Volume AS [PlanActivity_ActivityVolumeAUBU.Volume], 
            T.AdditionalVolume AS [PlanActivity_ActivityVolumeAUBU.AdditionalVolume], 
            True AS _from0
        FROM DataContext.PlanActivity_ActivityVolumeAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_KBKOfFinancialProvision
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView147()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2360);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PlanActivity_KBKOfFinancialProvision\r\n       ");
            viewString.Append(" [CodeFirstDatabaseSchema.PlanActivity_KBKOfFinancialProvision](T1.[PlanActivity");
            viewString.Append("_KBKOfFinancialProvision.id], T1.[PlanActivity_KBKOfFinancialProvision.idOwner],");
            viewString.Append(" T1.[PlanActivity_KBKOfFinancialProvision.isMeansAUBU], T1.[PlanActivity_KBKOfFi");
            viewString.Append("nancialProvision.idExpenseObligationType], T1.[PlanActivity_KBKOfFinancialProvis");
            viewString.Append("ion.idFinanceSource], T1.[PlanActivity_KBKOfFinancialProvision.idKFO], T1.[PlanA");
            viewString.Append("ctivity_KBKOfFinancialProvision.idKVSR], T1.[PlanActivity_KBKOfFinancialProvisio");
            viewString.Append("n.idRZPR], T1.[PlanActivity_KBKOfFinancialProvision.idKCSR], T1.[PlanActivity_KB");
            viewString.Append("KOfFinancialProvision.idKVR], T1.[PlanActivity_KBKOfFinancialProvision.idKOSGU],");
            viewString.Append(" T1.[PlanActivity_KBKOfFinancialProvision.idDFK], T1.[PlanActivity_KBKOfFinancia");
            viewString.Append("lProvision.idDKR], T1.[PlanActivity_KBKOfFinancialProvision.idDEK], T1.[PlanActi");
            viewString.Append("vity_KBKOfFinancialProvision.idCodeSubsidy], T1.[PlanActivity_KBKOfFinancialProv");
            viewString.Append("ision.idBranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [PlanActi");
            viewString.Append("vity_KBKOfFinancialProvision.id], \r\n            T.IdOwner AS [PlanActivity_KBKOf");
            viewString.Append("FinancialProvision.idOwner], \r\n            T.IsMeansAUBU AS [PlanActivity_KBKOfF");
            viewString.Append("inancialProvision.isMeansAUBU], \r\n            T.IdExpenseObligationType AS [Plan");
            viewString.Append("Activity_KBKOfFinancialProvision.idExpenseObligationType], \r\n            T.IdFin");
            viewString.Append("anceSource AS [PlanActivity_KBKOfFinancialProvision.idFinanceSource], \r\n        ");
            viewString.Append("    T.IdKFO AS [PlanActivity_KBKOfFinancialProvision.idKFO], \r\n            T.IdK");
            viewString.Append("VSR AS [PlanActivity_KBKOfFinancialProvision.idKVSR], \r\n            T.IdRZPR AS ");
            viewString.Append("[PlanActivity_KBKOfFinancialProvision.idRZPR], \r\n            T.IdKCSR AS [PlanAc");
            viewString.Append("tivity_KBKOfFinancialProvision.idKCSR], \r\n            T.IdKVR AS [PlanActivity_K");
            viewString.Append("BKOfFinancialProvision.idKVR], \r\n            T.IdKOSGU AS [PlanActivity_KBKOfFin");
            viewString.Append("ancialProvision.idKOSGU], \r\n            T.IdDFK AS [PlanActivity_KBKOfFinancialP");
            viewString.Append("rovision.idDFK], \r\n            T.IdDKR AS [PlanActivity_KBKOfFinancialProvision.");
            viewString.Append("idDKR], \r\n            T.IdDEK AS [PlanActivity_KBKOfFinancialProvision.idDEK], \r");
            viewString.Append("\n            T.IdCodeSubsidy AS [PlanActivity_KBKOfFinancialProvision.idCodeSubs");
            viewString.Append("idy], \r\n            T.IdBranchCode AS [PlanActivity_KBKOfFinancialProvision.idBr");
            viewString.Append("anchCode], \r\n            True AS _from0\r\n        FROM DataContext.PlanActivity_K");
            viewString.Append("BKOfFinancialProvision AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_KBKOfFinancialProvision", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_PeriodsOfFinancialProvision
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView148()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_PeriodsOfFinancialProvision", @"
    SELECT VALUE -- Constructing PlanActivity_PeriodsOfFinancialProvision
        [CodeFirstDatabaseSchema.PlanActivity_PeriodsOfFinancialProvision](T1.[PlanActivity_PeriodsOfFinancialProvision.id], T1.[PlanActivity_PeriodsOfFinancialProvision.idOwner], T1.[PlanActivity_PeriodsOfFinancialProvision.idHierarchyPeriod], T1.[PlanActivity_PeriodsOfFinancialProvision.Value], T1.[PlanActivity_PeriodsOfFinancialProvision.idMaster], T1.[PlanActivity_PeriodsOfFinancialProvision.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_PeriodsOfFinancialProvision.id], 
            T.IdOwner AS [PlanActivity_PeriodsOfFinancialProvision.idOwner], 
            T.IdHierarchyPeriod AS [PlanActivity_PeriodsOfFinancialProvision.idHierarchyPeriod], 
            T.[Value] AS [PlanActivity_PeriodsOfFinancialProvision.Value], 
            T.IdMaster AS [PlanActivity_PeriodsOfFinancialProvision.idMaster], 
            T.AdditionalValue AS [PlanActivity_PeriodsOfFinancialProvision.AdditionalValue], 
            True AS _from0
        FROM DataContext.PlanActivity_PeriodsOfFinancialProvision AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_RequirementsForTheTask
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView149()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_RequirementsForTheTask", "\r\n    SELECT VALUE -- Constructing PlanActivity_RequirementsForTheTask\r\n        [" +
                    "CodeFirstDatabaseSchema.PlanActivity_RequirementsForTheTask](T1.[PlanActivity_Re" +
                    "quirementsForTheTask.id], T1.[PlanActivity_RequirementsForTheTask.idOwner], T1.[" +
                    "PlanActivity_RequirementsForTheTask.idActivityType], T1.[PlanActivity_Requiremen" +
                    "tsForTheTask.ReasonTerminationTask], T1.[PlanActivity_RequirementsForTheTask.Dat" +
                    "esReportingOnExecutionTask], T1.[PlanActivity_RequirementsForTheTask.OtherRequir" +
                    "ementsOnExecutionTask], T1.[PlanActivity_RequirementsForTheTask.AnyOtherInformat" +
                    "ionOnExecutionTask], T1.[PlanActivity_RequirementsForTheTask.GroundsSuspendTasks" +
                    "])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [PlanActivity_RequirementsF" +
                    "orTheTask.id], \r\n            T.IdOwner AS [PlanActivity_RequirementsForTheTask.i" +
                    "dOwner], \r\n            T.IdActivityType AS [PlanActivity_RequirementsForTheTask." +
                    "idActivityType], \r\n            T.ReasonTerminationTask AS [PlanActivity_Requirem" +
                    "entsForTheTask.ReasonTerminationTask], \r\n            T.DatesReportingOnExecution" +
                    "Task AS [PlanActivity_RequirementsForTheTask.DatesReportingOnExecutionTask], \r\n " +
                    "           T.OtherRequirementsOnExecutionTask AS [PlanActivity_RequirementsForTh" +
                    "eTask.OtherRequirementsOnExecutionTask], \r\n            T.AnyOtherInformationOnEx" +
                    "ecutionTask AS [PlanActivity_RequirementsForTheTask.AnyOtherInformationOnExecuti" +
                    "onTask], \r\n            T.GroundsSuspendTasks AS [PlanActivity_RequirementsForThe" +
                    "Task.GroundsSuspendTasks], \r\n            True AS _from0\r\n        FROM DataContex" +
                    "t.PlanActivity_RequirementsForTheTask AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PlanActivity_OrderOfControlTheExecutionTasks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView150()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PlanActivity_OrderOfControlTheExecutionTasks", @"
    SELECT VALUE -- Constructing PlanActivity_OrderOfControlTheExecutionTasks
        [CodeFirstDatabaseSchema.PlanActivity_OrderOfControlTheExecutionTasks](T1.[PlanActivity_OrderOfControlTheExecutionTasks.id], T1.[PlanActivity_OrderOfControlTheExecutionTasks.idOwner], T1.[PlanActivity_OrderOfControlTheExecutionTasks.idMaster], T1.[PlanActivity_OrderOfControlTheExecutionTasks.FormOfControl], T1.[PlanActivity_OrderOfControlTheExecutionTasks.Periodicity], T1.[PlanActivity_OrderOfControlTheExecutionTasks.OrgansOfExecutiveAuthoritiesInCharge])
    FROM (
        SELECT 
            T.Id AS [PlanActivity_OrderOfControlTheExecutionTasks.id], 
            T.IdOwner AS [PlanActivity_OrderOfControlTheExecutionTasks.idOwner], 
            T.IdMaster AS [PlanActivity_OrderOfControlTheExecutionTasks.idMaster], 
            T.FormOfControl AS [PlanActivity_OrderOfControlTheExecutionTasks.FormOfControl], 
            T.Periodicity AS [PlanActivity_OrderOfControlTheExecutionTasks.Periodicity], 
            T.OrgansOfExecutiveAuthoritiesInCharge AS [PlanActivity_OrderOfControlTheExecutionTasks.OrgansOfExecutiveAuthoritiesInCharge], 
            True AS _from0
        FROM DataContext.PlanActivity_OrderOfControlTheExecutionTasks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_Program
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView151()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3104);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalancingIFDB_Program\r\n        [CodeFirstData");
            viewString.Append("baseSchema.BalancingIFDB_Program](T1.[BalancingIFDB_Program.id], T1.[BalancingIF");
            viewString.Append("DB_Program.idOwner], T1.[BalancingIFDB_Program.idParent], T1.[BalancingIFDB_Prog");
            viewString.Append("ram.OFG], T1.[BalancingIFDB_Program.AdditionalOFG], T1.[BalancingIFDB_Program.Ch");
            viewString.Append("angeOFG], T1.[BalancingIFDB_Program.ChangeAdditionalOFG], T1.[BalancingIFDB_Prog");
            viewString.Append("ram.PFG1], T1.[BalancingIFDB_Program.AdditionalPFG1], T1.[BalancingIFDB_Program.");
            viewString.Append("ChangePFG1], T1.[BalancingIFDB_Program.ChangeAdditionalPFG1], T1.[BalancingIFDB_");
            viewString.Append("Program.PFG2], T1.[BalancingIFDB_Program.AdditionalPFG2], T1.[BalancingIFDB_Prog");
            viewString.Append("ram.ChangePFG2], T1.[BalancingIFDB_Program.ChangeAdditionalPFG2], T1.[BalancingI");
            viewString.Append("FDB_Program.idProgramOrActivity], T1.[BalancingIFDB_Program.idProgramOrActivityE");
            viewString.Append("ntity], T1.[BalancingIFDB_Program.idType], T1.[BalancingIFDB_Program.idTypeEntit");
            viewString.Append("y], T1.[BalancingIFDB_Program.DifferenceOFG], T1.[BalancingIFDB_Program.Differen");
            viewString.Append("ceAdditionalOFG], T1.[BalancingIFDB_Program.DifferencePFG1], T1.[BalancingIFDB_P");
            viewString.Append("rogram.DifferenceAdditionalPFG1], T1.[BalancingIFDB_Program.DifferencePFG2], T1.");
            viewString.Append("[BalancingIFDB_Program.DifferenceAdditionalPFG2])\r\n    FROM (\r\n        SELECT \r\n");
            viewString.Append("            T.Id AS [BalancingIFDB_Program.id], \r\n            T.IdOwner AS [Bala");
            viewString.Append("ncingIFDB_Program.idOwner], \r\n            T.IdParent AS [BalancingIFDB_Program.i");
            viewString.Append("dParent], \r\n            T.OFG AS [BalancingIFDB_Program.OFG], \r\n            T.Ad");
            viewString.Append("ditionalOFG AS [BalancingIFDB_Program.AdditionalOFG], \r\n            T.ChangeOFG ");
            viewString.Append("AS [BalancingIFDB_Program.ChangeOFG], \r\n            T.ChangeAdditionalOFG AS [Ba");
            viewString.Append("lancingIFDB_Program.ChangeAdditionalOFG], \r\n            T.PFG1 AS [BalancingIFDB");
            viewString.Append("_Program.PFG1], \r\n            T.AdditionalPFG1 AS [BalancingIFDB_Program.Additio");
            viewString.Append("nalPFG1], \r\n            T.ChangePFG1 AS [BalancingIFDB_Program.ChangePFG1], \r\n  ");
            viewString.Append("          T.ChangeAdditionalPFG1 AS [BalancingIFDB_Program.ChangeAdditionalPFG1]");
            viewString.Append(", \r\n            T.PFG2 AS [BalancingIFDB_Program.PFG2], \r\n            T.Addition");
            viewString.Append("alPFG2 AS [BalancingIFDB_Program.AdditionalPFG2], \r\n            T.ChangePFG2 AS ");
            viewString.Append("[BalancingIFDB_Program.ChangePFG2], \r\n            T.ChangeAdditionalPFG2 AS [Bal");
            viewString.Append("ancingIFDB_Program.ChangeAdditionalPFG2], \r\n            T.IdProgramOrActivity AS");
            viewString.Append(" [BalancingIFDB_Program.idProgramOrActivity], \r\n            T.IdProgramOrActivit");
            viewString.Append("yEntity AS [BalancingIFDB_Program.idProgramOrActivityEntity], \r\n            T.Id");
            viewString.Append("Type AS [BalancingIFDB_Program.idType], \r\n            T.IdTypeEntity AS [Balanci");
            viewString.Append("ngIFDB_Program.idTypeEntity], \r\n            T.DifferenceOFG AS [BalancingIFDB_Pr");
            viewString.Append("ogram.DifferenceOFG], \r\n            T.DifferenceAdditionalOFG AS [BalancingIFDB_");
            viewString.Append("Program.DifferenceAdditionalOFG], \r\n            T.DifferencePFG1 AS [BalancingIF");
            viewString.Append("DB_Program.DifferencePFG1], \r\n            T.DifferenceAdditionalPFG1 AS [Balanci");
            viewString.Append("ngIFDB_Program.DifferenceAdditionalPFG1], \r\n            T.DifferencePFG2 AS [Bal");
            viewString.Append("ancingIFDB_Program.DifferencePFG2], \r\n            T.DifferenceAdditionalPFG2 AS ");
            viewString.Append("[BalancingIFDB_Program.DifferenceAdditionalPFG2], \r\n            True AS _from0\r\n");
            viewString.Append("        FROM DataContext.BalancingIFDB_Program AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_Program", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView152()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB", "\r\n    SELECT VALUE -- Constructing BalancingIFDB\r\n        [CodeFirstDatabaseSchem" +
                    "a.BalancingIFDB](T1.BalancingIFDB_id, T1.BalancingIFDB_idPublicLegalFormation, T" +
                    "1.BalancingIFDB_idVersion, T1.BalancingIFDB_Number, T1.BalancingIFDB_Date, T1.Ba" +
                    "lancingIFDB_DateCommit, T1.BalancingIFDB_Description, T1.BalancingIFDB_DateLastE" +
                    "dit, T1.BalancingIFDB_Caption, T1.BalancingIFDB_idSourcesDataTools, T1.Balancing" +
                    "IFDB_idBudget, T1.BalancingIFDB_idDocStatus, T1.BalancingIFDB_idBalancingIFDBTyp" +
                    "e, T1.[BalancingIFDB.idBalanceConfig_FilterRule], T1.BalancingIFDB_idUser)\r\n    " +
                    "FROM (\r\n        SELECT \r\n            T.Id AS BalancingIFDB_id, \r\n            T.I" +
                    "dPublicLegalFormation AS BalancingIFDB_idPublicLegalFormation, \r\n            T.I" +
                    "dVersion AS BalancingIFDB_idVersion, \r\n            T.Number AS BalancingIFDB_Num" +
                    "ber, \r\n            T.Date AS BalancingIFDB_Date, \r\n            T.DateCommit AS B" +
                    "alancingIFDB_DateCommit, \r\n            T.Description AS BalancingIFDB_Descriptio" +
                    "n, \r\n            T.DateLastEdit AS BalancingIFDB_DateLastEdit, \r\n            T.C" +
                    "aption AS BalancingIFDB_Caption, \r\n            T.IdSourcesDataTools AS Balancing" +
                    "IFDB_idSourcesDataTools, \r\n            T.IdBudget AS BalancingIFDB_idBudget, \r\n " +
                    "           T.IdDocStatus AS BalancingIFDB_idDocStatus, \r\n            T.IdBalanci" +
                    "ngIFDBType AS BalancingIFDB_idBalancingIFDBType, \r\n            T.IdBalanceConfig" +
                    "_FilterRule AS [BalancingIFDB.idBalanceConfig_FilterRule], \r\n            T.IdUse" +
                    "r AS BalancingIFDB_idUser, \r\n            True AS _from0\r\n        FROM DataContex" +
                    "t.BalancingIFDB AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_Expense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView153()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4193);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalancingIFDB_Expense\r\n        [CodeFirstData");
            viewString.Append("baseSchema.BalancingIFDB_Expense](T1.[BalancingIFDB_Expense.id], T1.[BalancingIF");
            viewString.Append("DB_Expense.idOwner], T1.[BalancingIFDB_Expense.idMaster], T1.[BalancingIFDB_Expe");
            viewString.Append("nse.idExpenseObligationType], T1.[BalancingIFDB_Expense.idFinanceSource], T1.[Ba");
            viewString.Append("lancingIFDB_Expense.idKFO], T1.[BalancingIFDB_Expense.idKVSR], T1.[BalancingIFDB");
            viewString.Append("_Expense.idRZPR], T1.[BalancingIFDB_Expense.idKCSR], T1.[BalancingIFDB_Expense.i");
            viewString.Append("dKVR], T1.[BalancingIFDB_Expense.idKOSGU], T1.[BalancingIFDB_Expense.idDFK], T1.");
            viewString.Append("[BalancingIFDB_Expense.idDKR], T1.[BalancingIFDB_Expense.idDEK], T1.[BalancingIF");
            viewString.Append("DB_Expense.idCodeSubsidy], T1.[BalancingIFDB_Expense.idBranchCode], T1.[Balancin");
            viewString.Append("gIFDB_Expense.OFG], T1.[BalancingIFDB_Expense.AdditionalOFG], T1.[BalancingIFDB_");
            viewString.Append("Expense.ChangeOFG], T1.[BalancingIFDB_Expense.ChangeAdditionalOFG], T1.[Balancin");
            viewString.Append("gIFDB_Expense.PFG1], T1.[BalancingIFDB_Expense.AdditionalPFG1], T1.[BalancingIFD");
            viewString.Append("B_Expense.ChangePFG1], T1.[BalancingIFDB_Expense.ChangeAdditionalPFG1], T1.[Bala");
            viewString.Append("ncingIFDB_Expense.PFG2], T1.[BalancingIFDB_Expense.AdditionalPFG2], T1.[Balancin");
            viewString.Append("gIFDB_Expense.ChangePFG2], T1.[BalancingIFDB_Expense.ChangeAdditionalPFG2], T1.[");
            viewString.Append("BalancingIFDB_Expense.DifferenceOFG], T1.[BalancingIFDB_Expense.DifferenceAdditi");
            viewString.Append("onalOFG], T1.[BalancingIFDB_Expense.DifferencePFG1], T1.[BalancingIFDB_Expense.D");
            viewString.Append("ifferenceAdditionalPFG1], T1.[BalancingIFDB_Expense.DifferencePFG2], T1.[Balanci");
            viewString.Append("ngIFDB_Expense.DifferenceAdditionalPFG2], T1.[BalancingIFDB_Expense.idOKATO], T1");
            viewString.Append(".[BalancingIFDB_Expense.idAuthorityOfExpenseObligation])\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.Id AS [BalancingIFDB_Expense.id], \r\n            T.IdOwner A");
            viewString.Append("S [BalancingIFDB_Expense.idOwner], \r\n            T.IdMaster AS [BalancingIFDB_Ex");
            viewString.Append("pense.idMaster], \r\n            T.IdExpenseObligationType AS [BalancingIFDB_Expen");
            viewString.Append("se.idExpenseObligationType], \r\n            T.IdFinanceSource AS [BalancingIFDB_E");
            viewString.Append("xpense.idFinanceSource], \r\n            T.IdKFO AS [BalancingIFDB_Expense.idKFO],");
            viewString.Append(" \r\n            T.IdKVSR AS [BalancingIFDB_Expense.idKVSR], \r\n            T.IdRZP");
            viewString.Append("R AS [BalancingIFDB_Expense.idRZPR], \r\n            T.IdKCSR AS [BalancingIFDB_Ex");
            viewString.Append("pense.idKCSR], \r\n            T.IdKVR AS [BalancingIFDB_Expense.idKVR], \r\n       ");
            viewString.Append("     T.IdKOSGU AS [BalancingIFDB_Expense.idKOSGU], \r\n            T.IdDFK AS [Bal");
            viewString.Append("ancingIFDB_Expense.idDFK], \r\n            T.IdDKR AS [BalancingIFDB_Expense.idDKR");
            viewString.Append("], \r\n            T.IdDEK AS [BalancingIFDB_Expense.idDEK], \r\n            T.IdCod");
            viewString.Append("eSubsidy AS [BalancingIFDB_Expense.idCodeSubsidy], \r\n            T.IdBranchCode ");
            viewString.Append("AS [BalancingIFDB_Expense.idBranchCode], \r\n            T.OFG AS [BalancingIFDB_E");
            viewString.Append("xpense.OFG], \r\n            T.AdditionalOFG AS [BalancingIFDB_Expense.AdditionalO");
            viewString.Append("FG], \r\n            T.ChangeOFG AS [BalancingIFDB_Expense.ChangeOFG], \r\n         ");
            viewString.Append("   T.ChangeAdditionalOFG AS [BalancingIFDB_Expense.ChangeAdditionalOFG], \r\n     ");
            viewString.Append("       T.PFG1 AS [BalancingIFDB_Expense.PFG1], \r\n            T.AdditionalPFG1 AS");
            viewString.Append(" [BalancingIFDB_Expense.AdditionalPFG1], \r\n            T.ChangePFG1 AS [Balancin");
            viewString.Append("gIFDB_Expense.ChangePFG1], \r\n            T.ChangeAdditionalPFG1 AS [BalancingIFD");
            viewString.Append("B_Expense.ChangeAdditionalPFG1], \r\n            T.PFG2 AS [BalancingIFDB_Expense.");
            viewString.Append("PFG2], \r\n            T.AdditionalPFG2 AS [BalancingIFDB_Expense.AdditionalPFG2],");
            viewString.Append(" \r\n            T.ChangePFG2 AS [BalancingIFDB_Expense.ChangePFG2], \r\n           ");
            viewString.Append(" T.ChangeAdditionalPFG2 AS [BalancingIFDB_Expense.ChangeAdditionalPFG2], \r\n     ");
            viewString.Append("       T.DifferenceOFG AS [BalancingIFDB_Expense.DifferenceOFG], \r\n            T");
            viewString.Append(".DifferenceAdditionalOFG AS [BalancingIFDB_Expense.DifferenceAdditionalOFG], \r\n ");
            viewString.Append("           T.DifferencePFG1 AS [BalancingIFDB_Expense.DifferencePFG1], \r\n       ");
            viewString.Append("     T.DifferenceAdditionalPFG1 AS [BalancingIFDB_Expense.DifferenceAdditionalPF");
            viewString.Append("G1], \r\n            T.DifferencePFG2 AS [BalancingIFDB_Expense.DifferencePFG2], \r");
            viewString.Append("\n            T.DifferenceAdditionalPFG2 AS [BalancingIFDB_Expense.DifferenceAddi");
            viewString.Append("tionalPFG2], \r\n            T.IdOKATO AS [BalancingIFDB_Expense.idOKATO], \r\n     ");
            viewString.Append("       T.IdAuthorityOfExpenseObligation AS [BalancingIFDB_Expense.idAuthorityOfE");
            viewString.Append("xpenseObligation], \r\n            True AS _from0\r\n        FROM DataContext.Balanc");
            viewString.Append("ingIFDB_Expense AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_Expense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_EstimatedLine
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView154()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_EstimatedLine", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_EstimatedLine\r\n        [CodeFirs" +
                    "tDatabaseSchema.BalancingIFDB_EstimatedLine](T1.[BalancingIFDB_EstimatedLine.id]" +
                    ", T1.[BalancingIFDB_EstimatedLine.idOwner], T1.[BalancingIFDB_EstimatedLine.idMa" +
                    "ster], T1.[BalancingIFDB_EstimatedLine.idEstimatedLine], T1.[BalancingIFDB_Estim" +
                    "atedLine.OldValue], T1.[BalancingIFDB_EstimatedLine.NewValue], T1.[BalancingIFDB" +
                    "_EstimatedLine.idTaskCollection], T1.[BalancingIFDB_EstimatedLine.idHierarchyPer" +
                    "iod], T1.[BalancingIFDB_EstimatedLine.isAdditionalNeed], T1.[BalancingIFDB_Estim" +
                    "atedLine.idOKATO], T1.[BalancingIFDB_EstimatedLine.idAuthorityOfExpenseObligatio" +
                    "n])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [BalancingIFDB_EstimatedLi" +
                    "ne.id], \r\n            T.IdOwner AS [BalancingIFDB_EstimatedLine.idOwner], \r\n    " +
                    "        T.IdMaster AS [BalancingIFDB_EstimatedLine.idMaster], \r\n            T.Id" +
                    "EstimatedLine AS [BalancingIFDB_EstimatedLine.idEstimatedLine], \r\n            T." +
                    "OldValue AS [BalancingIFDB_EstimatedLine.OldValue], \r\n            T.NewValue AS " +
                    "[BalancingIFDB_EstimatedLine.NewValue], \r\n            T.IdTaskCollection AS [Bal" +
                    "ancingIFDB_EstimatedLine.idTaskCollection], \r\n            T.IdHierarchyPeriod AS" +
                    " [BalancingIFDB_EstimatedLine.idHierarchyPeriod], \r\n            T.IsAdditionalNe" +
                    "ed AS [BalancingIFDB_EstimatedLine.isAdditionalNeed], \r\n            T.IdOKATO AS" +
                    " [BalancingIFDB_EstimatedLine.idOKATO], \r\n            T.IdAuthorityOfExpenseObli" +
                    "gation AS [BalancingIFDB_EstimatedLine.idAuthorityOfExpenseObligation], \r\n      " +
                    "      True AS _from0\r\n        FROM DataContext.BalancingIFDB_EstimatedLine AS T\r" +
                    "\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EstimatedLine
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView155()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EstimatedLine", "\r\n    SELECT VALUE -- Constructing EstimatedLine\r\n        [CodeFirstDatabaseSchem" +
                    "a.EstimatedLine](T1.EstimatedLine_id, T1.EstimatedLine_idPublicLegalFormation, T" +
                    "1.EstimatedLine_idBudget, T1.EstimatedLine_Caption, T1.EstimatedLine_idSBP, T1.E" +
                    "stimatedLine_idActivityBudgetaryType, T1.EstimatedLine_idExpenseObligationType, " +
                    "T1.EstimatedLine_idFinanceSource, T1.EstimatedLine_idKFO, T1.EstimatedLine_idKVS" +
                    "R, T1.EstimatedLine_idRZPR, T1.EstimatedLine_idKCSR, T1.EstimatedLine_idKOSGU, T" +
                    "1.EstimatedLine_idDFK, T1.EstimatedLine_idDKR, T1.EstimatedLine_idDEK, T1.Estima" +
                    "tedLine_idCodeSubsidy, T1.EstimatedLine_idKVR, T1.EstimatedLine_idBranchCode)\r\n " +
                    "   FROM (\r\n        SELECT \r\n            T.Id AS EstimatedLine_id, \r\n            " +
                    "T.IdPublicLegalFormation AS EstimatedLine_idPublicLegalFormation, \r\n            " +
                    "T.IdBudget AS EstimatedLine_idBudget, \r\n            T.Caption AS EstimatedLine_C" +
                    "aption, \r\n            T.IdSBP AS EstimatedLine_idSBP, \r\n            T.IdActivity" +
                    "BudgetaryType AS EstimatedLine_idActivityBudgetaryType, \r\n            T.IdExpens" +
                    "eObligationType AS EstimatedLine_idExpenseObligationType, \r\n            T.IdFina" +
                    "nceSource AS EstimatedLine_idFinanceSource, \r\n            T.IdKFO AS EstimatedLi" +
                    "ne_idKFO, \r\n            T.IdKVSR AS EstimatedLine_idKVSR, \r\n            T.IdRZPR" +
                    " AS EstimatedLine_idRZPR, \r\n            T.IdKCSR AS EstimatedLine_idKCSR, \r\n    " +
                    "        T.IdKOSGU AS EstimatedLine_idKOSGU, \r\n            T.IdDFK AS EstimatedLi" +
                    "ne_idDFK, \r\n            T.IdDKR AS EstimatedLine_idDKR, \r\n            T.IdDEK AS" +
                    " EstimatedLine_idDEK, \r\n            T.IdCodeSubsidy AS EstimatedLine_idCodeSubsi" +
                    "dy, \r\n            T.IdKVR AS EstimatedLine_idKVR, \r\n            T.IdBranchCode A" +
                    "S EstimatedLine_idBranchCode, \r\n            True AS _from0\r\n        FROM DataCon" +
                    "text.EstimatedLine AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TaskCollection
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView156()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TaskCollection", @"
    SELECT VALUE -- Constructing TaskCollection
        [CodeFirstDatabaseSchema.TaskCollection](T1.TaskCollection_id, T1.TaskCollection_idPublicLegalFormation, T1.TaskCollection_idActivity, T1.TaskCollection_idContingent)
    FROM (
        SELECT 
            T.Id AS TaskCollection_id, 
            T.IdPublicLegalFormation AS TaskCollection_idPublicLegalFormation, 
            T.IdActivity AS TaskCollection_idActivity, 
            T.IdContingent AS TaskCollection_idContingent, 
            True AS _from0
        FROM DataContext.TaskCollection AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_ChangeHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView157()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_ChangeHistory", @"
    SELECT VALUE -- Constructing BalancingIFDB_ChangeHistory
        [CodeFirstDatabaseSchema.BalancingIFDB_ChangeHistory](T1.[BalancingIFDB_ChangeHistory.id], T1.[BalancingIFDB_ChangeHistory.idOwner], T1.[BalancingIFDB_ChangeHistory.idMaster], T1.[BalancingIFDB_ChangeHistory.idBalancingIFDB_RuleIndex], T1.[BalancingIFDB_ChangeHistory.OldValue])
    FROM (
        SELECT 
            T.Id AS [BalancingIFDB_ChangeHistory.id], 
            T.IdOwner AS [BalancingIFDB_ChangeHistory.idOwner], 
            T.IdMaster AS [BalancingIFDB_ChangeHistory.idMaster], 
            T.IdBalancingIFDB_RuleIndex AS [BalancingIFDB_ChangeHistory.idBalancingIFDB_RuleIndex], 
            T.OldValue AS [BalancingIFDB_ChangeHistory.OldValue], 
            True AS _from0
        FROM DataContext.BalancingIFDB_ChangeHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleIndex
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView158()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleIndex", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleIndex
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleIndex](T1.[BalancingIFDB_RuleIndex.id], T1.[BalancingIFDB_RuleIndex.idOwner], T1.[BalancingIFDB_RuleIndex.Caption], T1.[BalancingIFDB_RuleIndex.IndexOFG], T1.[BalancingIFDB_RuleIndex.IndexPFG1], T1.[BalancingIFDB_RuleIndex.IndexPFG2], T1.[BalancingIFDB_RuleIndex.isApplied], T1.[BalancingIFDB_RuleIndex.ChangeCount], T1.[BalancingIFDB_RuleIndex.ChangeNumber], T1.[BalancingIFDB_RuleIndex.isIncludeAdditionalNeed])
    FROM (
        SELECT 
            T.Id AS [BalancingIFDB_RuleIndex.id], 
            T.IdOwner AS [BalancingIFDB_RuleIndex.idOwner], 
            T.Caption AS [BalancingIFDB_RuleIndex.Caption], 
            T.IndexOFG AS [BalancingIFDB_RuleIndex.IndexOFG], 
            T.IndexPFG1 AS [BalancingIFDB_RuleIndex.IndexPFG1], 
            T.IndexPFG2 AS [BalancingIFDB_RuleIndex.IndexPFG2], 
            T.IsApplied AS [BalancingIFDB_RuleIndex.isApplied], 
            T.ChangeCount AS [BalancingIFDB_RuleIndex.ChangeCount], 
            T.ChangeNumber AS [BalancingIFDB_RuleIndex.ChangeNumber], 
            T.IsIncludeAdditionalNeed AS [BalancingIFDB_RuleIndex.isIncludeAdditionalNeed], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleIndex AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView159()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3041);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK\r\n        [CodeFir");
            viewString.Append("stDatabaseSchema.BalancingIFDB_RuleFilterKBK](T1.[BalancingIFDB_RuleFilterKBK.id");
            viewString.Append("], T1.[BalancingIFDB_RuleFilterKBK.idOwner], T1.[BalancingIFDB_RuleFilterKBK.idM");
            viewString.Append("aster], T1.[BalancingIFDB_RuleFilterKBK.idFilterFieldType_BranchCode], T1.[Balan");
            viewString.Append("cingIFDB_RuleFilterKBK.idFilterFieldType_CodeSubsidy], T1.[BalancingIFDB_RuleFil");
            viewString.Append("terKBK.idFilterFieldType_DEK], T1.[BalancingIFDB_RuleFilterKBK.idFilterFieldType");
            viewString.Append("_DFK], T1.[BalancingIFDB_RuleFilterKBK.idFilterFieldType_DKR], T1.[BalancingIFDB");
            viewString.Append("_RuleFilterKBK.idFilterFieldType_ExpenseObligationType], T1.[BalancingIFDB_RuleF");
            viewString.Append("ilterKBK.idFilterFieldType_FinanceSource], T1.[BalancingIFDB_RuleFilterKBK.idFil");
            viewString.Append("terFieldType_KCSR], T1.[BalancingIFDB_RuleFilterKBK.idFilterFieldType_KFO], T1.[");
            viewString.Append("BalancingIFDB_RuleFilterKBK.idFilterFieldType_KOSGU], T1.[BalancingIFDB_RuleFilt");
            viewString.Append("erKBK.idFilterFieldType_KVR], T1.[BalancingIFDB_RuleFilterKBK.idFilterFieldType_");
            viewString.Append("KVSR], T1.[BalancingIFDB_RuleFilterKBK.idFilterFieldType_RZPR], T1.[BalancingIFD");
            viewString.Append("B_RuleFilterKBK.idFilterFieldType_OKATO], T1.[BalancingIFDB_RuleFilterKBK.idFilt");
            viewString.Append("erFieldType_AuthorityOfExpenseObligation])\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.Id AS [BalancingIFDB_RuleFilterKBK.id], \r\n            T.IdOwner AS [Balan");
            viewString.Append("cingIFDB_RuleFilterKBK.idOwner], \r\n            T.IdMaster AS [BalancingIFDB_Rule");
            viewString.Append("FilterKBK.idMaster], \r\n            T.IdFilterFieldType_BranchCode AS [BalancingI");
            viewString.Append("FDB_RuleFilterKBK.idFilterFieldType_BranchCode], \r\n            T.IdFilterFieldTy");
            viewString.Append("pe_CodeSubsidy AS [BalancingIFDB_RuleFilterKBK.idFilterFieldType_CodeSubsidy], \r");
            viewString.Append("\n            T.IdFilterFieldType_DEK AS [BalancingIFDB_RuleFilterKBK.idFilterFie");
            viewString.Append("ldType_DEK], \r\n            T.IdFilterFieldType_DFK AS [BalancingIFDB_RuleFilterK");
            viewString.Append("BK.idFilterFieldType_DFK], \r\n            T.IdFilterFieldType_DKR AS [BalancingIF");
            viewString.Append("DB_RuleFilterKBK.idFilterFieldType_DKR], \r\n            T.IdFilterFieldType_Expen");
            viewString.Append("seObligationType AS [BalancingIFDB_RuleFilterKBK.idFilterFieldType_ExpenseObliga");
            viewString.Append("tionType], \r\n            T.IdFilterFieldType_FinanceSource AS [BalancingIFDB_Rul");
            viewString.Append("eFilterKBK.idFilterFieldType_FinanceSource], \r\n            T.IdFilterFieldType_K");
            viewString.Append("CSR AS [BalancingIFDB_RuleFilterKBK.idFilterFieldType_KCSR], \r\n            T.IdF");
            viewString.Append("ilterFieldType_KFO AS [BalancingIFDB_RuleFilterKBK.idFilterFieldType_KFO], \r\n   ");
            viewString.Append("         T.IdFilterFieldType_KOSGU AS [BalancingIFDB_RuleFilterKBK.idFilterField");
            viewString.Append("Type_KOSGU], \r\n            T.IdFilterFieldType_KVR AS [BalancingIFDB_RuleFilterK");
            viewString.Append("BK.idFilterFieldType_KVR], \r\n            T.IdFilterFieldType_KVSR AS [BalancingI");
            viewString.Append("FDB_RuleFilterKBK.idFilterFieldType_KVSR], \r\n            T.IdFilterFieldType_RZP");
            viewString.Append("R AS [BalancingIFDB_RuleFilterKBK.idFilterFieldType_RZPR], \r\n            T.IdFil");
            viewString.Append("terFieldType_OKATO AS [BalancingIFDB_RuleFilterKBK.idFilterFieldType_OKATO], \r\n ");
            viewString.Append("           T.IdFilterFieldType_AuthorityOfExpenseObligation AS [BalancingIFDB_Ru");
            viewString.Append("leFilterKBK.idFilterFieldType_AuthorityOfExpenseObligation], \r\n            True ");
            viewString.Append("AS _from0\r\n        FROM DataContext.BalancingIFDB_RuleFilterKBK AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBK", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_SetShowKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView160()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_SetShowKBK", @"
    SELECT VALUE -- Constructing BalancingIFDB_SetShowKBK
        [CodeFirstDatabaseSchema.BalancingIFDB_SetShowKBK](T1.[BalancingIFDB_SetShowKBK.id], T1.[BalancingIFDB_SetShowKBK.idOwner], T1.[BalancingIFDB_SetShowKBK.idEntityField])
    FROM (
        SELECT 
            T.Id AS [BalancingIFDB_SetShowKBK.id], 
            T.IdOwner AS [BalancingIFDB_SetShowKBK.idOwner], 
            T.IdEntityField AS [BalancingIFDB_SetShowKBK.idEntityField], 
            True AS _from0
        FROM DataContext.BalancingIFDB_SetShowKBK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterRule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView161()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterRule", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterRule
        [CodeFirstDatabaseSchema.BalanceConfig_FilterRule](T1.[BalanceConfig_FilterRule.id], T1.[BalanceConfig_FilterRule.idOwner], T1.[BalanceConfig_FilterRule.Caption])
    FROM (
        SELECT 
            T.Id AS [BalanceConfig_FilterRule.id], 
            T.IdOwner AS [BalanceConfig_FilterRule.idOwner], 
            T.Caption AS [BalanceConfig_FilterRule.Caption], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterRule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView162()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig", @"
    SELECT VALUE -- Constructing BalanceConfig
        [CodeFirstDatabaseSchema.BalanceConfig](T1.BalanceConfig_id, T1.BalanceConfig_Caption, T1.BalanceConfig_Date, T1.BalanceConfig_idSourcesDataTools, T1.BalanceConfig_idParent, T1.BalanceConfig_idDocStatus, T1.BalanceConfig_DateLastEdit, T1.BalanceConfig_idBalancingIFDBType)
    FROM (
        SELECT 
            T.Id AS BalanceConfig_id, 
            T.Caption AS BalanceConfig_Caption, 
            T.Date AS BalanceConfig_Date, 
            T.IdSourcesDataTools AS BalanceConfig_idSourcesDataTools, 
            T.IdParent AS BalanceConfig_idParent, 
            T.IdDocStatus AS BalanceConfig_idDocStatus, 
            T.DateLastEdit AS BalanceConfig_DateLastEdit, 
            T.IdBalancingIFDBType AS BalanceConfig_idBalancingIFDBType, 
            True AS _from0
        FROM DataContext.BalanceConfig AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView163()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_User", @"
    SELECT VALUE -- Constructing BalanceConfig_User
        [CodeFirstDatabaseSchema.BalanceConfig_User](T1.[BalanceConfig_User.id], T1.[BalanceConfig_User.idOwner], T1.[BalanceConfig_User.idUser], T1.[BalanceConfig_User.idMaster])
    FROM (
        SELECT 
            T.Id AS [BalanceConfig_User.id], 
            T.IdOwner AS [BalanceConfig_User.idOwner], 
            T.IdUser AS [BalanceConfig_User.idUser], 
            T.IdMaster AS [BalanceConfig_User.idMaster], 
            True AS _from0
        FROM DataContext.BalanceConfig_User AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView164()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2885);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK\r\n        [CodeFirstDa");
            viewString.Append("tabaseSchema.BalanceConfig_FilterKBK](T1.[BalanceConfig_FilterKBK.id], T1.[Balan");
            viewString.Append("ceConfig_FilterKBK.idOwner], T1.[BalanceConfig_FilterKBK.idMaster], T1.[BalanceC");
            viewString.Append("onfig_FilterKBK.idFilterFieldType_BranchCode], T1.[BalanceConfig_FilterKBK.idFil");
            viewString.Append("terFieldType_CodeSubsidy], T1.[BalanceConfig_FilterKBK.idFilterFieldType_DEK], T");
            viewString.Append("1.[BalanceConfig_FilterKBK.idFilterFieldType_DFK], T1.[BalanceConfig_FilterKBK.i");
            viewString.Append("dFilterFieldType_DKR], T1.[BalanceConfig_FilterKBK.idFilterFieldType_ExpenseObli");
            viewString.Append("gationType], T1.[BalanceConfig_FilterKBK.idFilterFieldType_FinanceSource], T1.[B");
            viewString.Append("alanceConfig_FilterKBK.idFilterFieldType_KCSR], T1.[BalanceConfig_FilterKBK.idFi");
            viewString.Append("lterFieldType_KFO], T1.[BalanceConfig_FilterKBK.idFilterFieldType_KOSGU], T1.[Ba");
            viewString.Append("lanceConfig_FilterKBK.idFilterFieldType_KVR], T1.[BalanceConfig_FilterKBK.idFilt");
            viewString.Append("erFieldType_KVSR], T1.[BalanceConfig_FilterKBK.idFilterFieldType_RZPR], T1.[Bala");
            viewString.Append("nceConfig_FilterKBK.idFilterFieldType_OKATO], T1.[BalanceConfig_FilterKBK.idFilt");
            viewString.Append("erFieldType_AuthorityOfExpenseObligation])\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.Id AS [BalanceConfig_FilterKBK.id], \r\n            T.IdOwner AS [BalanceCo");
            viewString.Append("nfig_FilterKBK.idOwner], \r\n            T.IdMaster AS [BalanceConfig_FilterKBK.id");
            viewString.Append("Master], \r\n            T.IdFilterFieldType_BranchCode AS [BalanceConfig_FilterKB");
            viewString.Append("K.idFilterFieldType_BranchCode], \r\n            T.IdFilterFieldType_CodeSubsidy A");
            viewString.Append("S [BalanceConfig_FilterKBK.idFilterFieldType_CodeSubsidy], \r\n            T.IdFil");
            viewString.Append("terFieldType_DEK AS [BalanceConfig_FilterKBK.idFilterFieldType_DEK], \r\n         ");
            viewString.Append("   T.IdFilterFieldType_DFK AS [BalanceConfig_FilterKBK.idFilterFieldType_DFK], \r");
            viewString.Append("\n            T.IdFilterFieldType_DKR AS [BalanceConfig_FilterKBK.idFilterFieldTy");
            viewString.Append("pe_DKR], \r\n            T.IdFilterFieldType_ExpenseObligationType AS [BalanceConf");
            viewString.Append("ig_FilterKBK.idFilterFieldType_ExpenseObligationType], \r\n            T.IdFilterF");
            viewString.Append("ieldType_FinanceSource AS [BalanceConfig_FilterKBK.idFilterFieldType_FinanceSour");
            viewString.Append("ce], \r\n            T.IdFilterFieldType_KCSR AS [BalanceConfig_FilterKBK.idFilter");
            viewString.Append("FieldType_KCSR], \r\n            T.IdFilterFieldType_KFO AS [BalanceConfig_FilterK");
            viewString.Append("BK.idFilterFieldType_KFO], \r\n            T.IdFilterFieldType_KOSGU AS [BalanceCo");
            viewString.Append("nfig_FilterKBK.idFilterFieldType_KOSGU], \r\n            T.IdFilterFieldType_KVR A");
            viewString.Append("S [BalanceConfig_FilterKBK.idFilterFieldType_KVR], \r\n            T.IdFilterField");
            viewString.Append("Type_KVSR AS [BalanceConfig_FilterKBK.idFilterFieldType_KVSR], \r\n            T.I");
            viewString.Append("dFilterFieldType_RZPR AS [BalanceConfig_FilterKBK.idFilterFieldType_RZPR], \r\n   ");
            viewString.Append("         T.IdFilterFieldType_OKATO AS [BalanceConfig_FilterKBK.idFilterFieldType");
            viewString.Append("_OKATO], \r\n            T.IdFilterFieldType_AuthorityOfExpenseObligation AS [Bala");
            viewString.Append("nceConfig_FilterKBK.idFilterFieldType_AuthorityOfExpenseObligation], \r\n         ");
            viewString.Append("   True AS _from0\r\n        FROM DataContext.BalanceConfig_FilterKBK AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBK", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ApprovalBalancingIFDB
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView165()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ApprovalBalancingIFDB", @"
    SELECT VALUE -- Constructing ApprovalBalancingIFDB
        [CodeFirstDatabaseSchema.ApprovalBalancingIFDB](T1.ApprovalBalancingIFDB_id, T1.ApprovalBalancingIFDB_idPublicLegalFormation, T1.ApprovalBalancingIFDB_idVersion, T1.ApprovalBalancingIFDB_Date, T1.ApprovalBalancingIFDB_DateCommit, T1.ApprovalBalancingIFDB_Description, T1.ApprovalBalancingIFDB_DateLastEdit, T1.ApprovalBalancingIFDB_idBudget, T1.ApprovalBalancingIFDB_idDocStatus, T1.ApprovalBalancingIFDB_idSourcesDataTools, T1.ApprovalBalancingIFDB_Number)
    FROM (
        SELECT 
            T.Id AS ApprovalBalancingIFDB_id, 
            T.IdPublicLegalFormation AS ApprovalBalancingIFDB_idPublicLegalFormation, 
            T.IdVersion AS ApprovalBalancingIFDB_idVersion, 
            T.Date AS ApprovalBalancingIFDB_Date, 
            T.DateCommit AS ApprovalBalancingIFDB_DateCommit, 
            T.Description AS ApprovalBalancingIFDB_Description, 
            T.DateLastEdit AS ApprovalBalancingIFDB_DateLastEdit, 
            T.IdBudget AS ApprovalBalancingIFDB_idBudget, 
            T.IdDocStatus AS ApprovalBalancingIFDB_idDocStatus, 
            T.IdSourcesDataTools AS ApprovalBalancingIFDB_idSourcesDataTools, 
            T.Number AS ApprovalBalancingIFDB_Number, 
            True AS _from0
        FROM DataContext.ApprovalBalancingIFDB AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ApprovalBalancingIFDB_Blank
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView166()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2630);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ApprovalBalancingIFDB_Blank\r\n        [CodeFir");
            viewString.Append("stDatabaseSchema.ApprovalBalancingIFDB_Blank](T1.[ApprovalBalancingIFDB_Blank.id");
            viewString.Append("], T1.[ApprovalBalancingIFDB_Blank.idOwner], T1.[ApprovalBalancingIFDB_Blank.idB");
            viewString.Append("lankType], T1.[ApprovalBalancingIFDB_Blank.idBlankValueType_ExpenseObligationTyp");
            viewString.Append("e], T1.[ApprovalBalancingIFDB_Blank.idBlankValueType_FinanceSource], T1.[Approva");
            viewString.Append("lBalancingIFDB_Blank.idBlankValueType_KFO], T1.[ApprovalBalancingIFDB_Blank.idBl");
            viewString.Append("ankValueType_KVSR], T1.[ApprovalBalancingIFDB_Blank.idBlankValueType_RZPR], T1.[");
            viewString.Append("ApprovalBalancingIFDB_Blank.idBlankValueType_KCSR], T1.[ApprovalBalancingIFDB_Bl");
            viewString.Append("ank.idBlankValueType_KVR], T1.[ApprovalBalancingIFDB_Blank.idBlankValueType_KOSG");
            viewString.Append("U], T1.[ApprovalBalancingIFDB_Blank.idBlankValueType_DFK], T1.[ApprovalBalancing");
            viewString.Append("IFDB_Blank.idBlankValueType_DKR], T1.[ApprovalBalancingIFDB_Blank.idBlankValueTy");
            viewString.Append("pe_DEK], T1.[ApprovalBalancingIFDB_Blank.idBlankValueType_CodeSubsidy], T1.[Appr");
            viewString.Append("ovalBalancingIFDB_Blank.idBlankValueType_BranchCode])\r\n    FROM (\r\n        SELEC");
            viewString.Append("T \r\n            T.Id AS [ApprovalBalancingIFDB_Blank.id], \r\n            T.IdOwne");
            viewString.Append("r AS [ApprovalBalancingIFDB_Blank.idOwner], \r\n            T.IdBlankType AS [Appr");
            viewString.Append("ovalBalancingIFDB_Blank.idBlankType], \r\n            T.IdBlankValueType_ExpenseOb");
            viewString.Append("ligationType AS [ApprovalBalancingIFDB_Blank.idBlankValueType_ExpenseObligationT");
            viewString.Append("ype], \r\n            T.IdBlankValueType_FinanceSource AS [ApprovalBalancingIFDB_B");
            viewString.Append("lank.idBlankValueType_FinanceSource], \r\n            T.IdBlankValueType_KFO AS [A");
            viewString.Append("pprovalBalancingIFDB_Blank.idBlankValueType_KFO], \r\n            T.IdBlankValueTy");
            viewString.Append("pe_KVSR AS [ApprovalBalancingIFDB_Blank.idBlankValueType_KVSR], \r\n            T.");
            viewString.Append("IdBlankValueType_RZPR AS [ApprovalBalancingIFDB_Blank.idBlankValueType_RZPR], \r\n");
            viewString.Append("            T.IdBlankValueType_KCSR AS [ApprovalBalancingIFDB_Blank.idBlankValue");
            viewString.Append("Type_KCSR], \r\n            T.IdBlankValueType_KVR AS [ApprovalBalancingIFDB_Blank");
            viewString.Append(".idBlankValueType_KVR], \r\n            T.IdBlankValueType_KOSGU AS [ApprovalBalan");
            viewString.Append("cingIFDB_Blank.idBlankValueType_KOSGU], \r\n            T.IdBlankValueType_DFK AS ");
            viewString.Append("[ApprovalBalancingIFDB_Blank.idBlankValueType_DFK], \r\n            T.IdBlankValue");
            viewString.Append("Type_DKR AS [ApprovalBalancingIFDB_Blank.idBlankValueType_DKR], \r\n            T.");
            viewString.Append("IdBlankValueType_DEK AS [ApprovalBalancingIFDB_Blank.idBlankValueType_DEK], \r\n  ");
            viewString.Append("          T.IdBlankValueType_CodeSubsidy AS [ApprovalBalancingIFDB_Blank.idBlank");
            viewString.Append("ValueType_CodeSubsidy], \r\n            T.IdBlankValueType_BranchCode AS [Approval");
            viewString.Append("BalancingIFDB_Blank.idBlankValueType_BranchCode], \r\n            True AS _from0\r\n");
            viewString.Append("        FROM DataContext.ApprovalBalancingIFDB_Blank AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ApprovalBalancingIFDB_Blank", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LimitBudgetAllocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView167()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2390);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations\r\n        [CodeFirstDat");
            viewString.Append("abaseSchema.LimitBudgetAllocations](T1.LimitBudgetAllocations_id, T1.LimitBudget");
            viewString.Append("Allocations_isAdditionalNeed, T1.LimitBudgetAllocations_IdCompareWithDocument, T");
            viewString.Append("1.[LimitBudgetAllocations.idSBP_BlankActual], T1.LimitBudgetAllocations_idPublic");
            viewString.Append("LegalFormation, T1.LimitBudgetAllocations_idBudget, T1.LimitBudgetAllocations_id");
            viewString.Append("Version, T1.LimitBudgetAllocations_Number, T1.LimitBudgetAllocations_Date, T1.Li");
            viewString.Append("mitBudgetAllocations_DateCommit, T1.LimitBudgetAllocations_isApproved, T1.LimitB");
            viewString.Append("udgetAllocations_idSBP, T1.LimitBudgetAllocations_idSBPType, T1.LimitBudgetAlloc");
            viewString.Append("ations_DateLastEdit, T1.LimitBudgetAllocations_Description, T1.LimitBudgetAlloca");
            viewString.Append("tions_idParent, T1.LimitBudgetAllocations_isRequireClarification, T1.LimitBudget");
            viewString.Append("Allocations_ReasonClarification, T1.LimitBudgetAllocations_idDocStatus, T1.Limit");
            viewString.Append("BudgetAllocations_Caption)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS Lim");
            viewString.Append("itBudgetAllocations_id, \r\n            T.IsAdditionalNeed AS LimitBudgetAllocatio");
            viewString.Append("ns_isAdditionalNeed, \r\n            T.IdCompareWithDocument AS LimitBudgetAllocat");
            viewString.Append("ions_IdCompareWithDocument, \r\n            T.IdSBP_BlankActual AS [LimitBudgetAll");
            viewString.Append("ocations.idSBP_BlankActual], \r\n            T.IdPublicLegalFormation AS LimitBudg");
            viewString.Append("etAllocations_idPublicLegalFormation, \r\n            T.IdBudget AS LimitBudgetAll");
            viewString.Append("ocations_idBudget, \r\n            T.IdVersion AS LimitBudgetAllocations_idVersion");
            viewString.Append(", \r\n            T.Number AS LimitBudgetAllocations_Number, \r\n            T.Date ");
            viewString.Append("AS LimitBudgetAllocations_Date, \r\n            T.DateCommit AS LimitBudgetAllocat");
            viewString.Append("ions_DateCommit, \r\n            T.IsApproved AS LimitBudgetAllocations_isApproved");
            viewString.Append(", \r\n            T.IdSBP AS LimitBudgetAllocations_idSBP, \r\n            T.IdSBPTy");
            viewString.Append("pe AS LimitBudgetAllocations_idSBPType, \r\n            T.DateLastEdit AS LimitBud");
            viewString.Append("getAllocations_DateLastEdit, \r\n            T.Description AS LimitBudgetAllocatio");
            viewString.Append("ns_Description, \r\n            T.IdParent AS LimitBudgetAllocations_idParent, \r\n ");
            viewString.Append("           T.IsRequireClarification AS LimitBudgetAllocations_isRequireClarifica");
            viewString.Append("tion, \r\n            T.ReasonClarification AS LimitBudgetAllocations_ReasonClarif");
            viewString.Append("ication, \r\n            T.IdDocStatus AS LimitBudgetAllocations_idDocStatus, \r\n  ");
            viewString.Append("          T.Caption AS LimitBudgetAllocations_Caption, \r\n            True AS _fr");
            viewString.Append("om0\r\n        FROM DataContext.LimitBudgetAllocations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LimitBudgetAllocations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LimitBudgetAllocations_LimitAllocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView168()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3317);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations_LimitAllocations\r\n    ");
            viewString.Append("    [CodeFirstDatabaseSchema.LimitBudgetAllocations_LimitAllocations](T1.[LimitB");
            viewString.Append("udgetAllocations_LimitAllocations.id], T1.[LimitBudgetAllocations_LimitAllocatio");
            viewString.Append("ns.AdditionalNeedOFG], T1.[LimitBudgetAllocations_LimitAllocations.AdditionalNee");
            viewString.Append("dPFG1], T1.[LimitBudgetAllocations_LimitAllocations.AdditionalNeedPFG2], T1.[Lim");
            viewString.Append("itBudgetAllocations_LimitAllocations.idOwner], T1.[LimitBudgetAllocations_LimitA");
            viewString.Append("llocations.idExpenseObligationType], T1.[LimitBudgetAllocations_LimitAllocations");
            viewString.Append(".idFinanceSource], T1.[LimitBudgetAllocations_LimitAllocations.idKFO], T1.[Limit");
            viewString.Append("BudgetAllocations_LimitAllocations.idKVSR], T1.[LimitBudgetAllocations_LimitAllo");
            viewString.Append("cations.idRZPR], T1.[LimitBudgetAllocations_LimitAllocations.idKCSR], T1.[LimitB");
            viewString.Append("udgetAllocations_LimitAllocations.idKVR], T1.[LimitBudgetAllocations_LimitAlloca");
            viewString.Append("tions.idKOSGU], T1.[LimitBudgetAllocations_LimitAllocations.idDFK], T1.[LimitBud");
            viewString.Append("getAllocations_LimitAllocations.idDKR], T1.[LimitBudgetAllocations_LimitAllocati");
            viewString.Append("ons.idDEK], T1.[LimitBudgetAllocations_LimitAllocations.idCodeSubsidy], T1.[Limi");
            viewString.Append("tBudgetAllocations_LimitAllocations.PFG1], T1.[LimitBudgetAllocations_LimitAlloc");
            viewString.Append("ations.OFG], T1.[LimitBudgetAllocations_LimitAllocations.PFG2], T1.[LimitBudgetA");
            viewString.Append("llocations_LimitAllocations.OwnerDate], T1.[LimitBudgetAllocations_LimitAllocati");
            viewString.Append("ons.idBranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [LimitBudge");
            viewString.Append("tAllocations_LimitAllocations.id], \r\n            T.AdditionalNeedOFG AS [LimitBu");
            viewString.Append("dgetAllocations_LimitAllocations.AdditionalNeedOFG], \r\n            T.AdditionalN");
            viewString.Append("eedPFG1 AS [LimitBudgetAllocations_LimitAllocations.AdditionalNeedPFG1], \r\n     ");
            viewString.Append("       T.AdditionalNeedPFG2 AS [LimitBudgetAllocations_LimitAllocations.Addition");
            viewString.Append("alNeedPFG2], \r\n            T.IdOwner AS [LimitBudgetAllocations_LimitAllocations");
            viewString.Append(".idOwner], \r\n            T.IdExpenseObligationType AS [LimitBudgetAllocations_Li");
            viewString.Append("mitAllocations.idExpenseObligationType], \r\n            T.IdFinanceSource AS [Lim");
            viewString.Append("itBudgetAllocations_LimitAllocations.idFinanceSource], \r\n            T.IdKFO AS ");
            viewString.Append("[LimitBudgetAllocations_LimitAllocations.idKFO], \r\n            T.IdKVSR AS [Limi");
            viewString.Append("tBudgetAllocations_LimitAllocations.idKVSR], \r\n            T.IdRZPR AS [LimitBud");
            viewString.Append("getAllocations_LimitAllocations.idRZPR], \r\n            T.IdKCSR AS [LimitBudgetA");
            viewString.Append("llocations_LimitAllocations.idKCSR], \r\n            T.IdKVR AS [LimitBudgetAlloca");
            viewString.Append("tions_LimitAllocations.idKVR], \r\n            T.IdKOSGU AS [LimitBudgetAllocation");
            viewString.Append("s_LimitAllocations.idKOSGU], \r\n            T.IdDFK AS [LimitBudgetAllocations_Li");
            viewString.Append("mitAllocations.idDFK], \r\n            T.IdDKR AS [LimitBudgetAllocations_LimitAll");
            viewString.Append("ocations.idDKR], \r\n            T.IdDEK AS [LimitBudgetAllocations_LimitAllocatio");
            viewString.Append("ns.idDEK], \r\n            T.IdCodeSubsidy AS [LimitBudgetAllocations_LimitAllocat");
            viewString.Append("ions.idCodeSubsidy], \r\n            T.PFG1 AS [LimitBudgetAllocations_LimitAlloca");
            viewString.Append("tions.PFG1], \r\n            T.OFG AS [LimitBudgetAllocations_LimitAllocations.OFG");
            viewString.Append("], \r\n            T.PFG2 AS [LimitBudgetAllocations_LimitAllocations.PFG2], \r\n   ");
            viewString.Append("         T.OwnerDate AS [LimitBudgetAllocations_LimitAllocations.OwnerDate], \r\n ");
            viewString.Append("           T.IdBranchCode AS [LimitBudgetAllocations_LimitAllocations.idBranchCo");
            viewString.Append("de], \r\n            True AS _from0\r\n        FROM DataContext.LimitBudgetAllocatio");
            viewString.Append("ns_LimitAllocations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LimitBudgetAllocations_LimitAllocations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LimitBudgetAllocations_ControlRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView169()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3429);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations_ControlRelation\r\n     ");
            viewString.Append("   [CodeFirstDatabaseSchema.LimitBudgetAllocations_ControlRelation](T1.[LimitBud");
            viewString.Append("getAllocations_ControlRelation.id], T1.[LimitBudgetAllocations_ControlRelation.i");
            viewString.Append("dBranchCode], T1.[LimitBudgetAllocations_ControlRelation.idOwner], T1.[LimitBudg");
            viewString.Append("etAllocations_ControlRelation.idExpenseObligationType], T1.[LimitBudgetAllocatio");
            viewString.Append("ns_ControlRelation.idFinanceSource], T1.[LimitBudgetAllocations_ControlRelation.");
            viewString.Append("idKVSR], T1.[LimitBudgetAllocations_ControlRelation.idKFO], T1.[LimitBudgetAlloc");
            viewString.Append("ations_ControlRelation.idRZPR], T1.[LimitBudgetAllocations_ControlRelation.idKCS");
            viewString.Append("R], T1.[LimitBudgetAllocations_ControlRelation.idKVR], T1.[LimitBudgetAllocation");
            viewString.Append("s_ControlRelation.idKOSGU], T1.[LimitBudgetAllocations_ControlRelation.idDFK], T");
            viewString.Append("1.[LimitBudgetAllocations_ControlRelation.idDKR], T1.[LimitBudgetAllocations_Con");
            viewString.Append("trolRelation.idDEK], T1.[LimitBudgetAllocations_ControlRelation.idCodeSubsidy], ");
            viewString.Append("T1.[LimitBudgetAllocations_ControlRelation.Year], T1.[LimitBudgetAllocations_Con");
            viewString.Append("trolRelation.DiffAllocations], T1.[LimitBudgetAllocations_ControlRelation.Unallo");
            viewString.Append("catedAllocations], T1.[LimitBudgetAllocations_ControlRelation.TotalDocumentAlloc");
            viewString.Append("ations], T1.[LimitBudgetAllocations_ControlRelation.AllocatedAllocations], T1.[L");
            viewString.Append("imitBudgetAllocations_ControlRelation.WithCompanyAllocations], T1.[LimitBudgetAl");
            viewString.Append("locations_ControlRelation.PlanGRBSAllocations])\r\n    FROM (\r\n        SELECT \r\n  ");
            viewString.Append("          T.Id AS [LimitBudgetAllocations_ControlRelation.id], \r\n            T.I");
            viewString.Append("dBranchCode AS [LimitBudgetAllocations_ControlRelation.idBranchCode], \r\n        ");
            viewString.Append("    T.IdOwner AS [LimitBudgetAllocations_ControlRelation.idOwner], \r\n           ");
            viewString.Append(" T.IdExpenseObligationType AS [LimitBudgetAllocations_ControlRelation.idExpenseO");
            viewString.Append("bligationType], \r\n            T.IdFinanceSource AS [LimitBudgetAllocations_Contr");
            viewString.Append("olRelation.idFinanceSource], \r\n            T.IdKVSR AS [LimitBudgetAllocations_C");
            viewString.Append("ontrolRelation.idKVSR], \r\n            T.IdKFO AS [LimitBudgetAllocations_Control");
            viewString.Append("Relation.idKFO], \r\n            T.IdRZPR AS [LimitBudgetAllocations_ControlRelati");
            viewString.Append("on.idRZPR], \r\n            T.IdKCSR AS [LimitBudgetAllocations_ControlRelation.id");
            viewString.Append("KCSR], \r\n            T.IdKVR AS [LimitBudgetAllocations_ControlRelation.idKVR], ");
            viewString.Append("\r\n            T.IdKOSGU AS [LimitBudgetAllocations_ControlRelation.idKOSGU], \r\n ");
            viewString.Append("           T.IdDFK AS [LimitBudgetAllocations_ControlRelation.idDFK], \r\n        ");
            viewString.Append("    T.IdDKR AS [LimitBudgetAllocations_ControlRelation.idDKR], \r\n            T.I");
            viewString.Append("dDEK AS [LimitBudgetAllocations_ControlRelation.idDEK], \r\n            T.IdCodeSu");
            viewString.Append("bsidy AS [LimitBudgetAllocations_ControlRelation.idCodeSubsidy], \r\n            T");
            viewString.Append(".Year AS [LimitBudgetAllocations_ControlRelation.Year], \r\n            T.DiffAllo");
            viewString.Append("cations AS [LimitBudgetAllocations_ControlRelation.DiffAllocations], \r\n         ");
            viewString.Append("   T.UnallocatedAllocations AS [LimitBudgetAllocations_ControlRelation.Unallocat");
            viewString.Append("edAllocations], \r\n            T.TotalDocumentAllocations AS [LimitBudgetAllocati");
            viewString.Append("ons_ControlRelation.TotalDocumentAllocations], \r\n            T.AllocatedAllocati");
            viewString.Append("ons AS [LimitBudgetAllocations_ControlRelation.AllocatedAllocations], \r\n        ");
            viewString.Append("    T.WithCompanyAllocations AS [LimitBudgetAllocations_ControlRelation.WithComp");
            viewString.Append("anyAllocations], \r\n            T.PlanGRBSAllocations AS [LimitBudgetAllocations_");
            viewString.Append("ControlRelation.PlanGRBSAllocations], \r\n            True AS _from0\r\n        FROM");
            viewString.Append(" DataContext.LimitBudgetAllocations_ControlRelation AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LimitBudgetAllocations_ControlRelation", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LimitBudgetAllocations_ShowChanges
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView170()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2424);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations_ShowChanges\r\n        [");
            viewString.Append("CodeFirstDatabaseSchema.LimitBudgetAllocations_ShowChanges](T1.[LimitBudgetAlloc");
            viewString.Append("ations_ShowChanges.id], T1.[LimitBudgetAllocations_ShowChanges.idBranchCode], T1");
            viewString.Append(".[LimitBudgetAllocations_ShowChanges.idOwner], T1.[LimitBudgetAllocations_ShowCh");
            viewString.Append("anges.idExpenseObligationType], T1.[LimitBudgetAllocations_ShowChanges.idFinance");
            viewString.Append("Source], T1.[LimitBudgetAllocations_ShowChanges.idKFO], T1.[LimitBudgetAllocatio");
            viewString.Append("ns_ShowChanges.idKVSR], T1.[LimitBudgetAllocations_ShowChanges.idRZPR], T1.[Limi");
            viewString.Append("tBudgetAllocations_ShowChanges.idKCSR], T1.[LimitBudgetAllocations_ShowChanges.i");
            viewString.Append("dKVR], T1.[LimitBudgetAllocations_ShowChanges.idKOSGU], T1.[LimitBudgetAllocatio");
            viewString.Append("ns_ShowChanges.idDFK], T1.[LimitBudgetAllocations_ShowChanges.idDKR], T1.[LimitB");
            viewString.Append("udgetAllocations_ShowChanges.idDEK], T1.[LimitBudgetAllocations_ShowChanges.idCo");
            viewString.Append("deSubsidy], T1.[LimitBudgetAllocations_ShowChanges.Year], T1.[LimitBudgetAllocat");
            viewString.Append("ions_ShowChanges.ChangedAllocations])\r\n    FROM (\r\n        SELECT \r\n            ");
            viewString.Append("T.Id AS [LimitBudgetAllocations_ShowChanges.id], \r\n            T.IdBranchCode AS");
            viewString.Append(" [LimitBudgetAllocations_ShowChanges.idBranchCode], \r\n            T.IdOwner AS [");
            viewString.Append("LimitBudgetAllocations_ShowChanges.idOwner], \r\n            T.IdExpenseObligation");
            viewString.Append("Type AS [LimitBudgetAllocations_ShowChanges.idExpenseObligationType], \r\n        ");
            viewString.Append("    T.IdFinanceSource AS [LimitBudgetAllocations_ShowChanges.idFinanceSource], \r");
            viewString.Append("\n            T.IdKFO AS [LimitBudgetAllocations_ShowChanges.idKFO], \r\n          ");
            viewString.Append("  T.IdKVSR AS [LimitBudgetAllocations_ShowChanges.idKVSR], \r\n            T.IdRZP");
            viewString.Append("R AS [LimitBudgetAllocations_ShowChanges.idRZPR], \r\n            T.IdKCSR AS [Lim");
            viewString.Append("itBudgetAllocations_ShowChanges.idKCSR], \r\n            T.IdKVR AS [LimitBudgetAl");
            viewString.Append("locations_ShowChanges.idKVR], \r\n            T.IdKOSGU AS [LimitBudgetAllocations");
            viewString.Append("_ShowChanges.idKOSGU], \r\n            T.IdDFK AS [LimitBudgetAllocations_ShowChan");
            viewString.Append("ges.idDFK], \r\n            T.IdDKR AS [LimitBudgetAllocations_ShowChanges.idDKR],");
            viewString.Append(" \r\n            T.IdDEK AS [LimitBudgetAllocations_ShowChanges.idDEK], \r\n        ");
            viewString.Append("    T.IdCodeSubsidy AS [LimitBudgetAllocations_ShowChanges.idCodeSubsidy], \r\n   ");
            viewString.Append("         T.Year AS [LimitBudgetAllocations_ShowChanges.Year], \r\n            T.Ch");
            viewString.Append("angedAllocations AS [LimitBudgetAllocations_ShowChanges.ChangedAllocations], \r\n ");
            viewString.Append("           True AS _from0\r\n        FROM DataContext.LimitBudgetAllocations_ShowC");
            viewString.Append("hanges AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LimitBudgetAllocations_ShowChanges", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FinancialAndBusinessActivities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView171()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3133);
            viewString.Append("\r\n    SELECT VALUE -- Constructing FinancialAndBusinessActivities\r\n        [Code");
            viewString.Append("FirstDatabaseSchema.FinancialAndBusinessActivities](T1.FinancialAndBusinessActiv");
            viewString.Append("ities_id, T1.FinancialAndBusinessActivities_idPublicLegalFormation, T1.Financial");
            viewString.Append("AndBusinessActivities_idBudget, T1.FinancialAndBusinessActivities_idVersion, T1.");
            viewString.Append("FinancialAndBusinessActivities_Number, T1.FinancialAndBusinessActivities_Date, T");
            viewString.Append("1.FinancialAndBusinessActivities_DateCommit, T1.FinancialAndBusinessActivities_i");
            viewString.Append("sApproved, T1.FinancialAndBusinessActivities_DateLastEdit, T1.FinancialAndBusine");
            viewString.Append("ssActivities_idSBP, T1.FinancialAndBusinessActivities_isRequireClarification, T1");
            viewString.Append(".FinancialAndBusinessActivities_ReasonClarification, T1.FinancialAndBusinessActi");
            viewString.Append("vities_ReasonCancel, T1.FinancialAndBusinessActivities_Description, T1.Financial");
            viewString.Append("AndBusinessActivities_idParent, T1.FinancialAndBusinessActivities_DateTerminate,");
            viewString.Append(" T1.FinancialAndBusinessActivities_ReasonTerminate, T1.FinancialAndBusinessActiv");
            viewString.Append("ities_isExtraNeed, T1.FinancialAndBusinessActivities_VolumePublicObligations, T1");
            viewString.Append(".FinancialAndBusinessActivities_OtherInformation, T1.FinancialAndBusinessActivit");
            viewString.Append("ies_idDocStatus, T1.FinancialAndBusinessActivities_Caption, T1.[FinancialAndBusi");
            viewString.Append("nessActivities.idSBP_BlankActual])\r\n    FROM (\r\n        SELECT \r\n            T.I");
            viewString.Append("d AS FinancialAndBusinessActivities_id, \r\n            T.IdPublicLegalFormation A");
            viewString.Append("S FinancialAndBusinessActivities_idPublicLegalFormation, \r\n            T.IdBudge");
            viewString.Append("t AS FinancialAndBusinessActivities_idBudget, \r\n            T.IdVersion AS Finan");
            viewString.Append("cialAndBusinessActivities_idVersion, \r\n            T.Number AS FinancialAndBusin");
            viewString.Append("essActivities_Number, \r\n            T.Date AS FinancialAndBusinessActivities_Dat");
            viewString.Append("e, \r\n            T.DateCommit AS FinancialAndBusinessActivities_DateCommit, \r\n  ");
            viewString.Append("          T.IsApproved AS FinancialAndBusinessActivities_isApproved, \r\n         ");
            viewString.Append("   T.DateLastEdit AS FinancialAndBusinessActivities_DateLastEdit, \r\n            ");
            viewString.Append("T.IdSBP AS FinancialAndBusinessActivities_idSBP, \r\n            T.IsRequireClarif");
            viewString.Append("ication AS FinancialAndBusinessActivities_isRequireClarification, \r\n            ");
            viewString.Append("T.ReasonClarification AS FinancialAndBusinessActivities_ReasonClarification, \r\n ");
            viewString.Append("           T.ReasonCancel AS FinancialAndBusinessActivities_ReasonCancel, \r\n    ");
            viewString.Append("        T.Description AS FinancialAndBusinessActivities_Description, \r\n         ");
            viewString.Append("   T.IdParent AS FinancialAndBusinessActivities_idParent, \r\n            T.DateTe");
            viewString.Append("rminate AS FinancialAndBusinessActivities_DateTerminate, \r\n            T.ReasonT");
            viewString.Append("erminate AS FinancialAndBusinessActivities_ReasonTerminate, \r\n            T.IsEx");
            viewString.Append("traNeed AS FinancialAndBusinessActivities_isExtraNeed, \r\n            T.VolumePub");
            viewString.Append("licObligations AS FinancialAndBusinessActivities_VolumePublicObligations, \r\n    ");
            viewString.Append("        T.OtherInformation AS FinancialAndBusinessActivities_OtherInformation, \r");
            viewString.Append("\n            T.IdDocStatus AS FinancialAndBusinessActivities_idDocStatus, \r\n    ");
            viewString.Append("        T.Caption AS FinancialAndBusinessActivities_Caption, \r\n            T.IdS");
            viewString.Append("BP_BlankActual AS [FinancialAndBusinessActivities.idSBP_BlankActual], \r\n        ");
            viewString.Append("    True AS _from0\r\n        FROM DataContext.FinancialAndBusinessActivities AS T");
            viewString.Append("\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FinancialAndBusinessActivities", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView172()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_Activity", @"
    SELECT VALUE -- Constructing FBA_Activity
        [CodeFirstDatabaseSchema.FBA_Activity](T1.[FBA_Activity.id], T1.[FBA_Activity.idOwner], T1.[FBA_Activity.isOwnActivity], T1.[FBA_Activity.idActivity], T1.[FBA_Activity.idContingent])
    FROM (
        SELECT 
            T.Id AS [FBA_Activity.id], 
            T.IdOwner AS [FBA_Activity.idOwner], 
            T.IsOwnActivity AS [FBA_Activity.isOwnActivity], 
            T.IdActivity AS [FBA_Activity.idActivity], 
            T.IdContingent AS [FBA_Activity.idContingent], 
            True AS _from0
        FROM DataContext.FBA_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_PlannedVolumeIncome
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView173()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_PlannedVolumeIncome", @"
    SELECT VALUE -- Constructing FBA_PlannedVolumeIncome
        [CodeFirstDatabaseSchema.FBA_PlannedVolumeIncome](T1.[FBA_PlannedVolumeIncome.id], T1.[FBA_PlannedVolumeIncome.idOwner], T1.[FBA_PlannedVolumeIncome.idFBA_Activity], T1.[FBA_PlannedVolumeIncome.idFinanceSource], T1.[FBA_PlannedVolumeIncome.idKFO], T1.[FBA_PlannedVolumeIncome.idCodeSubsidy])
    FROM (
        SELECT 
            T.Id AS [FBA_PlannedVolumeIncome.id], 
            T.IdOwner AS [FBA_PlannedVolumeIncome.idOwner], 
            T.IdFBA_Activity AS [FBA_PlannedVolumeIncome.idFBA_Activity], 
            T.IdFinanceSource AS [FBA_PlannedVolumeIncome.idFinanceSource], 
            T.IdKFO AS [FBA_PlannedVolumeIncome.idKFO], 
            T.IdCodeSubsidy AS [FBA_PlannedVolumeIncome.idCodeSubsidy], 
            True AS _from0
        FROM DataContext.FBA_PlannedVolumeIncome AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_PlannedVolumeIncome_value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView174()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_PlannedVolumeIncome_value", @"
    SELECT VALUE -- Constructing FBA_PlannedVolumeIncome_value
        [CodeFirstDatabaseSchema.FBA_PlannedVolumeIncome_value](T1.[FBA_PlannedVolumeIncome_value.id], T1.[FBA_PlannedVolumeIncome_value.idOwner], T1.[FBA_PlannedVolumeIncome_value.idMaster], T1.[FBA_PlannedVolumeIncome_value.idHierarchyPeriod], T1.[FBA_PlannedVolumeIncome_value.Value])
    FROM (
        SELECT 
            T.Id AS [FBA_PlannedVolumeIncome_value.id], 
            T.IdOwner AS [FBA_PlannedVolumeIncome_value.idOwner], 
            T.IdMaster AS [FBA_PlannedVolumeIncome_value.idMaster], 
            T.IdHierarchyPeriod AS [FBA_PlannedVolumeIncome_value.idHierarchyPeriod], 
            T.[Value] AS [FBA_PlannedVolumeIncome_value.Value], 
            True AS _from0
        FROM DataContext.FBA_PlannedVolumeIncome_value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_CostActivities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView175()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_CostActivities", "\r\n    SELECT VALUE -- Constructing FBA_CostActivities\r\n        [CodeFirstDatabase" +
                    "Schema.FBA_CostActivities](T1.[FBA_CostActivities.id], T1.[FBA_CostActivities.id" +
                    "Owner], T1.[FBA_CostActivities.idMaster], T1.[FBA_CostActivities.isIndirectCosts" +
                    "], T1.[FBA_CostActivities.idExpenseObligationType], T1.[FBA_CostActivities.idFin" +
                    "anceSource], T1.[FBA_CostActivities.idKFO], T1.[FBA_CostActivities.idKVSR], T1.[" +
                    "FBA_CostActivities.idRZPR], T1.[FBA_CostActivities.idKCSR], T1.[FBA_CostActiviti" +
                    "es.idKVR], T1.[FBA_CostActivities.idKOSGU], T1.[FBA_CostActivities.idDFK], T1.[F" +
                    "BA_CostActivities.idDKR], T1.[FBA_CostActivities.idDEK], T1.[FBA_CostActivities." +
                    "idCodeSubsidy], T1.[FBA_CostActivities.idBranchCode], T1.[FBA_CostActivities.idF" +
                    "BA_DistributionMethods])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [FBA_" +
                    "CostActivities.id], \r\n            T.IdOwner AS [FBA_CostActivities.idOwner], \r\n " +
                    "           T.IdMaster AS [FBA_CostActivities.idMaster], \r\n            T.IsIndire" +
                    "ctCosts AS [FBA_CostActivities.isIndirectCosts], \r\n            T.IdExpenseObliga" +
                    "tionType AS [FBA_CostActivities.idExpenseObligationType], \r\n            T.IdFina" +
                    "nceSource AS [FBA_CostActivities.idFinanceSource], \r\n            T.IdKFO AS [FBA" +
                    "_CostActivities.idKFO], \r\n            T.IdKVSR AS [FBA_CostActivities.idKVSR], \r" +
                    "\n            T.IdRZPR AS [FBA_CostActivities.idRZPR], \r\n            T.IdKCSR AS " +
                    "[FBA_CostActivities.idKCSR], \r\n            T.IdKVR AS [FBA_CostActivities.idKVR]" +
                    ", \r\n            T.IdKOSGU AS [FBA_CostActivities.idKOSGU], \r\n            T.IdDFK" +
                    " AS [FBA_CostActivities.idDFK], \r\n            T.IdDKR AS [FBA_CostActivities.idD" +
                    "KR], \r\n            T.IdDEK AS [FBA_CostActivities.idDEK], \r\n            T.IdCode" +
                    "Subsidy AS [FBA_CostActivities.idCodeSubsidy], \r\n            T.IdBranchCode AS [" +
                    "FBA_CostActivities.idBranchCode], \r\n            T.IdFBA_DistributionMethods AS [" +
                    "FBA_CostActivities.idFBA_DistributionMethods], \r\n            True AS _from0\r\n   " +
                    "     FROM DataContext.FBA_CostActivities AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_DistributionMethods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView176()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_DistributionMethods", @"
    SELECT VALUE -- Constructing FBA_DistributionMethods
        [CodeFirstDatabaseSchema.FBA_DistributionMethods](T1.[FBA_DistributionMethods.id], T1.[FBA_DistributionMethods.idOwner], T1.[FBA_DistributionMethods.idIndirectCostsDistributionMethod])
    FROM (
        SELECT 
            T.Id AS [FBA_DistributionMethods.id], 
            T.IdOwner AS [FBA_DistributionMethods.idOwner], 
            T.IdIndirectCostsDistributionMethod AS [FBA_DistributionMethods.idIndirectCostsDistributionMethod], 
            True AS _from0
        FROM DataContext.FBA_DistributionMethods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_DistributionAdditionalParameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView177()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_DistributionAdditionalParameter", @"
    SELECT VALUE -- Constructing FBA_DistributionAdditionalParameter
        [CodeFirstDatabaseSchema.FBA_DistributionAdditionalParameter](T1.[FBA_DistributionAdditionalParameter.id], T1.[FBA_DistributionAdditionalParameter.idOwner], T1.[FBA_DistributionAdditionalParameter.idMaster], T1.[FBA_DistributionAdditionalParameter.idKOSGU])
    FROM (
        SELECT 
            T.Id AS [FBA_DistributionAdditionalParameter.id], 
            T.IdOwner AS [FBA_DistributionAdditionalParameter.idOwner], 
            T.IdMaster AS [FBA_DistributionAdditionalParameter.idMaster], 
            T.IdKOSGU AS [FBA_DistributionAdditionalParameter.idKOSGU], 
            True AS _from0
        FROM DataContext.FBA_DistributionAdditionalParameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_ActivitiesDistribution
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView178()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_ActivitiesDistribution", "\r\n    SELECT VALUE -- Constructing FBA_ActivitiesDistribution\r\n        [CodeFirst" +
                    "DatabaseSchema.FBA_ActivitiesDistribution](T1.[FBA_ActivitiesDistribution.id], T" +
                    "1.[FBA_ActivitiesDistribution.idOwner], T1.[FBA_ActivitiesDistribution.idMaster]" +
                    ", T1.[FBA_ActivitiesDistribution.idFBA_Activity], T1.[FBA_ActivitiesDistribution" +
                    ".OFG_Direct], T1.[FBA_ActivitiesDistribution.PFG1_Direct], T1.[FBA_ActivitiesDis" +
                    "tribution.PFG2_Direct], T1.[FBA_ActivitiesDistribution.OFG_Activity], T1.[FBA_Ac" +
                    "tivitiesDistribution.PFG1_Activity], T1.[FBA_ActivitiesDistribution.PFG2_Activit" +
                    "y], T1.[FBA_ActivitiesDistribution.FactorOFG], T1.[FBA_ActivitiesDistribution.Fa" +
                    "ctorPFG1], T1.[FBA_ActivitiesDistribution.FactorPFG2])\r\n    FROM (\r\n        SELE" +
                    "CT \r\n            T.Id AS [FBA_ActivitiesDistribution.id], \r\n            T.IdOwne" +
                    "r AS [FBA_ActivitiesDistribution.idOwner], \r\n            T.IdMaster AS [FBA_Acti" +
                    "vitiesDistribution.idMaster], \r\n            T.IdFBA_Activity AS [FBA_ActivitiesD" +
                    "istribution.idFBA_Activity], \r\n            T.OFG_Direct AS [FBA_ActivitiesDistri" +
                    "bution.OFG_Direct], \r\n            T.PFG1_Direct AS [FBA_ActivitiesDistribution.P" +
                    "FG1_Direct], \r\n            T.PFG2_Direct AS [FBA_ActivitiesDistribution.PFG2_Dir" +
                    "ect], \r\n            T.OFG_Activity AS [FBA_ActivitiesDistribution.OFG_Activity]," +
                    " \r\n            T.PFG1_Activity AS [FBA_ActivitiesDistribution.PFG1_Activity], \r\n" +
                    "            T.PFG2_Activity AS [FBA_ActivitiesDistribution.PFG2_Activity], \r\n   " +
                    "         T.FactorOFG AS [FBA_ActivitiesDistribution.FactorOFG], \r\n            T." +
                    "FactorPFG1 AS [FBA_ActivitiesDistribution.FactorPFG1], \r\n            T.FactorPFG" +
                    "2 AS [FBA_ActivitiesDistribution.FactorPFG2], \r\n            True AS _from0\r\n    " +
                    "    FROM DataContext.FBA_ActivitiesDistribution AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_IndirectCosts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView179()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_IndirectCosts", "\r\n    SELECT VALUE -- Constructing FBA_IndirectCosts\r\n        [CodeFirstDatabaseS" +
                    "chema.FBA_IndirectCosts](T1.[FBA_IndirectCosts.id], T1.[FBA_IndirectCosts.idOwne" +
                    "r], T1.[FBA_IndirectCosts.idMaster], T1.[FBA_IndirectCosts.idExpenseObligationTy" +
                    "pe], T1.[FBA_IndirectCosts.idFinanceSource], T1.[FBA_IndirectCosts.idKFO], T1.[F" +
                    "BA_IndirectCosts.idKVSR], T1.[FBA_IndirectCosts.idRZPR], T1.[FBA_IndirectCosts.i" +
                    "dKCSR], T1.[FBA_IndirectCosts.idKVR], T1.[FBA_IndirectCosts.idKOSGU], T1.[FBA_In" +
                    "directCosts.idDFK], T1.[FBA_IndirectCosts.idDKR], T1.[FBA_IndirectCosts.idDEK], " +
                    "T1.[FBA_IndirectCosts.idCodeSubsidy], T1.[FBA_IndirectCosts.idBranchCode])\r\n    " +
                    "FROM (\r\n        SELECT \r\n            T.Id AS [FBA_IndirectCosts.id], \r\n         " +
                    "   T.IdOwner AS [FBA_IndirectCosts.idOwner], \r\n            T.IdMaster AS [FBA_In" +
                    "directCosts.idMaster], \r\n            T.IdExpenseObligationType AS [FBA_IndirectC" +
                    "osts.idExpenseObligationType], \r\n            T.IdFinanceSource AS [FBA_IndirectC" +
                    "osts.idFinanceSource], \r\n            T.IdKFO AS [FBA_IndirectCosts.idKFO], \r\n   " +
                    "         T.IdKVSR AS [FBA_IndirectCosts.idKVSR], \r\n            T.IdRZPR AS [FBA_" +
                    "IndirectCosts.idRZPR], \r\n            T.IdKCSR AS [FBA_IndirectCosts.idKCSR], \r\n " +
                    "           T.IdKVR AS [FBA_IndirectCosts.idKVR], \r\n            T.IdKOSGU AS [FBA" +
                    "_IndirectCosts.idKOSGU], \r\n            T.IdDFK AS [FBA_IndirectCosts.idDFK], \r\n " +
                    "           T.IdDKR AS [FBA_IndirectCosts.idDKR], \r\n            T.IdDEK AS [FBA_I" +
                    "ndirectCosts.idDEK], \r\n            T.IdCodeSubsidy AS [FBA_IndirectCosts.idCodeS" +
                    "ubsidy], \r\n            T.IdBranchCode AS [FBA_IndirectCosts.idBranchCode], \r\n   " +
                    "         True AS _from0\r\n        FROM DataContext.FBA_IndirectCosts AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_IndirectCosts_value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView180()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_IndirectCosts_value", @"
    SELECT VALUE -- Constructing FBA_IndirectCosts_value
        [CodeFirstDatabaseSchema.FBA_IndirectCosts_value](T1.[FBA_IndirectCosts_value.id], T1.[FBA_IndirectCosts_value.idOwner], T1.[FBA_IndirectCosts_value.idMaster], T1.[FBA_IndirectCosts_value.idHierarchyPeriod], T1.[FBA_IndirectCosts_value.Value])
    FROM (
        SELECT 
            T.Id AS [FBA_IndirectCosts_value.id], 
            T.IdOwner AS [FBA_IndirectCosts_value.idOwner], 
            T.IdMaster AS [FBA_IndirectCosts_value.idMaster], 
            T.IdHierarchyPeriod AS [FBA_IndirectCosts_value.idHierarchyPeriod], 
            T.[Value] AS [FBA_IndirectCosts_value.Value], 
            True AS _from0
        FROM DataContext.FBA_IndirectCosts_value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_CostActivities_value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView181()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_CostActivities_value", @"
    SELECT VALUE -- Constructing FBA_CostActivities_value
        [CodeFirstDatabaseSchema.FBA_CostActivities_value](T1.[FBA_CostActivities_value.id], T1.[FBA_CostActivities_value.idOwner], T1.[FBA_CostActivities_value.idMaster], T1.[FBA_CostActivities_value.idHierarchyPeriod], T1.[FBA_CostActivities_value.Value], T1.[FBA_CostActivities_value.Value2])
    FROM (
        SELECT 
            T.Id AS [FBA_CostActivities_value.id], 
            T.IdOwner AS [FBA_CostActivities_value.idOwner], 
            T.IdMaster AS [FBA_CostActivities_value.idMaster], 
            T.IdHierarchyPeriod AS [FBA_CostActivities_value.idHierarchyPeriod], 
            T.[Value] AS [FBA_CostActivities_value.Value], 
            T.Value2 AS [FBA_CostActivities_value.Value2], 
            True AS _from0
        FROM DataContext.FBA_CostActivities_value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_DepartmentActivityGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView182()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_DepartmentActivityGoal", @"
    SELECT VALUE -- Constructing FBA_DepartmentActivityGoal
        [CodeFirstDatabaseSchema.FBA_DepartmentActivityGoal](T1.[FBA_DepartmentActivityGoal.id], T1.[FBA_DepartmentActivityGoal.idOwner], T1.[FBA_DepartmentActivityGoal.DepartmentGoal])
    FROM (
        SELECT 
            T.Id AS [FBA_DepartmentActivityGoal.id], 
            T.IdOwner AS [FBA_DepartmentActivityGoal.idOwner], 
            T.DepartmentGoal AS [FBA_DepartmentActivityGoal.DepartmentGoal], 
            True AS _from0
        FROM DataContext.FBA_DepartmentActivityGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FBA_FinancialIndicatorsInstitutions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView183()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FBA_FinancialIndicatorsInstitutions", @"
    SELECT VALUE -- Constructing FBA_FinancialIndicatorsInstitutions
        [CodeFirstDatabaseSchema.FBA_FinancialIndicatorsInstitutions](T1.[FBA_FinancialIndicatorsInstitutions.id], T1.[FBA_FinancialIndicatorsInstitutions.idOwner], T1.[FBA_FinancialIndicatorsInstitutions.idFinancialIndicator], T1.[FBA_FinancialIndicatorsInstitutions.idFinancialIndicatorCaption], T1.[FBA_FinancialIndicatorsInstitutions.Value])
    FROM (
        SELECT 
            T.Id AS [FBA_FinancialIndicatorsInstitutions.id], 
            T.IdOwner AS [FBA_FinancialIndicatorsInstitutions.idOwner], 
            T.IdFinancialIndicator AS [FBA_FinancialIndicatorsInstitutions.idFinancialIndicator], 
            T.IdFinancialIndicatorCaption AS [FBA_FinancialIndicatorsInstitutions.idFinancialIndicatorCaption], 
            T.[Value] AS [FBA_FinancialIndicatorsInstitutions.Value], 
            True AS _from0
        FROM DataContext.FBA_FinancialIndicatorsInstitutions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FinancialIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView184()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FinancialIndicator", @"
    SELECT VALUE -- Constructing FinancialIndicator
        [CodeFirstDatabaseSchema.FinancialIndicator](T1.FinancialIndicator_id, T1.FinancialIndicator_idPublicLegalFormation, T1.FinancialIndicator_idParent, T1.FinancialIndicator_RowCode, T1.FinancialIndicator_Caption, T1.FinancialIndicator_idRefStatus)
    FROM (
        SELECT 
            T.Id AS FinancialIndicator_id, 
            T.IdPublicLegalFormation AS FinancialIndicator_idPublicLegalFormation, 
            T.IdParent AS FinancialIndicator_idParent, 
            T.RowCode AS FinancialIndicator_RowCode, 
            T.Caption AS FinancialIndicator_Caption, 
            T.IdRefStatus AS FinancialIndicator_idRefStatus, 
            True AS _from0
        FROM DataContext.FinancialIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateJustification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView185()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateJustification", @"
    SELECT VALUE -- Constructing TemplateJustification
        [CodeFirstDatabaseSchema.TemplateJustification](T1.TemplateJustification_id, T1.TemplateJustification_idPublicLegalFormation, T1.TemplateJustification_idBudget, T1.TemplateJustification_Caption, T1.TemplateJustification_idSBP, T1.TemplateJustification_idActivity, T1.TemplateJustification_idRefStatus)
    FROM (
        SELECT 
            T.Id AS TemplateJustification_id, 
            T.IdPublicLegalFormation AS TemplateJustification_idPublicLegalFormation, 
            T.IdBudget AS TemplateJustification_idBudget, 
            T.Caption AS TemplateJustification_Caption, 
            T.IdSBP AS TemplateJustification_idSBP, 
            T.IdActivity AS TemplateJustification_idActivity, 
            T.IdRefStatus AS TemplateJustification_idRefStatus, 
            True AS _from0
        FROM DataContext.TemplateJustification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView186()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestDocument", @"
    SELECT VALUE -- Constructing TestDocument
        [CodeFirstDatabaseSchema.TestDocument](T1.TestDocument_id, T1.TestDocument_Number, T1.TestDocument_Date, T1.TestDocument_idDocStatus, T1.TestDocument_Zumma, T1.TestDocument_idPublicLegalFormation, T1.TestDocument_idSbp, T1.TestDocument_idOther, T1.TestDocument_idThis, T1.TestDocument_AAA)
    FROM (
        SELECT 
            T.Id AS TestDocument_id, 
            T.Number AS TestDocument_Number, 
            T.Date AS TestDocument_Date, 
            T.IdDocStatus AS TestDocument_idDocStatus, 
            T.Zumma AS TestDocument_Zumma, 
            T.IdPublicLegalFormation AS TestDocument_idPublicLegalFormation, 
            T.IdSbp AS TestDocument_idSbp, 
            T.IdOther AS TestDocument_idOther, 
            T.IdThis AS TestDocument_idThis, 
            T.AAA AS TestDocument_AAA, 
            True AS _from0
        FROM DataContext.TestDocument AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicLegalFormationModule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView187()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicLegalFormationModule", @"
    SELECT VALUE -- Constructing PublicLegalFormationModule
        [CodeFirstDatabaseSchema.PublicLegalFormationModule](T1.PublicLegalFormationModule_id, T1.PublicLegalFormationModule_idPublicLegalFormation, T1.PublicLegalFormationModule_idRefStatus)
    FROM (
        SELECT 
            T.Id AS PublicLegalFormationModule_id, 
            T.IdPublicLegalFormation AS PublicLegalFormationModule_idPublicLegalFormation, 
            T.IdRefStatus AS PublicLegalFormationModule_idRefStatus, 
            True AS _from0
        FROM DataContext.PublicLegalFormationModule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Module
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView188()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Module", @"
    SELECT VALUE -- Constructing Module
        [CodeFirstDatabaseSchema.Module](T1.Module_id, T1.Module_Caption, T1.Module_Code, T1.Module_On)
    FROM (
        SELECT 
            T.Id AS Module_id, 
            T.Caption AS Module_Caption, 
            T.Code AS Module_Code, 
            T.[On] AS Module_On, 
            True AS _from0
        FROM DataContext.Module AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestDocumentTP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView189()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestDocumentTP", @"
    SELECT VALUE -- Constructing TestDocumentTP
        [CodeFirstDatabaseSchema.TestDocumentTP](T1.TestDocumentTP_id, T1.TestDocumentTP_idOwner, T1.TestDocumentTP_Value)
    FROM (
        SELECT 
            T.Id AS TestDocumentTP_id, 
            T.IdOwner AS TestDocumentTP_idOwner, 
            T.[Value] AS TestDocumentTP_Value, 
            True AS _from0
        FROM DataContext.TestDocumentTP AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestDocumentTP2
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView190()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestDocumentTP2", @"
    SELECT VALUE -- Constructing TestDocumentTP2
        [CodeFirstDatabaseSchema.TestDocumentTP2](T1.TestDocumentTP2_id, T1.TestDocumentTP2_idOwner, T1.TestDocumentTP2_Amount, T1.TestDocumentTP2_idValue)
    FROM (
        SELECT 
            T.Id AS TestDocumentTP2_id, 
            T.IdOwner AS TestDocumentTP2_idOwner, 
            T.Amount AS TestDocumentTP2_Amount, 
            T.IdValue AS TestDocumentTP2_idValue, 
            True AS _from0
        FROM DataContext.TestDocumentTP2 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestObject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView191()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestObject", @"
    SELECT VALUE -- Constructing TestObject
        [CodeFirstDatabaseSchema.TestObject](T1.TestObject_id, T1.TestObject_Value)
    FROM (
        SELECT 
            T.Id AS TestObject_id, 
            T.[Value] AS TestObject_Value, 
            True AS _from0
        FROM DataContext.TestObject AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestDocument2
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView192()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestDocument2", @"
    SELECT VALUE -- Constructing TestDocument2
        [CodeFirstDatabaseSchema.TestDocument2](T1.TestDocument2_id, T1.TestDocument2_Number, T1.TestDocument2_Date, T1.TestDocument2_idDocStatus, T1.TestDocument2_idParent, T1.TestDocument2_SSS)
    FROM (
        SELECT 
            T.Id AS TestDocument2_id, 
            T.Number AS TestDocument2_Number, 
            T.Date AS TestDocument2_Date, 
            T.IdDocStatus AS TestDocument2_idDocStatus, 
            T.IdParent AS TestDocument2_idParent, 
            T.SSS AS TestDocument2_SSS, 
            True AS _from0
        FROM DataContext.TestDocument2 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestReg1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView193()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestReg1", @"
    SELECT VALUE -- Constructing TestReg1
        [CodeFirstDatabaseSchema.TestReg1](T1.TestReg1_id, T1.TestReg1_idRegistrator, T1.TestReg1_idExecutedOperation, T1.TestReg1_Text, T1.TestReg1_idTerminator, T1.TestReg1_idTerminatorEntity, T1.TestReg1_idTerminateOperation, T1.TestReg1_DateTerminate)
    FROM (
        SELECT 
            T.Id AS TestReg1_id, 
            T.IdRegistrator AS TestReg1_idRegistrator, 
            T.IdExecutedOperation AS TestReg1_idExecutedOperation, 
            T.Text AS TestReg1_Text, 
            T.IdTerminator AS TestReg1_idTerminator, 
            T.IdTerminatorEntity AS TestReg1_idTerminatorEntity, 
            T.IdTerminateOperation AS TestReg1_idTerminateOperation, 
            T.DateTerminate AS TestReg1_DateTerminate, 
            True AS _from0
        FROM DataContext.TestReg1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestReg2
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView194()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestReg2", @"
    SELECT VALUE -- Constructing TestReg2
        [CodeFirstDatabaseSchema.TestReg2](T1.TestReg2_id, T1.TestReg2_idRegistrator, T1.TestReg2_idRegistratorEntity)
    FROM (
        SELECT 
            T.Id AS TestReg2_id, 
            T.IdRegistrator AS TestReg2_idRegistrator, 
            T.IdRegistratorEntity AS TestReg2_idRegistratorEntity, 
            True AS _from0
        FROM DataContext.TestReg2 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestDocument3
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView195()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestDocument3", @"
    SELECT VALUE -- Constructing TestDocument3
        [CodeFirstDatabaseSchema.TestDocument3](T1.TestDocument3_id, T1.TestDocument3_idDocStatus, T1.TestDocument3_Date, T1.TestDocument3_Number, T1.TestDocument3_Zumma)
    FROM (
        SELECT 
            T.Id AS TestDocument3_id, 
            T.IdDocStatus AS TestDocument3_idDocStatus, 
            T.Date AS TestDocument3_Date, 
            T.Number AS TestDocument3_Number, 
            T.Zumma AS TestDocument3_Zumma, 
            True AS _from0
        FROM DataContext.TestDocument3 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AttributeOfSystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView196()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2807);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AttributeOfSystemGoalElement\r\n        [CodeFi");
            viewString.Append("rstDatabaseSchema.AttributeOfSystemGoalElement](T1.AttributeOfSystemGoalElement_");
            viewString.Append("id, T1.AttributeOfSystemGoalElement_idRegistrator, T1.AttributeOfSystemGoalEleme");
            viewString.Append("nt_idTerminator, T1.AttributeOfSystemGoalElement_idApproved, T1.AttributeOfSyste");
            viewString.Append("mGoalElement_idApprovedEntity, T1.AttributeOfSystemGoalElement_idRegistratorEnti");
            viewString.Append("ty, T1.AttributeOfSystemGoalElement_idTerminatorEntity, T1.AttributeOfSystemGoal");
            viewString.Append("Element_idExecutedOperation, T1.AttributeOfSystemGoalElement_idTerminateOperatio");
            viewString.Append("n, T1.AttributeOfSystemGoalElement_idPublicLegalFormation, T1.AttributeOfSystemG");
            viewString.Append("oalElement_idVersion, T1.AttributeOfSystemGoalElement_idSystemGoalElement, T1.[A");
            viewString.Append("ttributeOfSystemGoalElement.idSystemGoalElement_Parent], T1.AttributeOfSystemGoa");
            viewString.Append("lElement_idSBP, T1.AttributeOfSystemGoalElement_idElementTypeSystemGoal, T1.Attr");
            viewString.Append("ibuteOfSystemGoalElement_DateStart, T1.AttributeOfSystemGoalElement_DateEnd, T1.");
            viewString.Append("AttributeOfSystemGoalElement_DateCommit, T1.AttributeOfSystemGoalElement_DateTer");
            viewString.Append("minate, T1.AttributeOfSystemGoalElement_DateCreate)\r\n    FROM (\r\n        SELECT ");
            viewString.Append("\r\n            T.Id AS AttributeOfSystemGoalElement_id, \r\n            T.IdRegistr");
            viewString.Append("ator AS AttributeOfSystemGoalElement_idRegistrator, \r\n            T.IdTerminator");
            viewString.Append(" AS AttributeOfSystemGoalElement_idTerminator, \r\n            T.IdApproved AS Att");
            viewString.Append("ributeOfSystemGoalElement_idApproved, \r\n            T.IdApprovedEntity AS Attrib");
            viewString.Append("uteOfSystemGoalElement_idApprovedEntity, \r\n            T.IdRegistratorEntity AS ");
            viewString.Append("AttributeOfSystemGoalElement_idRegistratorEntity, \r\n            T.IdTerminatorEn");
            viewString.Append("tity AS AttributeOfSystemGoalElement_idTerminatorEntity, \r\n            T.IdExecu");
            viewString.Append("tedOperation AS AttributeOfSystemGoalElement_idExecutedOperation, \r\n            ");
            viewString.Append("T.IdTerminateOperation AS AttributeOfSystemGoalElement_idTerminateOperation, \r\n ");
            viewString.Append("           T.IdPublicLegalFormation AS AttributeOfSystemGoalElement_idPublicLega");
            viewString.Append("lFormation, \r\n            T.IdVersion AS AttributeOfSystemGoalElement_idVersion,");
            viewString.Append(" \r\n            T.IdSystemGoalElement AS AttributeOfSystemGoalElement_idSystemGoa");
            viewString.Append("lElement, \r\n            T.IdSystemGoalElement_Parent AS [AttributeOfSystemGoalEl");
            viewString.Append("ement.idSystemGoalElement_Parent], \r\n            T.IdSBP AS AttributeOfSystemGoa");
            viewString.Append("lElement_idSBP, \r\n            T.IdElementTypeSystemGoal AS AttributeOfSystemGoal");
            viewString.Append("Element_idElementTypeSystemGoal, \r\n            T.DateStart AS AttributeOfSystemG");
            viewString.Append("oalElement_DateStart, \r\n            T.DateEnd AS AttributeOfSystemGoalElement_Da");
            viewString.Append("teEnd, \r\n            T.DateCommit AS AttributeOfSystemGoalElement_DateCommit, \r\n");
            viewString.Append("            T.DateTerminate AS AttributeOfSystemGoalElement_DateTerminate, \r\n   ");
            viewString.Append("         T.DateCreate AS AttributeOfSystemGoalElement_DateCreate, \r\n            ");
            viewString.Append("True AS _from0\r\n        FROM DataContext.AttributeOfSystemGoalElement AS T\r\n    ");
            viewString.Append(") AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AttributeOfSystemGoalElement", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LimitVolumeAppropriations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView197()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2755);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitVolumeAppropriations\r\n        [CodeFirst");
            viewString.Append("DatabaseSchema.LimitVolumeAppropriations](T1.LimitVolumeAppropriations_id, T1.Li");
            viewString.Append("mitVolumeAppropriations_idExecutedOperation, T1.LimitVolumeAppropriations_idPubl");
            viewString.Append("icLegalFormation, T1.LimitVolumeAppropriations_idVersion, T1.LimitVolumeAppropri");
            viewString.Append("ations_idBudget, T1.LimitVolumeAppropriations_idEstimatedLine, T1.LimitVolumeApp");
            viewString.Append("ropriations_idAuthorityOfExpenseObligation, T1.LimitVolumeAppropriations_idTaskC");
            viewString.Append("ollection, T1.LimitVolumeAppropriations_isIndirectCosts, T1.LimitVolumeAppropria");
            viewString.Append("tions_idHierarchyPeriod, T1.LimitVolumeAppropriations_idValueType, T1.LimitVolum");
            viewString.Append("eAppropriations_Value, T1.LimitVolumeAppropriations_idOKATO, T1.LimitVolumeAppro");
            viewString.Append("priations_isMeansAUBU, T1.LimitVolumeAppropriations_idRegistrator, T1.LimitVolum");
            viewString.Append("eAppropriations_idRegistratorEntity, T1.LimitVolumeAppropriations_DateCommit, T1");
            viewString.Append(".LimitVolumeAppropriations_idApproved, T1.LimitVolumeAppropriations_idApprovedEn");
            viewString.Append("tity, T1.LimitVolumeAppropriations_DateCreate, T1.LimitVolumeAppropriations_HasA");
            viewString.Append("dditionalNeed)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS LimitVolumeAppr");
            viewString.Append("opriations_id, \r\n            T.IdExecutedOperation AS LimitVolumeAppropriations_");
            viewString.Append("idExecutedOperation, \r\n            T.IdPublicLegalFormation AS LimitVolumeApprop");
            viewString.Append("riations_idPublicLegalFormation, \r\n            T.IdVersion AS LimitVolumeAppropr");
            viewString.Append("iations_idVersion, \r\n            T.IdBudget AS LimitVolumeAppropriations_idBudge");
            viewString.Append("t, \r\n            T.IdEstimatedLine AS LimitVolumeAppropriations_idEstimatedLine,");
            viewString.Append(" \r\n            T.IdAuthorityOfExpenseObligation AS LimitVolumeAppropriations_idA");
            viewString.Append("uthorityOfExpenseObligation, \r\n            T.IdTaskCollection AS LimitVolumeAppr");
            viewString.Append("opriations_idTaskCollection, \r\n            T.IsIndirectCosts AS LimitVolumeAppro");
            viewString.Append("priations_isIndirectCosts, \r\n            T.IdHierarchyPeriod AS LimitVolumeAppro");
            viewString.Append("priations_idHierarchyPeriod, \r\n            T.IdValueType AS LimitVolumeAppropria");
            viewString.Append("tions_idValueType, \r\n            T.[Value] AS LimitVolumeAppropriations_Value, \r");
            viewString.Append("\n            T.IdOKATO AS LimitVolumeAppropriations_idOKATO, \r\n            T.IsM");
            viewString.Append("eansAUBU AS LimitVolumeAppropriations_isMeansAUBU, \r\n            T.IdRegistrator");
            viewString.Append(" AS LimitVolumeAppropriations_idRegistrator, \r\n            T.IdRegistratorEntity");
            viewString.Append(" AS LimitVolumeAppropriations_idRegistratorEntity, \r\n            T.DateCommit AS");
            viewString.Append(" LimitVolumeAppropriations_DateCommit, \r\n            T.IdApproved AS LimitVolume");
            viewString.Append("Appropriations_idApproved, \r\n            T.IdApprovedEntity AS LimitVolumeApprop");
            viewString.Append("riations_idApprovedEntity, \r\n            T.DateCreate AS LimitVolumeAppropriatio");
            viewString.Append("ns_DateCreate, \r\n            T.HasAdditionalNeed AS LimitVolumeAppropriations_Ha");
            viewString.Append("sAdditionalNeed, \r\n            True AS _from0\r\n        FROM DataContext.LimitVol");
            viewString.Append("umeAppropriations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LimitVolumeAppropriations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegisterActivity_IndicatorActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView198()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegisterActivity_IndicatorActivity", @"
    SELECT VALUE -- Constructing RegisterActivity_IndicatorActivity
        [CodeFirstDatabaseSchema.RegisterActivity_IndicatorActivity](T1.[RegisterActivity_IndicatorActivity.id], T1.[RegisterActivity_IndicatorActivity.idOwner], T1.[RegisterActivity_IndicatorActivity.IdMaster], T1.[RegisterActivity_IndicatorActivity.IndicatorActivity])
    FROM (
        SELECT 
            T.Id AS [RegisterActivity_IndicatorActivity.id], 
            T.IdOwner AS [RegisterActivity_IndicatorActivity.idOwner], 
            T.IdMaster AS [RegisterActivity_IndicatorActivity.IdMaster], 
            T.IndicatorActivity AS [RegisterActivity_IndicatorActivity.IndicatorActivity], 
            True AS _from0
        FROM DataContext.RegisterActivity_IndicatorActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegisterActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView199()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegisterActivity", @"
    SELECT VALUE -- Constructing RegisterActivity
        [CodeFirstDatabaseSchema.RegisterActivity](T1.RegisterActivity_id, T1.RegisterActivity_Header, T1.RegisterActivity_IdDocStatus, T1.RegisterActivity_idPublicLegalFormation, T1.RegisterActivity_idDocType, T1.RegisterActivity_Number, T1.RegisterActivity_Date, T1.RegisterActivity_isApproved, T1.RegisterActivity_DateCommit, T1.RegisterActivity_idSBP, T1.RegisterActivity_DateLastEdit, T1.RegisterActivity_Description, T1.RegisterActivity_idParent, T1.RegisterActivity_ReasonCancel)
    FROM (
        SELECT 
            T.Id AS RegisterActivity_id, 
            T.Header AS RegisterActivity_Header, 
            T.IdDocStatus AS RegisterActivity_IdDocStatus, 
            T.IdPublicLegalFormation AS RegisterActivity_idPublicLegalFormation, 
            T.IdDocType AS RegisterActivity_idDocType, 
            T.Number AS RegisterActivity_Number, 
            T.Date AS RegisterActivity_Date, 
            T.IsApproved AS RegisterActivity_isApproved, 
            T.DateCommit AS RegisterActivity_DateCommit, 
            T.IdSBP AS RegisterActivity_idSBP, 
            T.DateLastEdit AS RegisterActivity_DateLastEdit, 
            T.Description AS RegisterActivity_Description, 
            T.IdParent AS RegisterActivity_idParent, 
            T.ReasonCancel AS RegisterActivity_ReasonCancel, 
            True AS _from0
        FROM DataContext.RegisterActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegisterActivity_Performers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView200()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegisterActivity_Performers", @"
    SELECT VALUE -- Constructing RegisterActivity_Performers
        [CodeFirstDatabaseSchema.RegisterActivity_Performers](T1.[RegisterActivity_Performers.id], T1.[RegisterActivity_Performers.idOwner], T1.[RegisterActivity_Performers.IdMaster], T1.[RegisterActivity_Performers.Performers])
    FROM (
        SELECT 
            T.Id AS [RegisterActivity_Performers.id], 
            T.IdOwner AS [RegisterActivity_Performers.idOwner], 
            T.IdMaster AS [RegisterActivity_Performers.IdMaster], 
            T.Performers AS [RegisterActivity_Performers.Performers], 
            True AS _from0
        FROM DataContext.RegisterActivity_Performers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegisterActivity_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView201()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegisterActivity_Activity", @"
    SELECT VALUE -- Constructing RegisterActivity_Activity
        [CodeFirstDatabaseSchema.RegisterActivity_Activity](T1.[RegisterActivity_Activity.id], T1.[RegisterActivity_Activity.idOwner], T1.[RegisterActivity_Activity.idActivity], T1.[RegisterActivity_Activity.idIndicatorActivity_Volume], T1.[RegisterActivity_Activity.idContingent], T1.[RegisterActivity_Activity.idRegistryKeyActivity], T1.[RegisterActivity_Activity.idRegystryActivity_ActivityMain])
    FROM (
        SELECT 
            T.Id AS [RegisterActivity_Activity.id], 
            T.IdOwner AS [RegisterActivity_Activity.idOwner], 
            T.IdActivity AS [RegisterActivity_Activity.idActivity], 
            T.IdIndicatorActivity_Volume AS [RegisterActivity_Activity.idIndicatorActivity_Volume], 
            T.IdContingent AS [RegisterActivity_Activity.idContingent], 
            T.IdRegistryKeyActivity AS [RegisterActivity_Activity.idRegistryKeyActivity], 
            T.IdRegystryActivity_ActivityMain AS [RegisterActivity_Activity.idRegystryActivity_ActivityMain], 
            True AS _from0
        FROM DataContext.RegisterActivity_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PermissionsInputAdditionalRequirements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView202()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PermissionsInputAdditionalRequirements", @"
    SELECT VALUE -- Constructing PermissionsInputAdditionalRequirements
        [CodeFirstDatabaseSchema.PermissionsInputAdditionalRequirements](T1.PermissionsInputAdditionalRequirements_id, T1.PermissionsInputAdditionalRequirements_idPublicLegalFormation, T1.PermissionsInputAdditionalRequirements_idRefStatus, T1.PermissionsInputAdditionalRequirements_idSBP, T1.PermissionsInputAdditionalRequirements_EnterAdditionalRequirements)
    FROM (
        SELECT 
            T.Id AS PermissionsInputAdditionalRequirements_id, 
            T.IdPublicLegalFormation AS PermissionsInputAdditionalRequirements_idPublicLegalFormation, 
            T.IdRefStatus AS PermissionsInputAdditionalRequirements_idRefStatus, 
            T.IdSBP AS PermissionsInputAdditionalRequirements_idSBP, 
            T.EnterAdditionalRequirements AS PermissionsInputAdditionalRequirements_EnterAdditionalRequirements, 
            True AS _from0
        FROM DataContext.PermissionsInputAdditionalRequirements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AttributeOfProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView203()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2432);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AttributeOfProgram\r\n        [CodeFirstDatabas");
            viewString.Append("eSchema.AttributeOfProgram](T1.AttributeOfProgram_id, T1.AttributeOfProgram_idAp");
            viewString.Append("proved, T1.AttributeOfProgram_idApprovedEntity, T1.AttributeOfProgram_idRegistra");
            viewString.Append("tor, T1.AttributeOfProgram_idRegistratorEntity, T1.AttributeOfProgram_idTerminat");
            viewString.Append("or, T1.AttributeOfProgram_idTerminatorEntity, T1.AttributeOfProgram_idExecutedOp");
            viewString.Append("eration, T1.AttributeOfProgram_idTerminateOperation, T1.AttributeOfProgram_idPub");
            viewString.Append("licLegalFormation, T1.AttributeOfProgram_idVersion, T1.AttributeOfProgram_DateCo");
            viewString.Append("mmit, T1.AttributeOfProgram_DateTerminate, T1.AttributeOfProgram_DateCreate, T1.");
            viewString.Append("AttributeOfProgram_idProgram, T1.AttributeOfProgram_idAnalyticalCodeStateProgram");
            viewString.Append(", T1.AttributeOfProgram_Caption, T1.AttributeOfProgram_DateStart, T1.AttributeOf");
            viewString.Append("Program_DateEnd, T1.AttributeOfProgram_idGoalSystemElement, T1.AttributeOfProgra");
            viewString.Append("m_idParent)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS AttributeOfProgram");
            viewString.Append("_id, \r\n            T.IdApproved AS AttributeOfProgram_idApproved, \r\n            ");
            viewString.Append("T.IdApprovedEntity AS AttributeOfProgram_idApprovedEntity, \r\n            T.IdReg");
            viewString.Append("istrator AS AttributeOfProgram_idRegistrator, \r\n            T.IdRegistratorEntit");
            viewString.Append("y AS AttributeOfProgram_idRegistratorEntity, \r\n            T.IdTerminator AS Att");
            viewString.Append("ributeOfProgram_idTerminator, \r\n            T.IdTerminatorEntity AS AttributeOfP");
            viewString.Append("rogram_idTerminatorEntity, \r\n            T.IdExecutedOperation AS AttributeOfPro");
            viewString.Append("gram_idExecutedOperation, \r\n            T.IdTerminateOperation AS AttributeOfPro");
            viewString.Append("gram_idTerminateOperation, \r\n            T.IdPublicLegalFormation AS AttributeOf");
            viewString.Append("Program_idPublicLegalFormation, \r\n            T.IdVersion AS AttributeOfProgram_");
            viewString.Append("idVersion, \r\n            T.DateCommit AS AttributeOfProgram_DateCommit, \r\n      ");
            viewString.Append("      T.DateTerminate AS AttributeOfProgram_DateTerminate, \r\n            T.DateC");
            viewString.Append("reate AS AttributeOfProgram_DateCreate, \r\n            T.IdProgram AS AttributeOf");
            viewString.Append("Program_idProgram, \r\n            T.IdAnalyticalCodeStateProgram AS AttributeOfPr");
            viewString.Append("ogram_idAnalyticalCodeStateProgram, \r\n            T.Caption AS AttributeOfProgra");
            viewString.Append("m_Caption, \r\n            T.DateStart AS AttributeOfProgram_DateStart, \r\n        ");
            viewString.Append("    T.DateEnd AS AttributeOfProgram_DateEnd, \r\n            T.IdGoalSystemElement");
            viewString.Append(" AS AttributeOfProgram_idGoalSystemElement, \r\n            T.IdParent AS Attribut");
            viewString.Append("eOfProgram_idParent, \r\n            True AS _from0\r\n        FROM DataContext.Attr");
            viewString.Append("ibuteOfProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AttributeOfProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Program_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView204()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2929);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Program_ResourceMaintenance\r\n        [CodeFir");
            viewString.Append("stDatabaseSchema.Program_ResourceMaintenance](T1.[Program_ResourceMaintenance.id");
            viewString.Append("], T1.[Program_ResourceMaintenance.idTerminator], T1.[Program_ResourceMaintenanc");
            viewString.Append("e.idTerminatorEntity], T1.[Program_ResourceMaintenance.idApproved], T1.[Program_");
            viewString.Append("ResourceMaintenance.idApprovedEntity], T1.[Program_ResourceMaintenance.idRegistr");
            viewString.Append("ator], T1.[Program_ResourceMaintenance.idRegistratorEntity], T1.[Program_Resourc");
            viewString.Append("eMaintenance.idExecutedOperation], T1.[Program_ResourceMaintenance.idTerminateOp");
            viewString.Append("eration], T1.[Program_ResourceMaintenance.idPublicLegalFormation], T1.[Program_R");
            viewString.Append("esourceMaintenance.idVersion], T1.[Program_ResourceMaintenance.DateCommit], T1.[");
            viewString.Append("Program_ResourceMaintenance.DateTerminate], T1.[Program_ResourceMaintenance.Date");
            viewString.Append("Create], T1.[Program_ResourceMaintenance.idFinanceSource], T1.[Program_ResourceM");
            viewString.Append("aintenance.idHierarchyPeriod], T1.[Program_ResourceMaintenance.Value], T1.[Progr");
            viewString.Append("am_ResourceMaintenance.idValueType], T1.[Program_ResourceMaintenance.idProgram],");
            viewString.Append(" T1.[Program_ResourceMaintenance.idTaskCollection], T1.[Program_ResourceMaintena");
            viewString.Append("nce.IsAdditionalNeed])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [Progra");
            viewString.Append("m_ResourceMaintenance.id], \r\n            T.IdTerminator AS [Program_ResourceMain");
            viewString.Append("tenance.idTerminator], \r\n            T.IdTerminatorEntity AS [Program_ResourceMa");
            viewString.Append("intenance.idTerminatorEntity], \r\n            T.IdApproved AS [Program_ResourceMa");
            viewString.Append("intenance.idApproved], \r\n            T.IdApprovedEntity AS [Program_ResourceMain");
            viewString.Append("tenance.idApprovedEntity], \r\n            T.IdRegistrator AS [Program_ResourceMai");
            viewString.Append("ntenance.idRegistrator], \r\n            T.IdRegistratorEntity AS [Program_Resourc");
            viewString.Append("eMaintenance.idRegistratorEntity], \r\n            T.IdExecutedOperation AS [Progr");
            viewString.Append("am_ResourceMaintenance.idExecutedOperation], \r\n            T.IdTerminateOperatio");
            viewString.Append("n AS [Program_ResourceMaintenance.idTerminateOperation], \r\n            T.IdPubli");
            viewString.Append("cLegalFormation AS [Program_ResourceMaintenance.idPublicLegalFormation], \r\n     ");
            viewString.Append("       T.IdVersion AS [Program_ResourceMaintenance.idVersion], \r\n            T.D");
            viewString.Append("ateCommit AS [Program_ResourceMaintenance.DateCommit], \r\n            T.DateTermi");
            viewString.Append("nate AS [Program_ResourceMaintenance.DateTerminate], \r\n            T.DateCreate ");
            viewString.Append("AS [Program_ResourceMaintenance.DateCreate], \r\n            T.IdFinanceSource AS ");
            viewString.Append("[Program_ResourceMaintenance.idFinanceSource], \r\n            T.IdHierarchyPeriod");
            viewString.Append(" AS [Program_ResourceMaintenance.idHierarchyPeriod], \r\n            T.[Value] AS ");
            viewString.Append("[Program_ResourceMaintenance.Value], \r\n            T.IdValueType AS [Program_Res");
            viewString.Append("ourceMaintenance.idValueType], \r\n            T.IdProgram AS [Program_ResourceMai");
            viewString.Append("ntenance.idProgram], \r\n            T.IdTaskCollection AS [Program_ResourceMainte");
            viewString.Append("nance.idTaskCollection], \r\n            T.IsAdditionalNeed AS [Program_ResourceMa");
            viewString.Append("intenance.IsAdditionalNeed], \r\n            True AS _from0\r\n        FROM DataCont");
            viewString.Append("ext.Program_ResourceMaintenance AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Program_ResourceMaintenance", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView205()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3183);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LongTermGoalProgram\r\n        [CodeFirstDataba");
            viewString.Append("seSchema.LongTermGoalProgram](T1.LongTermGoalProgram_id, T1.LongTermGoalProgram_");
            viewString.Append("DateLastEdit, T1.LongTermGoalProgram_idDocStatus, T1.LongTermGoalProgram_idPubli");
            viewString.Append("cLegalFormation, T1.LongTermGoalProgram_idDocType, T1.LongTermGoalProgram_idVers");
            viewString.Append("ion, T1.LongTermGoalProgram_Number, T1.LongTermGoalProgram_Date, T1.LongTermGoal");
            viewString.Append("Program_idAnalyticalCodeStateProgram, T1.LongTermGoalProgram_DateStart, T1.LongT");
            viewString.Append("ermGoalProgram_DateEnd, T1.LongTermGoalProgram_DateCommit, T1.LongTermGoalProgra");
            viewString.Append("m_isApproved, T1.LongTermGoalProgram_Caption, T1.LongTermGoalProgram_idResponsib");
            viewString.Append("leExecutantType, T1.LongTermGoalProgram_idSBP, T1.LongTermGoalProgram_HasMasterD");
            viewString.Append("oc, T1.LongTermGoalProgram_idMasterStateProgram, T1.LongTermGoalProgram_Descript");
            viewString.Append("ion, T1.LongTermGoalProgram_isRequireClarification, T1.LongTermGoalProgram_Reaso");
            viewString.Append("nClarification, T1.LongTermGoalProgram_DateTerminate, T1.LongTermGoalProgram_Rea");
            viewString.Append("sonTerminate, T1.LongTermGoalProgram_idParent, T1.LongTermGoalProgram_ReasonCanc");
            viewString.Append("el, T1.LongTermGoalProgram_idMasterLongTermGoalProgram, T1.LongTermGoalProgram_H");
            viewString.Append("eader, T1.LongTermGoalProgram_HasAdditionalNeed)\r\n    FROM (\r\n        SELECT \r\n ");
            viewString.Append("           T.Id AS LongTermGoalProgram_id, \r\n            T.DateLastEdit AS LongT");
            viewString.Append("ermGoalProgram_DateLastEdit, \r\n            T.IdDocStatus AS LongTermGoalProgram_");
            viewString.Append("idDocStatus, \r\n            T.IdPublicLegalFormation AS LongTermGoalProgram_idPub");
            viewString.Append("licLegalFormation, \r\n            T.IdDocType AS LongTermGoalProgram_idDocType, \r");
            viewString.Append("\n            T.IdVersion AS LongTermGoalProgram_idVersion, \r\n            T.Numbe");
            viewString.Append("r AS LongTermGoalProgram_Number, \r\n            T.Date AS LongTermGoalProgram_Dat");
            viewString.Append("e, \r\n            T.IdAnalyticalCodeStateProgram AS LongTermGoalProgram_idAnalyti");
            viewString.Append("calCodeStateProgram, \r\n            T.DateStart AS LongTermGoalProgram_DateStart,");
            viewString.Append(" \r\n            T.DateEnd AS LongTermGoalProgram_DateEnd, \r\n            T.DateCom");
            viewString.Append("mit AS LongTermGoalProgram_DateCommit, \r\n            T.IsApproved AS LongTermGoa");
            viewString.Append("lProgram_isApproved, \r\n            T.Caption AS LongTermGoalProgram_Caption, \r\n ");
            viewString.Append("           T.IdResponsibleExecutantType AS LongTermGoalProgram_idResponsibleExec");
            viewString.Append("utantType, \r\n            T.IdSBP AS LongTermGoalProgram_idSBP, \r\n            T.H");
            viewString.Append("asMasterDoc AS LongTermGoalProgram_HasMasterDoc, \r\n            T.IdMasterStatePr");
            viewString.Append("ogram AS LongTermGoalProgram_idMasterStateProgram, \r\n            T.Description A");
            viewString.Append("S LongTermGoalProgram_Description, \r\n            T.IsRequireClarification AS Lon");
            viewString.Append("gTermGoalProgram_isRequireClarification, \r\n            T.ReasonClarification AS ");
            viewString.Append("LongTermGoalProgram_ReasonClarification, \r\n            T.DateTerminate AS LongTe");
            viewString.Append("rmGoalProgram_DateTerminate, \r\n            T.ReasonTerminate AS LongTermGoalProg");
            viewString.Append("ram_ReasonTerminate, \r\n            T.IdParent AS LongTermGoalProgram_idParent, \r");
            viewString.Append("\n            T.ReasonCancel AS LongTermGoalProgram_ReasonCancel, \r\n            T");
            viewString.Append(".IdMasterLongTermGoalProgram AS LongTermGoalProgram_idMasterLongTermGoalProgram,");
            viewString.Append(" \r\n            T.Header AS LongTermGoalProgram_Header, \r\n            T.HasAdditi");
            viewString.Append("onalNeed AS LongTermGoalProgram_HasAdditionalNeed, \r\n            True AS _from0\r");
            viewString.Append("\n        FROM DataContext.LongTermGoalProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView206()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_SystemGoalElement", "\r\n    SELECT VALUE -- Constructing LongTermGoalProgram_SystemGoalElement\r\n       " +
                    " [CodeFirstDatabaseSchema.LongTermGoalProgram_SystemGoalElement](T1.[LongTermGoa" +
                    "lProgram_SystemGoalElement.id], T1.[LongTermGoalProgram_SystemGoalElement.idOwne" +
                    "r], T1.[LongTermGoalProgram_SystemGoalElement.FromAnotherDocumentSE], T1.[LongTe" +
                    "rmGoalProgram_SystemGoalElement.idSystemGoal], T1.[LongTermGoalProgram_SystemGoa" +
                    "lElement.IsMainGoal], T1.[LongTermGoalProgram_SystemGoalElement.Code], T1.[LongT" +
                    "ermGoalProgram_SystemGoalElement.idElementTypeSystemGoal], T1.[LongTermGoalProgr" +
                    "am_SystemGoalElement.DateStart], T1.[LongTermGoalProgram_SystemGoalElement.DateE" +
                    "nd], T1.[LongTermGoalProgram_SystemGoalElement.idSBP], T1.[LongTermGoalProgram_S" +
                    "ystemGoalElement.idParent])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [L" +
                    "ongTermGoalProgram_SystemGoalElement.id], \r\n            T.IdOwner AS [LongTermGo" +
                    "alProgram_SystemGoalElement.idOwner], \r\n            T.FromAnotherDocumentSE AS [" +
                    "LongTermGoalProgram_SystemGoalElement.FromAnotherDocumentSE], \r\n            T.Id" +
                    "SystemGoal AS [LongTermGoalProgram_SystemGoalElement.idSystemGoal], \r\n          " +
                    "  T.IsMainGoal AS [LongTermGoalProgram_SystemGoalElement.IsMainGoal], \r\n        " +
                    "    T.Code AS [LongTermGoalProgram_SystemGoalElement.Code], \r\n            T.IdEl" +
                    "ementTypeSystemGoal AS [LongTermGoalProgram_SystemGoalElement.idElementTypeSyste" +
                    "mGoal], \r\n            T.DateStart AS [LongTermGoalProgram_SystemGoalElement.Date" +
                    "Start], \r\n            T.DateEnd AS [LongTermGoalProgram_SystemGoalElement.DateEn" +
                    "d], \r\n            T.IdSBP AS [LongTermGoalProgram_SystemGoalElement.idSBP], \r\n  " +
                    "          T.IdParent AS [LongTermGoalProgram_SystemGoalElement.idParent], \r\n    " +
                    "        True AS _from0\r\n        FROM DataContext.LongTermGoalProgram_SystemGoalE" +
                    "lement AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView207()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_GoalIndicator", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_GoalIndicator
        [CodeFirstDatabaseSchema.LongTermGoalProgram_GoalIndicator](T1.[LongTermGoalProgram_GoalIndicator.id], T1.[LongTermGoalProgram_GoalIndicator.idOwner], T1.[LongTermGoalProgram_GoalIndicator.idMaster], T1.[LongTermGoalProgram_GoalIndicator.idGoalIndicator])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_GoalIndicator.id], 
            T.IdOwner AS [LongTermGoalProgram_GoalIndicator.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_GoalIndicator.idMaster], 
            T.IdGoalIndicator AS [LongTermGoalProgram_GoalIndicator.idGoalIndicator], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_GoalIndicator_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView208()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_GoalIndicator_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_GoalIndicator_Value
        [CodeFirstDatabaseSchema.LongTermGoalProgram_GoalIndicator_Value](T1.[LongTermGoalProgram_GoalIndicator_Value.id], T1.[LongTermGoalProgram_GoalIndicator_Value.idHierarchyPeriod], T1.[LongTermGoalProgram_GoalIndicator_Value.Value], T1.[LongTermGoalProgram_GoalIndicator_Value.idOwner], T1.[LongTermGoalProgram_GoalIndicator_Value.idMaster])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_GoalIndicator_Value.id], 
            T.IdHierarchyPeriod AS [LongTermGoalProgram_GoalIndicator_Value.idHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_GoalIndicator_Value.Value], 
            T.IdOwner AS [LongTermGoalProgram_GoalIndicator_Value.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_GoalIndicator_Value.idMaster], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_GoalIndicator_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView209()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_Activity", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_Activity
        [CodeFirstDatabaseSchema.LongTermGoalProgram_Activity](T1.[LongTermGoalProgram_Activity.id], T1.[LongTermGoalProgram_Activity.idOwner], T1.[LongTermGoalProgram_Activity.idMaster], T1.[LongTermGoalProgram_Activity.idSBP], T1.[LongTermGoalProgram_Activity.idContingent], T1.[LongTermGoalProgram_Activity.idIndicatorActivity_Volume], T1.[LongTermGoalProgram_Activity.idActivity])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_Activity.id], 
            T.IdOwner AS [LongTermGoalProgram_Activity.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_Activity.idMaster], 
            T.IdSBP AS [LongTermGoalProgram_Activity.idSBP], 
            T.IdContingent AS [LongTermGoalProgram_Activity.idContingent], 
            T.IdIndicatorActivity_Volume AS [LongTermGoalProgram_Activity.idIndicatorActivity_Volume], 
            T.IdActivity AS [LongTermGoalProgram_Activity.idActivity], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_ActivityResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView210()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_ActivityResourceMaintenance", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ActivityResourceMaintenance
        [CodeFirstDatabaseSchema.LongTermGoalProgram_ActivityResourceMaintenance](T1.[LongTermGoalProgram_ActivityResourceMaintenance.id], T1.[LongTermGoalProgram_ActivityResourceMaintenance.idOwner], T1.[LongTermGoalProgram_ActivityResourceMaintenance.idMaster], T1.[LongTermGoalProgram_ActivityResourceMaintenance.idFinanceSource])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_ActivityResourceMaintenance.id], 
            T.IdOwner AS [LongTermGoalProgram_ActivityResourceMaintenance.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_ActivityResourceMaintenance.idMaster], 
            T.IdFinanceSource AS [LongTermGoalProgram_ActivityResourceMaintenance.idFinanceSource], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_ActivityResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_ActivityResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView211()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_ActivityResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ActivityResourceMaintenance_Value
        [CodeFirstDatabaseSchema.LongTermGoalProgram_ActivityResourceMaintenance_Value](T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.id], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.idHierarchyPeriod], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.Value], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.idOwner], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.idMaster], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.Value], 
            T.IdOwner AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_ActivityResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_IndicatorActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView212()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_IndicatorActivity", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_IndicatorActivity
        [CodeFirstDatabaseSchema.LongTermGoalProgram_IndicatorActivity](T1.[LongTermGoalProgram_IndicatorActivity.id], T1.[LongTermGoalProgram_IndicatorActivity.idOwner], T1.[LongTermGoalProgram_IndicatorActivity.idMaster], T1.[LongTermGoalProgram_IndicatorActivity.idIndicatorActivity])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_IndicatorActivity.id], 
            T.IdOwner AS [LongTermGoalProgram_IndicatorActivity.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_IndicatorActivity.idMaster], 
            T.IdIndicatorActivity AS [LongTermGoalProgram_IndicatorActivity.idIndicatorActivity], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_IndicatorActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_IndicatorActivity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView213()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_IndicatorActivity_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_IndicatorActivity_Value
        [CodeFirstDatabaseSchema.LongTermGoalProgram_IndicatorActivity_Value](T1.[LongTermGoalProgram_IndicatorActivity_Value.id], T1.[LongTermGoalProgram_IndicatorActivity_Value.idHierarchyPeriod], T1.[LongTermGoalProgram_IndicatorActivity_Value.Value], T1.[LongTermGoalProgram_IndicatorActivity_Value.idOwner], T1.[LongTermGoalProgram_IndicatorActivity_Value.idMaster], T1.[LongTermGoalProgram_IndicatorActivity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_IndicatorActivity_Value.id], 
            T.IdHierarchyPeriod AS [LongTermGoalProgram_IndicatorActivity_Value.idHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_IndicatorActivity_Value.Value], 
            T.IdOwner AS [LongTermGoalProgram_IndicatorActivity_Value.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_IndicatorActivity_Value.idMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_IndicatorActivity_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_IndicatorActivity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_Activity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView214()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_Activity_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_Activity_Value
        [CodeFirstDatabaseSchema.LongTermGoalProgram_Activity_Value](T1.[LongTermGoalProgram_Activity_Value.id], T1.[LongTermGoalProgram_Activity_Value.idHierarchyPeriod], T1.[LongTermGoalProgram_Activity_Value.Value], T1.[LongTermGoalProgram_Activity_Value.idOwner], T1.[LongTermGoalProgram_Activity_Value.idMaster], T1.[LongTermGoalProgram_Activity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_Activity_Value.id], 
            T.IdHierarchyPeriod AS [LongTermGoalProgram_Activity_Value.idHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_Activity_Value.Value], 
            T.IdOwner AS [LongTermGoalProgram_Activity_Value.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_Activity_Value.idMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_Activity_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_Activity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_CoExecutor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView215()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_CoExecutor", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_CoExecutor
        [CodeFirstDatabaseSchema.LongTermGoalProgram_CoExecutor](T1.[LongTermGoalProgram_CoExecutor.id], T1.[LongTermGoalProgram_CoExecutor.idOwner], T1.[LongTermGoalProgram_CoExecutor.idSBP], T1.[LongTermGoalProgram_CoExecutor.idResponsibleExecutantType])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_CoExecutor.id], 
            T.IdOwner AS [LongTermGoalProgram_CoExecutor.idOwner], 
            T.IdSBP AS [LongTermGoalProgram_CoExecutor.idSBP], 
            T.IdResponsibleExecutantType AS [LongTermGoalProgram_CoExecutor.idResponsibleExecutantType], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_CoExecutor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView216()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_ResourceMaintenance", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ResourceMaintenance
        [CodeFirstDatabaseSchema.LongTermGoalProgram_ResourceMaintenance](T1.[LongTermGoalProgram_ResourceMaintenance.id], T1.[LongTermGoalProgram_ResourceMaintenance.idOwner], T1.[LongTermGoalProgram_ResourceMaintenance.idFinanceSource])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_ResourceMaintenance.id], 
            T.IdOwner AS [LongTermGoalProgram_ResourceMaintenance.idOwner], 
            T.IdFinanceSource AS [LongTermGoalProgram_ResourceMaintenance.idFinanceSource], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_ResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_ResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView217()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_ResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ResourceMaintenance_Value
        [CodeFirstDatabaseSchema.LongTermGoalProgram_ResourceMaintenance_Value](T1.[LongTermGoalProgram_ResourceMaintenance_Value.id], T1.[LongTermGoalProgram_ResourceMaintenance_Value.idHierarchyPeriod], T1.[LongTermGoalProgram_ResourceMaintenance_Value.Value], T1.[LongTermGoalProgram_ResourceMaintenance_Value.idOwner], T1.[LongTermGoalProgram_ResourceMaintenance_Value.idMaster], T1.[LongTermGoalProgram_ResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_ResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [LongTermGoalProgram_ResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_ResourceMaintenance_Value.Value], 
            T.IdOwner AS [LongTermGoalProgram_ResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_ResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_ResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_ResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_ListSubProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView218()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2074);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LongTermGoalProgram_ListSubProgram\r\n        [");
            viewString.Append("CodeFirstDatabaseSchema.LongTermGoalProgram_ListSubProgram](T1.[LongTermGoalProg");
            viewString.Append("ram_ListSubProgram.id], T1.[LongTermGoalProgram_ListSubProgram.idActualDocStatus");
            viewString.Append("], T1.[LongTermGoalProgram_ListSubProgram.idActualDocument], T1.[LongTermGoalPro");
            viewString.Append("gram_ListSubProgram.idOwner], T1.[LongTermGoalProgram_ListSubProgram.idAnalytica");
            viewString.Append("lCodeStateProgram], T1.[LongTermGoalProgram_ListSubProgram.idSBP], T1.[LongTermG");
            viewString.Append("oalProgram_ListSubProgram.idResponsibleExecutantType], T1.[LongTermGoalProgram_L");
            viewString.Append("istSubProgram.idSystemGoal], T1.[LongTermGoalProgram_ListSubProgram.DateStart], ");
            viewString.Append("T1.[LongTermGoalProgram_ListSubProgram.DateEnd], T1.[LongTermGoalProgram_ListSub");
            viewString.Append("Program.Caption], T1.[LongTermGoalProgram_ListSubProgram.idDocument], T1.[LongTe");
            viewString.Append("rmGoalProgram_ListSubProgram.idDocumentEntity])\r\n    FROM (\r\n        SELECT \r\n  ");
            viewString.Append("          T.Id AS [LongTermGoalProgram_ListSubProgram.id], \r\n            T.IdAct");
            viewString.Append("ualDocStatus AS [LongTermGoalProgram_ListSubProgram.idActualDocStatus], \r\n      ");
            viewString.Append("      T.IdActualDocument AS [LongTermGoalProgram_ListSubProgram.idActualDocument");
            viewString.Append("], \r\n            T.IdOwner AS [LongTermGoalProgram_ListSubProgram.idOwner], \r\n  ");
            viewString.Append("          T.IdAnalyticalCodeStateProgram AS [LongTermGoalProgram_ListSubProgram.");
            viewString.Append("idAnalyticalCodeStateProgram], \r\n            T.IdSBP AS [LongTermGoalProgram_Lis");
            viewString.Append("tSubProgram.idSBP], \r\n            T.IdResponsibleExecutantType AS [LongTermGoalP");
            viewString.Append("rogram_ListSubProgram.idResponsibleExecutantType], \r\n            T.IdSystemGoal ");
            viewString.Append("AS [LongTermGoalProgram_ListSubProgram.idSystemGoal], \r\n            T.DateStart ");
            viewString.Append("AS [LongTermGoalProgram_ListSubProgram.DateStart], \r\n            T.DateEnd AS [L");
            viewString.Append("ongTermGoalProgram_ListSubProgram.DateEnd], \r\n            T.Caption AS [LongTerm");
            viewString.Append("GoalProgram_ListSubProgram.Caption], \r\n            T.IdDocument AS [LongTermGoal");
            viewString.Append("Program_ListSubProgram.idDocument], \r\n            T.IdDocumentEntity AS [LongTer");
            viewString.Append("mGoalProgram_ListSubProgram.idDocumentEntity], \r\n            True AS _from0\r\n   ");
            viewString.Append("     FROM DataContext.LongTermGoalProgram_ListSubProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_ListSubProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_SubProgramResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView219()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_SubProgramResourceMaintenance", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_SubProgramResourceMaintenance
        [CodeFirstDatabaseSchema.LongTermGoalProgram_SubProgramResourceMaintenance](T1.[LongTermGoalProgram_SubProgramResourceMaintenance.id], T1.[LongTermGoalProgram_SubProgramResourceMaintenance.idOwner], T1.[LongTermGoalProgram_SubProgramResourceMaintenance.idMaster], T1.[LongTermGoalProgram_SubProgramResourceMaintenance.idFinanceSource])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_SubProgramResourceMaintenance.id], 
            T.IdOwner AS [LongTermGoalProgram_SubProgramResourceMaintenance.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_SubProgramResourceMaintenance.idMaster], 
            T.IdFinanceSource AS [LongTermGoalProgram_SubProgramResourceMaintenance.idFinanceSource], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_SubProgramResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LongTermGoalProgram_SubProgramResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView220()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LongTermGoalProgram_SubProgramResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_SubProgramResourceMaintenance_Value
        [CodeFirstDatabaseSchema.LongTermGoalProgram_SubProgramResourceMaintenance_Value](T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.id], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.idHierarchyPeriod], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.Value], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.idOwner], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.idMaster], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.Id AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.id], 
            T.IdHierarchyPeriod AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.idHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.Value], 
            T.IdOwner AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.idOwner], 
            T.IdMaster AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.idMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM DataContext.LongTermGoalProgram_SubProgramResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TaskVolume
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView221()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2445);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TaskVolume\r\n        [CodeFirstDatabaseSchema.");
            viewString.Append("TaskVolume](T1.TaskVolume_id, T1.TaskVolume_idExecutedOperation, T1.TaskVolume_i");
            viewString.Append("dTerminateOperation, T1.TaskVolume_idPublicLegalFormation, T1.TaskVolume_idVersi");
            viewString.Append("on, T1.TaskVolume_idBudget, T1.TaskVolume_idSBP, T1.TaskVolume_idProgram, T1.Tas");
            viewString.Append("kVolume_idSystemGoalElement, T1.TaskVolume_idTaskCollection, T1.[TaskVolume.idIn");
            viewString.Append("dicatorActivity_Volume], T1.TaskVolume_idHierarchyPeriod, T1.TaskVolume_idValueT");
            viewString.Append("ype, T1.TaskVolume_Value, T1.TaskVolume_idRegistrator, T1.TaskVolume_DateCommit,");
            viewString.Append(" T1.TaskVolume_idApproved, T1.TaskVolume_DateTerminate, T1.TaskVolume_idTerminat");
            viewString.Append("or, T1.TaskVolume_idRegistratorEntity, T1.TaskVolume_idApprovedEntity, T1.TaskVo");
            viewString.Append("lume_idTerminatorEntity, T1.TaskVolume_IsAdditionalNeed, T1.TaskVolume_ActivityA");
            viewString.Append("UBU, T1.TaskVolume_DateCreate)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS");
            viewString.Append(" TaskVolume_id, \r\n            T.IdExecutedOperation AS TaskVolume_idExecutedOper");
            viewString.Append("ation, \r\n            T.IdTerminateOperation AS TaskVolume_idTerminateOperation, ");
            viewString.Append("\r\n            T.IdPublicLegalFormation AS TaskVolume_idPublicLegalFormation, \r\n ");
            viewString.Append("           T.IdVersion AS TaskVolume_idVersion, \r\n            T.IdBudget AS Task");
            viewString.Append("Volume_idBudget, \r\n            T.IdSBP AS TaskVolume_idSBP, \r\n            T.IdPr");
            viewString.Append("ogram AS TaskVolume_idProgram, \r\n            T.IdSystemGoalElement AS TaskVolume");
            viewString.Append("_idSystemGoalElement, \r\n            T.IdTaskCollection AS TaskVolume_idTaskColle");
            viewString.Append("ction, \r\n            T.IdIndicatorActivity_Volume AS [TaskVolume.idIndicatorActi");
            viewString.Append("vity_Volume], \r\n            T.IdHierarchyPeriod AS TaskVolume_idHierarchyPeriod,");
            viewString.Append(" \r\n            T.IdValueType AS TaskVolume_idValueType, \r\n            T.[Value] ");
            viewString.Append("AS TaskVolume_Value, \r\n            T.IdRegistrator AS TaskVolume_idRegistrator, ");
            viewString.Append("\r\n            T.DateCommit AS TaskVolume_DateCommit, \r\n            T.IdApproved ");
            viewString.Append("AS TaskVolume_idApproved, \r\n            T.DateTerminate AS TaskVolume_DateTermin");
            viewString.Append("ate, \r\n            T.IdTerminator AS TaskVolume_idTerminator, \r\n            T.Id");
            viewString.Append("RegistratorEntity AS TaskVolume_idRegistratorEntity, \r\n            T.IdApprovedE");
            viewString.Append("ntity AS TaskVolume_idApprovedEntity, \r\n            T.IdTerminatorEntity AS Task");
            viewString.Append("Volume_idTerminatorEntity, \r\n            T.IsAdditionalNeed AS TaskVolume_IsAddi");
            viewString.Append("tionalNeed, \r\n            T.ActivityAUBU AS TaskVolume_ActivityAUBU, \r\n         ");
            viewString.Append("   T.DateCreate AS TaskVolume_DateCreate, \r\n            True AS _from0\r\n        ");
            viewString.Append("FROM DataContext.TaskVolume AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TaskVolume", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TaskIndicatorQuality
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView222()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2852);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TaskIndicatorQuality\r\n        [CodeFirstDatab");
            viewString.Append("aseSchema.TaskIndicatorQuality](T1.TaskIndicatorQuality_id, T1.TaskIndicatorQual");
            viewString.Append("ity_idExecutedOperation, T1.TaskIndicatorQuality_idTerminateOperation, T1.TaskIn");
            viewString.Append("dicatorQuality_idPublicLegalFormation, T1.TaskIndicatorQuality_idVersion, T1.Tas");
            viewString.Append("kIndicatorQuality_idBudget, T1.TaskIndicatorQuality_idSBP, T1.TaskIndicatorQuali");
            viewString.Append("ty_idProgram, T1.TaskIndicatorQuality_idTaskCollection, T1.[TaskIndicatorQuality");
            viewString.Append(".idIndicatorActivity_Quality], T1.TaskIndicatorQuality_idHierarchyPeriod, T1.Tas");
            viewString.Append("kIndicatorQuality_idValueType, T1.TaskIndicatorQuality_Value, T1.TaskIndicatorQu");
            viewString.Append("ality_idRegistrator, T1.TaskIndicatorQuality_DateCommit, T1.TaskIndicatorQuality");
            viewString.Append("_idApproved, T1.TaskIndicatorQuality_DateTerminate, T1.TaskIndicatorQuality_idTe");
            viewString.Append("rminator, T1.TaskIndicatorQuality_idRegistratorEntity, T1.TaskIndicatorQuality_i");
            viewString.Append("dApprovedEntity, T1.TaskIndicatorQuality_idTerminatorEntity, T1.TaskIndicatorQua");
            viewString.Append("lity_IsAdditionalNeed, T1.TaskIndicatorQuality_DateCreate, T1.TaskIndicatorQuali");
            viewString.Append("ty_ActivityAUBU)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS TaskIndicator");
            viewString.Append("Quality_id, \r\n            T.IdExecutedOperation AS TaskIndicatorQuality_idExecut");
            viewString.Append("edOperation, \r\n            T.IdTerminateOperation AS TaskIndicatorQuality_idTerm");
            viewString.Append("inateOperation, \r\n            T.IdPublicLegalFormation AS TaskIndicatorQuality_i");
            viewString.Append("dPublicLegalFormation, \r\n            T.IdVersion AS TaskIndicatorQuality_idVersi");
            viewString.Append("on, \r\n            T.IdBudget AS TaskIndicatorQuality_idBudget, \r\n            T.I");
            viewString.Append("dSBP AS TaskIndicatorQuality_idSBP, \r\n            T.IdProgram AS TaskIndicatorQu");
            viewString.Append("ality_idProgram, \r\n            T.IdTaskCollection AS TaskIndicatorQuality_idTask");
            viewString.Append("Collection, \r\n            T.IdIndicatorActivity_Quality AS [TaskIndicatorQuality");
            viewString.Append(".idIndicatorActivity_Quality], \r\n            T.IdHierarchyPeriod AS TaskIndicato");
            viewString.Append("rQuality_idHierarchyPeriod, \r\n            T.IdValueType AS TaskIndicatorQuality_");
            viewString.Append("idValueType, \r\n            T.[Value] AS TaskIndicatorQuality_Value, \r\n          ");
            viewString.Append("  T.IdRegistrator AS TaskIndicatorQuality_idRegistrator, \r\n            T.DateCom");
            viewString.Append("mit AS TaskIndicatorQuality_DateCommit, \r\n            T.IdApproved AS TaskIndica");
            viewString.Append("torQuality_idApproved, \r\n            T.DateTerminate AS TaskIndicatorQuality_Dat");
            viewString.Append("eTerminate, \r\n            T.IdTerminator AS TaskIndicatorQuality_idTerminator, \r");
            viewString.Append("\n            T.IdRegistratorEntity AS TaskIndicatorQuality_idRegistratorEntity, ");
            viewString.Append("\r\n            T.IdApprovedEntity AS TaskIndicatorQuality_idApprovedEntity, \r\n   ");
            viewString.Append("         T.IdTerminatorEntity AS TaskIndicatorQuality_idTerminatorEntity, \r\n    ");
            viewString.Append("        T.IsAdditionalNeed AS TaskIndicatorQuality_IsAdditionalNeed, \r\n         ");
            viewString.Append("   T.DateCreate AS TaskIndicatorQuality_DateCreate, \r\n            T.ActivityAUBU");
            viewString.Append(" AS TaskIndicatorQuality_ActivityAUBU, \r\n            True AS _from0\r\n        FRO");
            viewString.Append("M DataContext.TaskIndicatorQuality AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TaskIndicatorQuality", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RuleReferExpenceAsRoByKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView223()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RuleReferExpenceAsRoByKOSGU", @"
    SELECT VALUE -- Constructing RuleReferExpenceAsRoByKOSGU
        [CodeFirstDatabaseSchema.RuleReferExpenceAsRoByKOSGU](T1.RuleReferExpenceAsRoByKOSGU_id, T1.RuleReferExpenceAsRoByKOSGU_idAuthorityOfExpenseObligation, T1.RuleReferExpenceAsRoByKOSGU_idKOSGU, T1.RuleReferExpenceAsRoByKOSGU_idRefStatus)
    FROM (
        SELECT 
            T.Id AS RuleReferExpenceAsRoByKOSGU_id, 
            T.IdAuthorityOfExpenseObligation AS RuleReferExpenceAsRoByKOSGU_idAuthorityOfExpenseObligation, 
            T.IdKOSGU AS RuleReferExpenceAsRoByKOSGU_idKOSGU, 
            T.IdRefStatus AS RuleReferExpenceAsRoByKOSGU_idRefStatus, 
            True AS _from0
        FROM DataContext.RuleReferExpenceAsRoByKOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView224()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2777);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate\r\n        [CodeFirst");
            viewString.Append("DatabaseSchema.PublicInstitutionEstimate](T1.PublicInstitutionEstimate_id, T1.[P");
            viewString.Append("ublicInstitutionEstimate.idSBP_BlankActual], T1.[PublicInstitutionEstimate.idSBP");
            viewString.Append("_BlankActualAuBu], T1.PublicInstitutionEstimate_Caption, T1.PublicInstitutionEst");
            viewString.Append("imate_idPublicLegalFormation, T1.PublicInstitutionEstimate_idBudget, T1.PublicIn");
            viewString.Append("stitutionEstimate_idVersion, T1.PublicInstitutionEstimate_Number, T1.PublicInsti");
            viewString.Append("tutionEstimate_Date, T1.PublicInstitutionEstimate_idSBP, T1.PublicInstitutionEst");
            viewString.Append("imate_Description, T1.PublicInstitutionEstimate_idParent, T1.PublicInstitutionEs");
            viewString.Append("timate_ReasonCancel, T1.PublicInstitutionEstimate_isRequireClarification, T1.Pub");
            viewString.Append("licInstitutionEstimate_ReasonClarification, T1.PublicInstitutionEstimate_DateTer");
            viewString.Append("minate, T1.PublicInstitutionEstimate_ReasonTerminate, T1.PublicInstitutionEstima");
            viewString.Append("te_DateCommit, T1.PublicInstitutionEstimate_DateLastEdit, T1.PublicInstitutionEs");
            viewString.Append("timate_isApproved, T1.PublicInstitutionEstimate_idDocStatus, T1.PublicInstitutio");
            viewString.Append("nEstimate_HasAdditionalNeed)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS P");
            viewString.Append("ublicInstitutionEstimate_id, \r\n            T.IdSBP_BlankActual AS [PublicInstitu");
            viewString.Append("tionEstimate.idSBP_BlankActual], \r\n            T.IdSBP_BlankActualAuBu AS [Publi");
            viewString.Append("cInstitutionEstimate.idSBP_BlankActualAuBu], \r\n            T.Caption AS PublicIn");
            viewString.Append("stitutionEstimate_Caption, \r\n            T.IdPublicLegalFormation AS PublicInsti");
            viewString.Append("tutionEstimate_idPublicLegalFormation, \r\n            T.IdBudget AS PublicInstitu");
            viewString.Append("tionEstimate_idBudget, \r\n            T.IdVersion AS PublicInstitutionEstimate_id");
            viewString.Append("Version, \r\n            T.Number AS PublicInstitutionEstimate_Number, \r\n         ");
            viewString.Append("   T.Date AS PublicInstitutionEstimate_Date, \r\n            T.IdSBP AS PublicInst");
            viewString.Append("itutionEstimate_idSBP, \r\n            T.Description AS PublicInstitutionEstimate_");
            viewString.Append("Description, \r\n            T.IdParent AS PublicInstitutionEstimate_idParent, \r\n ");
            viewString.Append("           T.ReasonCancel AS PublicInstitutionEstimate_ReasonCancel, \r\n         ");
            viewString.Append("   T.IsRequireClarification AS PublicInstitutionEstimate_isRequireClarification,");
            viewString.Append(" \r\n            T.ReasonClarification AS PublicInstitutionEstimate_ReasonClarific");
            viewString.Append("ation, \r\n            T.DateTerminate AS PublicInstitutionEstimate_DateTerminate,");
            viewString.Append(" \r\n            T.ReasonTerminate AS PublicInstitutionEstimate_ReasonTerminate, \r");
            viewString.Append("\n            T.DateCommit AS PublicInstitutionEstimate_DateCommit, \r\n           ");
            viewString.Append(" T.DateLastEdit AS PublicInstitutionEstimate_DateLastEdit, \r\n            T.IsApp");
            viewString.Append("roved AS PublicInstitutionEstimate_isApproved, \r\n            T.IdDocStatus AS Pu");
            viewString.Append("blicInstitutionEstimate_idDocStatus, \r\n            T.HasAdditionalNeed AS Public");
            viewString.Append("InstitutionEstimate_HasAdditionalNeed, \r\n            True AS _from0\r\n        FRO");
            viewString.Append("M DataContext.PublicInstitutionEstimate AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView225()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_Activity", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_Activity
        [CodeFirstDatabaseSchema.PublicInstitutionEstimate_Activity](T1.[PublicInstitutionEstimate_Activity.id], T1.[PublicInstitutionEstimate_Activity.idOwner], T1.[PublicInstitutionEstimate_Activity.idActivity], T1.[PublicInstitutionEstimate_Activity.idContingent], T1.[PublicInstitutionEstimate_Activity.idIndicatorActivity], T1.[PublicInstitutionEstimate_Activity.idUnitDimension])
    FROM (
        SELECT 
            T.Id AS [PublicInstitutionEstimate_Activity.id], 
            T.IdOwner AS [PublicInstitutionEstimate_Activity.idOwner], 
            T.IdActivity AS [PublicInstitutionEstimate_Activity.idActivity], 
            T.IdContingent AS [PublicInstitutionEstimate_Activity.idContingent], 
            T.IdIndicatorActivity AS [PublicInstitutionEstimate_Activity.idIndicatorActivity], 
            T.IdUnitDimension AS [PublicInstitutionEstimate_Activity.idUnitDimension], 
            True AS _from0
        FROM DataContext.PublicInstitutionEstimate_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_Expense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView226()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3647);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_Expense\r\n        [C");
            viewString.Append("odeFirstDatabaseSchema.PublicInstitutionEstimate_Expense](T1.[PublicInstitutionE");
            viewString.Append("stimate_Expense.id], T1.[PublicInstitutionEstimate_Expense.idOwner], T1.[PublicI");
            viewString.Append("nstitutionEstimate_Expense.idMaster], T1.[PublicInstitutionEstimate_Expense.isIn");
            viewString.Append("directCosts], T1.[PublicInstitutionEstimate_Expense.idExpenseObligationType], T1");
            viewString.Append(".[PublicInstitutionEstimate_Expense.idKFO], T1.[PublicInstitutionEstimate_Expens");
            viewString.Append("e.idKVSR], T1.[PublicInstitutionEstimate_Expense.idRZPR], T1.[PublicInstitutionE");
            viewString.Append("stimate_Expense.idKCSR], T1.[PublicInstitutionEstimate_Expense.idKVR], T1.[Publi");
            viewString.Append("cInstitutionEstimate_Expense.idKOSGU], T1.[PublicInstitutionEstimate_Expense.idD");
            viewString.Append("FK], T1.[PublicInstitutionEstimate_Expense.idDKR], T1.[PublicInstitutionEstimate");
            viewString.Append("_Expense.idDEK], T1.[PublicInstitutionEstimate_Expense.idOKATO], T1.[PublicInsti");
            viewString.Append("tutionEstimate_Expense.OFG], T1.[PublicInstitutionEstimate_Expense.PFG1], T1.[Pu");
            viewString.Append("blicInstitutionEstimate_Expense.PFG2], T1.[PublicInstitutionEstimate_Expense.idA");
            viewString.Append("uthorityOfExpenseObligation], T1.[PublicInstitutionEstimate_Expense.idIndirectCo");
            viewString.Append("stsDistributionMethod], T1.[PublicInstitutionEstimate_Expense.idFinanceSource], ");
            viewString.Append("T1.[PublicInstitutionEstimate_Expense.AdditionalOFG], T1.[PublicInstitutionEstim");
            viewString.Append("ate_Expense.AdditionalPFG1], T1.[PublicInstitutionEstimate_Expense.AdditionalPFG");
            viewString.Append("2], T1.[PublicInstitutionEstimate_Expense.idCodeSubsidy], T1.[PublicInstitutionE");
            viewString.Append("stimate_Expense.idBranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS");
            viewString.Append(" [PublicInstitutionEstimate_Expense.id], \r\n            T.IdOwner AS [PublicInsti");
            viewString.Append("tutionEstimate_Expense.idOwner], \r\n            T.IdMaster AS [PublicInstitutionE");
            viewString.Append("stimate_Expense.idMaster], \r\n            T.IsIndirectCosts AS [PublicInstitution");
            viewString.Append("Estimate_Expense.isIndirectCosts], \r\n            T.IdExpenseObligationType AS [P");
            viewString.Append("ublicInstitutionEstimate_Expense.idExpenseObligationType], \r\n            T.IdKFO");
            viewString.Append(" AS [PublicInstitutionEstimate_Expense.idKFO], \r\n            T.IdKVSR AS [Public");
            viewString.Append("InstitutionEstimate_Expense.idKVSR], \r\n            T.IdRZPR AS [PublicInstitutio");
            viewString.Append("nEstimate_Expense.idRZPR], \r\n            T.IdKCSR AS [PublicInstitutionEstimate_");
            viewString.Append("Expense.idKCSR], \r\n            T.IdKVR AS [PublicInstitutionEstimate_Expense.idK");
            viewString.Append("VR], \r\n            T.IdKOSGU AS [PublicInstitutionEstimate_Expense.idKOSGU], \r\n ");
            viewString.Append("           T.IdDFK AS [PublicInstitutionEstimate_Expense.idDFK], \r\n            T");
            viewString.Append(".IdDKR AS [PublicInstitutionEstimate_Expense.idDKR], \r\n            T.IdDEK AS [P");
            viewString.Append("ublicInstitutionEstimate_Expense.idDEK], \r\n            T.IdOKATO AS [PublicInsti");
            viewString.Append("tutionEstimate_Expense.idOKATO], \r\n            T.OFG AS [PublicInstitutionEstima");
            viewString.Append("te_Expense.OFG], \r\n            T.PFG1 AS [PublicInstitutionEstimate_Expense.PFG1");
            viewString.Append("], \r\n            T.PFG2 AS [PublicInstitutionEstimate_Expense.PFG2], \r\n         ");
            viewString.Append("   T.IdAuthorityOfExpenseObligation AS [PublicInstitutionEstimate_Expense.idAuth");
            viewString.Append("orityOfExpenseObligation], \r\n            T.IdIndirectCostsDistributionMethod AS ");
            viewString.Append("[PublicInstitutionEstimate_Expense.idIndirectCostsDistributionMethod], \r\n       ");
            viewString.Append("     T.IdFinanceSource AS [PublicInstitutionEstimate_Expense.idFinanceSource], \r");
            viewString.Append("\n            T.AdditionalOFG AS [PublicInstitutionEstimate_Expense.AdditionalOFG");
            viewString.Append("], \r\n            T.AdditionalPFG1 AS [PublicInstitutionEstimate_Expense.Addition");
            viewString.Append("alPFG1], \r\n            T.AdditionalPFG2 AS [PublicInstitutionEstimate_Expense.Ad");
            viewString.Append("ditionalPFG2], \r\n            T.IdCodeSubsidy AS [PublicInstitutionEstimate_Expen");
            viewString.Append("se.idCodeSubsidy], \r\n            T.IdBranchCode AS [PublicInstitutionEstimate_Ex");
            viewString.Append("pense.idBranchCode], \r\n            True AS _from0\r\n        FROM DataContext.Publ");
            viewString.Append("icInstitutionEstimate_Expense AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_Expense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_DistributionActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView227()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2356);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_DistributionActivit");
            viewString.Append("y\r\n        [CodeFirstDatabaseSchema.PublicInstitutionEstimate_DistributionActivi");
            viewString.Append("ty](T1.[PublicInstitutionEstimate_DistributionActivity.id], T1.[PublicInstitutio");
            viewString.Append("nEstimate_DistributionActivity.idOwner], T1.[PublicInstitutionEstimate_Distribut");
            viewString.Append("ionActivity.idMaster], T1.[PublicInstitutionEstimate_DistributionActivity.idPubl");
            viewString.Append("icInstitutionEstimate_Activity], T1.[PublicInstitutionEstimate_DistributionActiv");
            viewString.Append("ity.DirectOFG], T1.[PublicInstitutionEstimate_DistributionActivity.DirectPFG1], ");
            viewString.Append("T1.[PublicInstitutionEstimate_DistributionActivity.DirectPFG2], T1.[PublicInstit");
            viewString.Append("utionEstimate_DistributionActivity.VolumeOFG], T1.[PublicInstitutionEstimate_Dis");
            viewString.Append("tributionActivity.VolumePFG1], T1.[PublicInstitutionEstimate_DistributionActivit");
            viewString.Append("y.VolumePFG2], T1.[PublicInstitutionEstimate_DistributionActivity.FactorOFG], T1");
            viewString.Append(".[PublicInstitutionEstimate_DistributionActivity.FactorPFG1], T1.[PublicInstitut");
            viewString.Append("ionEstimate_DistributionActivity.FactorPFG2])\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.Id AS [PublicInstitutionEstimate_DistributionActivity.id], \r\n         ");
            viewString.Append("   T.IdOwner AS [PublicInstitutionEstimate_DistributionActivity.idOwner], \r\n    ");
            viewString.Append("        T.IdMaster AS [PublicInstitutionEstimate_DistributionActivity.idMaster],");
            viewString.Append(" \r\n            T.IdPublicInstitutionEstimate_Activity AS [PublicInstitutionEstim");
            viewString.Append("ate_DistributionActivity.idPublicInstitutionEstimate_Activity], \r\n            T.");
            viewString.Append("DirectOFG AS [PublicInstitutionEstimate_DistributionActivity.DirectOFG], \r\n     ");
            viewString.Append("       T.DirectPFG1 AS [PublicInstitutionEstimate_DistributionActivity.DirectPFG");
            viewString.Append("1], \r\n            T.DirectPFG2 AS [PublicInstitutionEstimate_DistributionActivit");
            viewString.Append("y.DirectPFG2], \r\n            T.VolumeOFG AS [PublicInstitutionEstimate_Distribut");
            viewString.Append("ionActivity.VolumeOFG], \r\n            T.VolumePFG1 AS [PublicInstitutionEstimate");
            viewString.Append("_DistributionActivity.VolumePFG1], \r\n            T.VolumePFG2 AS [PublicInstitut");
            viewString.Append("ionEstimate_DistributionActivity.VolumePFG2], \r\n            T.FactorOFG AS [Publ");
            viewString.Append("icInstitutionEstimate_DistributionActivity.FactorOFG], \r\n            T.FactorPFG");
            viewString.Append("1 AS [PublicInstitutionEstimate_DistributionActivity.FactorPFG1], \r\n            ");
            viewString.Append("T.FactorPFG2 AS [PublicInstitutionEstimate_DistributionActivity.FactorPFG2], \r\n ");
            viewString.Append("           True AS _from0\r\n        FROM DataContext.PublicInstitutionEstimate_Di");
            viewString.Append("stributionActivity AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_DistributionActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_DistributionMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView228()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_DistributionMethod", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_DistributionMethod
        [CodeFirstDatabaseSchema.PublicInstitutionEstimate_DistributionMethod](T1.[PublicInstitutionEstimate_DistributionMethod.id], T1.[PublicInstitutionEstimate_DistributionMethod.idOwner], T1.[PublicInstitutionEstimate_DistributionMethod.idIndirectCostsDistributionMethod])
    FROM (
        SELECT 
            T.Id AS [PublicInstitutionEstimate_DistributionMethod.id], 
            T.IdOwner AS [PublicInstitutionEstimate_DistributionMethod.idOwner], 
            T.IdIndirectCostsDistributionMethod AS [PublicInstitutionEstimate_DistributionMethod.idIndirectCostsDistributionMethod], 
            True AS _from0
        FROM DataContext.PublicInstitutionEstimate_DistributionMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_DistributionAdditionalParam
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView229()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_DistributionAdditionalParam", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_DistributionAdditionalParam
        [CodeFirstDatabaseSchema.PublicInstitutionEstimate_DistributionAdditionalParam](T1.[PublicInstitutionEstimate_DistributionAdditionalParam.id], T1.[PublicInstitutionEstimate_DistributionAdditionalParam.idOwner], T1.[PublicInstitutionEstimate_DistributionAdditionalParam.idMaster], T1.[PublicInstitutionEstimate_DistributionAdditionalParam.idKOSGU])
    FROM (
        SELECT 
            T.Id AS [PublicInstitutionEstimate_DistributionAdditionalParam.id], 
            T.IdOwner AS [PublicInstitutionEstimate_DistributionAdditionalParam.idOwner], 
            T.IdMaster AS [PublicInstitutionEstimate_DistributionAdditionalParam.idMaster], 
            T.IdKOSGU AS [PublicInstitutionEstimate_DistributionAdditionalParam.idKOSGU], 
            True AS _from0
        FROM DataContext.PublicInstitutionEstimate_DistributionAdditionalParam AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_IndirectExpenses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView230()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2945);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_IndirectExpenses\r\n ");
            viewString.Append("       [CodeFirstDatabaseSchema.PublicInstitutionEstimate_IndirectExpenses](T1.[");
            viewString.Append("PublicInstitutionEstimate_IndirectExpenses.id], T1.[PublicInstitutionEstimate_In");
            viewString.Append("directExpenses.idOwner], T1.[PublicInstitutionEstimate_IndirectExpenses.idMaster");
            viewString.Append("], T1.[PublicInstitutionEstimate_IndirectExpenses.idExpenseObligationType], T1.[");
            viewString.Append("PublicInstitutionEstimate_IndirectExpenses.idFinanceSource], T1.[PublicInstituti");
            viewString.Append("onEstimate_IndirectExpenses.idKFO], T1.[PublicInstitutionEstimate_IndirectExpens");
            viewString.Append("es.idKVSR], T1.[PublicInstitutionEstimate_IndirectExpenses.idRZPR], T1.[PublicIn");
            viewString.Append("stitutionEstimate_IndirectExpenses.idKCSR], T1.[PublicInstitutionEstimate_Indire");
            viewString.Append("ctExpenses.idKVR], T1.[PublicInstitutionEstimate_IndirectExpenses.idKOSGU], T1.[");
            viewString.Append("PublicInstitutionEstimate_IndirectExpenses.idDFK], T1.[PublicInstitutionEstimate");
            viewString.Append("_IndirectExpenses.idDKR], T1.[PublicInstitutionEstimate_IndirectExpenses.idDEK],");
            viewString.Append(" T1.[PublicInstitutionEstimate_IndirectExpenses.OFG], T1.[PublicInstitutionEstim");
            viewString.Append("ate_IndirectExpenses.PFG1], T1.[PublicInstitutionEstimate_IndirectExpenses.PFG2]");
            viewString.Append(", T1.[PublicInstitutionEstimate_IndirectExpenses.idCodeSubsidy], T1.[PublicInsti");
            viewString.Append("tutionEstimate_IndirectExpenses.idBranchCode])\r\n    FROM (\r\n        SELECT \r\n   ");
            viewString.Append("         T.Id AS [PublicInstitutionEstimate_IndirectExpenses.id], \r\n            ");
            viewString.Append("T.IdOwner AS [PublicInstitutionEstimate_IndirectExpenses.idOwner], \r\n           ");
            viewString.Append(" T.IdMaster AS [PublicInstitutionEstimate_IndirectExpenses.idMaster], \r\n        ");
            viewString.Append("    T.IdExpenseObligationType AS [PublicInstitutionEstimate_IndirectExpenses.idE");
            viewString.Append("xpenseObligationType], \r\n            T.IdFinanceSource AS [PublicInstitutionEsti");
            viewString.Append("mate_IndirectExpenses.idFinanceSource], \r\n            T.IdKFO AS [PublicInstitut");
            viewString.Append("ionEstimate_IndirectExpenses.idKFO], \r\n            T.IdKVSR AS [PublicInstitutio");
            viewString.Append("nEstimate_IndirectExpenses.idKVSR], \r\n            T.IdRZPR AS [PublicInstitution");
            viewString.Append("Estimate_IndirectExpenses.idRZPR], \r\n            T.IdKCSR AS [PublicInstitutionE");
            viewString.Append("stimate_IndirectExpenses.idKCSR], \r\n            T.IdKVR AS [PublicInstitutionEst");
            viewString.Append("imate_IndirectExpenses.idKVR], \r\n            T.IdKOSGU AS [PublicInstitutionEsti");
            viewString.Append("mate_IndirectExpenses.idKOSGU], \r\n            T.IdDFK AS [PublicInstitutionEstim");
            viewString.Append("ate_IndirectExpenses.idDFK], \r\n            T.IdDKR AS [PublicInstitutionEstimate");
            viewString.Append("_IndirectExpenses.idDKR], \r\n            T.IdDEK AS [PublicInstitutionEstimate_In");
            viewString.Append("directExpenses.idDEK], \r\n            T.OFG AS [PublicInstitutionEstimate_Indirec");
            viewString.Append("tExpenses.OFG], \r\n            T.PFG1 AS [PublicInstitutionEstimate_IndirectExpen");
            viewString.Append("ses.PFG1], \r\n            T.PFG2 AS [PublicInstitutionEstimate_IndirectExpenses.P");
            viewString.Append("FG2], \r\n            T.IdCodeSubsidy AS [PublicInstitutionEstimate_IndirectExpens");
            viewString.Append("es.idCodeSubsidy], \r\n            T.IdBranchCode AS [PublicInstitutionEstimate_In");
            viewString.Append("directExpenses.idBranchCode], \r\n            True AS _from0\r\n        FROM DataCon");
            viewString.Append("text.PublicInstitutionEstimate_IndirectExpenses AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_IndirectExpenses", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_ActivityAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView231()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_ActivityAUBU", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_ActivityAUBU
        [CodeFirstDatabaseSchema.PublicInstitutionEstimate_ActivityAUBU](T1.[PublicInstitutionEstimate_ActivityAUBU.id], T1.[PublicInstitutionEstimate_ActivityAUBU.idOwner], T1.[PublicInstitutionEstimate_ActivityAUBU.idActivity], T1.[PublicInstitutionEstimate_ActivityAUBU.idContingent], T1.[PublicInstitutionEstimate_ActivityAUBU.idUnitDimension], T1.[PublicInstitutionEstimate_ActivityAUBU.idIndicatorActivity])
    FROM (
        SELECT 
            T.Id AS [PublicInstitutionEstimate_ActivityAUBU.id], 
            T.IdOwner AS [PublicInstitutionEstimate_ActivityAUBU.idOwner], 
            T.IdActivity AS [PublicInstitutionEstimate_ActivityAUBU.idActivity], 
            T.IdContingent AS [PublicInstitutionEstimate_ActivityAUBU.idContingent], 
            T.IdUnitDimension AS [PublicInstitutionEstimate_ActivityAUBU.idUnitDimension], 
            T.IdIndicatorActivity AS [PublicInstitutionEstimate_ActivityAUBU.idIndicatorActivity], 
            True AS _from0
        FROM DataContext.PublicInstitutionEstimate_ActivityAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_FounderAUBUExpense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView232()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3863);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_FounderAUBUExpense\r");
            viewString.Append("\n        [CodeFirstDatabaseSchema.PublicInstitutionEstimate_FounderAUBUExpense](");
            viewString.Append("T1.[PublicInstitutionEstimate_FounderAUBUExpense.id], T1.[PublicInstitutionEstim");
            viewString.Append("ate_FounderAUBUExpense.idOwner], T1.[PublicInstitutionEstimate_FounderAUBUExpens");
            viewString.Append("e.idMaster], T1.[PublicInstitutionEstimate_FounderAUBUExpense.idExpenseObligatio");
            viewString.Append("nType], T1.[PublicInstitutionEstimate_FounderAUBUExpense.idFinanceSource], T1.[P");
            viewString.Append("ublicInstitutionEstimate_FounderAUBUExpense.idKFO], T1.[PublicInstitutionEstimat");
            viewString.Append("e_FounderAUBUExpense.idKVSR], T1.[PublicInstitutionEstimate_FounderAUBUExpense.i");
            viewString.Append("dRZPR], T1.[PublicInstitutionEstimate_FounderAUBUExpense.idKCSR], T1.[PublicInst");
            viewString.Append("itutionEstimate_FounderAUBUExpense.idKVR], T1.[PublicInstitutionEstimate_Founder");
            viewString.Append("AUBUExpense.idKOSGU], T1.[PublicInstitutionEstimate_FounderAUBUExpense.idDFK], T");
            viewString.Append("1.[PublicInstitutionEstimate_FounderAUBUExpense.idDKR], T1.[PublicInstitutionEst");
            viewString.Append("imate_FounderAUBUExpense.idDEK], T1.[PublicInstitutionEstimate_FounderAUBUExpens");
            viewString.Append("e.isAUBU], T1.[PublicInstitutionEstimate_FounderAUBUExpense.OFG], T1.[PublicInst");
            viewString.Append("itutionEstimate_FounderAUBUExpense.PFG1], T1.[PublicInstitutionEstimate_FounderA");
            viewString.Append("UBUExpense.PFG2], T1.[PublicInstitutionEstimate_FounderAUBUExpense.idAuthorityOf");
            viewString.Append("ExpenseObligation], T1.[PublicInstitutionEstimate_FounderAUBUExpense.AdditionalO");
            viewString.Append("FG], T1.[PublicInstitutionEstimate_FounderAUBUExpense.AdditionalPFG1], T1.[Publi");
            viewString.Append("cInstitutionEstimate_FounderAUBUExpense.AdditionalPFG2], T1.[PublicInstitutionEs");
            viewString.Append("timate_FounderAUBUExpense.idBranchCode], T1.[PublicInstitutionEstimate_FounderAU");
            viewString.Append("BUExpense.idCodeSubsidy])\r\n    FROM (\r\n        SELECT \r\n            T.Id AS [Pub");
            viewString.Append("licInstitutionEstimate_FounderAUBUExpense.id], \r\n            T.IdOwner AS [Publi");
            viewString.Append("cInstitutionEstimate_FounderAUBUExpense.idOwner], \r\n            T.IdMaster AS [P");
            viewString.Append("ublicInstitutionEstimate_FounderAUBUExpense.idMaster], \r\n            T.IdExpense");
            viewString.Append("ObligationType AS [PublicInstitutionEstimate_FounderAUBUExpense.idExpenseObligat");
            viewString.Append("ionType], \r\n            T.IdFinanceSource AS [PublicInstitutionEstimate_FounderA");
            viewString.Append("UBUExpense.idFinanceSource], \r\n            T.IdKFO AS [PublicInstitutionEstimate");
            viewString.Append("_FounderAUBUExpense.idKFO], \r\n            T.IdKVSR AS [PublicInstitutionEstimate");
            viewString.Append("_FounderAUBUExpense.idKVSR], \r\n            T.IdRZPR AS [PublicInstitutionEstimat");
            viewString.Append("e_FounderAUBUExpense.idRZPR], \r\n            T.IdKCSR AS [PublicInstitutionEstima");
            viewString.Append("te_FounderAUBUExpense.idKCSR], \r\n            T.IdKVR AS [PublicInstitutionEstima");
            viewString.Append("te_FounderAUBUExpense.idKVR], \r\n            T.IdKOSGU AS [PublicInstitutionEstim");
            viewString.Append("ate_FounderAUBUExpense.idKOSGU], \r\n            T.IdDFK AS [PublicInstitutionEsti");
            viewString.Append("mate_FounderAUBUExpense.idDFK], \r\n            T.IdDKR AS [PublicInstitutionEstim");
            viewString.Append("ate_FounderAUBUExpense.idDKR], \r\n            T.IdDEK AS [PublicInstitutionEstima");
            viewString.Append("te_FounderAUBUExpense.idDEK], \r\n            T.IsAUBU AS [PublicInstitutionEstima");
            viewString.Append("te_FounderAUBUExpense.isAUBU], \r\n            T.OFG AS [PublicInstitutionEstimate");
            viewString.Append("_FounderAUBUExpense.OFG], \r\n            T.PFG1 AS [PublicInstitutionEstimate_Fou");
            viewString.Append("nderAUBUExpense.PFG1], \r\n            T.PFG2 AS [PublicInstitutionEstimate_Founde");
            viewString.Append("rAUBUExpense.PFG2], \r\n            T.IdAuthorityOfExpenseObligation AS [PublicIns");
            viewString.Append("titutionEstimate_FounderAUBUExpense.idAuthorityOfExpenseObligation], \r\n         ");
            viewString.Append("   T.AdditionalOFG AS [PublicInstitutionEstimate_FounderAUBUExpense.AdditionalOF");
            viewString.Append("G], \r\n            T.AdditionalPFG1 AS [PublicInstitutionEstimate_FounderAUBUExpe");
            viewString.Append("nse.AdditionalPFG1], \r\n            T.AdditionalPFG2 AS [PublicInstitutionEstimat");
            viewString.Append("e_FounderAUBUExpense.AdditionalPFG2], \r\n            T.IdBranchCode AS [PublicIns");
            viewString.Append("titutionEstimate_FounderAUBUExpense.idBranchCode], \r\n            T.IdCodeSubsidy");
            viewString.Append(" AS [PublicInstitutionEstimate_FounderAUBUExpense.idCodeSubsidy], \r\n            ");
            viewString.Append("True AS _from0\r\n        FROM DataContext.PublicInstitutionEstimate_FounderAUBUEx");
            viewString.Append("pense AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_FounderAUBUExpense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView233()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4171);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_AloneAndBudgetInsti");
            viewString.Append("tutionExpense\r\n        [CodeFirstDatabaseSchema.PublicInstitutionEstimate_AloneA");
            viewString.Append("ndBudgetInstitutionExpense](T1.[PublicInstitutionEstimate_AloneAndBudgetInstitut");
            viewString.Append("ionExpense.id], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.i");
            viewString.Append("dOwner], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idMaster");
            viewString.Append("], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idExpenseOblig");
            viewString.Append("ationType], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idFin");
            viewString.Append("anceSource], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idKF");
            viewString.Append("O], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idKVSR], T1.[");
            viewString.Append("PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idRZPR], T1.[PublicIn");
            viewString.Append("stitutionEstimate_AloneAndBudgetInstitutionExpense.idKCSR], T1.[PublicInstitutio");
            viewString.Append("nEstimate_AloneAndBudgetInstitutionExpense.idKVR], T1.[PublicInstitutionEstimate");
            viewString.Append("_AloneAndBudgetInstitutionExpense.idKOSGU], T1.[PublicInstitutionEstimate_AloneA");
            viewString.Append("ndBudgetInstitutionExpense.idDFK], T1.[PublicInstitutionEstimate_AloneAndBudgetI");
            viewString.Append("nstitutionExpense.idDKR], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutio");
            viewString.Append("nExpense.idDEK], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.");
            viewString.Append("idCodeSubsidy], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.O");
            viewString.Append("FG], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.PFG1], T1.[P");
            viewString.Append("ublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.PFG2], T1.[PublicInsti");
            viewString.Append("tutionEstimate_AloneAndBudgetInstitutionExpense.idBranchCode], T1.[PublicInstitu");
            viewString.Append("tionEstimate_AloneAndBudgetInstitutionExpense.additionalOFG], T1.[PublicInstitut");
            viewString.Append("ionEstimate_AloneAndBudgetInstitutionExpense.additionalPFG1], T1.[PublicInstitut");
            viewString.Append("ionEstimate_AloneAndBudgetInstitutionExpense.additionalPFG2])\r\n    FROM (\r\n     ");
            viewString.Append("   SELECT \r\n            T.Id AS [PublicInstitutionEstimate_AloneAndBudgetInstitu");
            viewString.Append("tionExpense.id], \r\n            T.IdOwner AS [PublicInstitutionEstimate_AloneAndB");
            viewString.Append("udgetInstitutionExpense.idOwner], \r\n            T.IdMaster AS [PublicInstitution");
            viewString.Append("Estimate_AloneAndBudgetInstitutionExpense.idMaster], \r\n            T.IdExpenseOb");
            viewString.Append("ligationType AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idEx");
            viewString.Append("penseObligationType], \r\n            T.IdFinanceSource AS [PublicInstitutionEstim");
            viewString.Append("ate_AloneAndBudgetInstitutionExpense.idFinanceSource], \r\n            T.IdKFO AS ");
            viewString.Append("[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idKFO], \r\n          ");
            viewString.Append("  T.IdKVSR AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idKVSR");
            viewString.Append("], \r\n            T.IdRZPR AS [PublicInstitutionEstimate_AloneAndBudgetInstitutio");
            viewString.Append("nExpense.idRZPR], \r\n            T.IdKCSR AS [PublicInstitutionEstimate_AloneAndB");
            viewString.Append("udgetInstitutionExpense.idKCSR], \r\n            T.IdKVR AS [PublicInstitutionEsti");
            viewString.Append("mate_AloneAndBudgetInstitutionExpense.idKVR], \r\n            T.IdKOSGU AS [Public");
            viewString.Append("InstitutionEstimate_AloneAndBudgetInstitutionExpense.idKOSGU], \r\n            T.I");
            viewString.Append("dDFK AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.idDFK], \r\n  ");
            viewString.Append("          T.IdDKR AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense");
            viewString.Append(".idDKR], \r\n            T.IdDEK AS [PublicInstitutionEstimate_AloneAndBudgetInsti");
            viewString.Append("tutionExpense.idDEK], \r\n            T.IdCodeSubsidy AS [PublicInstitutionEstimat");
            viewString.Append("e_AloneAndBudgetInstitutionExpense.idCodeSubsidy], \r\n            T.OFG AS [Publi");
            viewString.Append("cInstitutionEstimate_AloneAndBudgetInstitutionExpense.OFG], \r\n            T.PFG1");
            viewString.Append(" AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.PFG1], \r\n       ");
            viewString.Append("     T.PFG2 AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.PFG2]");
            viewString.Append(", \r\n            T.IdBranchCode AS [PublicInstitutionEstimate_AloneAndBudgetInsti");
            viewString.Append("tutionExpense.idBranchCode], \r\n            T.AdditionalOFG AS [PublicInstitution");
            viewString.Append("Estimate_AloneAndBudgetInstitutionExpense.additionalOFG], \r\n            T.Additi");
            viewString.Append("onalPFG1 AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.addition");
            viewString.Append("alPFG1], \r\n            T.AdditionalPFG2 AS [PublicInstitutionEstimate_AloneAndBu");
            viewString.Append("dgetInstitutionExpense.additionalPFG2], \r\n            True AS _from0\r\n        FR");
            viewString.Append("OM DataContext.PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.UserBandWidth
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView234()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.UserBandWidth", @"
    SELECT VALUE -- Constructing UserBandWidth
        [CodeFirstDatabaseSchema.UserBandWidth](T1.UserBandWidth_id, T1.UserBandWidth_idUser, T1.UserBandWidth_Ping, T1.UserBandWidth_DownloadSpeed, T1.UserBandWidth_Date)
    FROM (
        SELECT 
            T.Id AS UserBandWidth_id, 
            T.IdUser AS UserBandWidth_idUser, 
            T.Ping AS UserBandWidth_Ping, 
            T.DownloadSpeed AS UserBandWidth_DownloadSpeed, 
            T.Date AS UserBandWidth_Date, 
            True AS _from0
        FROM DataContext.UserBandWidth AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Control_Exceptions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView235()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Control_Exceptions", @"
    SELECT VALUE -- Constructing Control_Exceptions
        [CodeFirstDatabaseSchema.Control_Exceptions](T1.[Control_Exceptions.id], T1.[Control_Exceptions.idOwner], T1.[Control_Exceptions.idPublicLegalFormation], T1.[Control_Exceptions.idBudget], T1.[Control_Exceptions.Enabled], T1.[Control_Exceptions.Skippable])
    FROM (
        SELECT 
            T.Id AS [Control_Exceptions.id], 
            T.IdOwner AS [Control_Exceptions.idOwner], 
            T.IdPublicLegalFormation AS [Control_Exceptions.idPublicLegalFormation], 
            T.IdBudget AS [Control_Exceptions.idBudget], 
            T.Enabled AS [Control_Exceptions.Enabled], 
            T.Skippable AS [Control_Exceptions.Skippable], 
            True AS _from0
        FROM DataContext.Control_Exceptions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Control
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView236()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Control", @"
    SELECT VALUE -- Constructing Control
        [CodeFirstDatabaseSchema.Control](T1.Control_id, T1.Control_Enabled, T1.Control_Skippable, T1.Control_Name, T1.Control_Caption, T1.Control_UNK, T1.Control_idEntity, T1.Control_Managed)
    FROM (
        SELECT 
            T.Id AS Control_id, 
            T.Enabled AS Control_Enabled, 
            T.Skippable AS Control_Skippable, 
            T.Name AS Control_Name, 
            T.Caption AS Control_Caption, 
            T.UNK AS Control_UNK, 
            T.IdEntity AS Control_idEntity, 
            T.Managed AS Control_Managed, 
            True AS _from0
        FROM DataContext.Control AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.License
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView237()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.License", @"
    SELECT VALUE -- Constructing License
        [CodeFirstDatabaseSchema.License](T1.License_id, T1.License_Caption, T1.License_Key, T1.License_UserCount, T1.License_EndDate, T1.License_PublicLegalFormation, T1.License_IdRefStatus)
    FROM (
        SELECT 
            T.Id AS License_id, 
            T.Caption AS License_Caption, 
            T.[Key] AS License_Key, 
            T.UserCount AS License_UserCount, 
            T.EndDate AS License_EndDate, 
            T.PublicLegalFormation AS License_PublicLegalFormation, 
            T.IdRefStatus AS License_IdRefStatus, 
            True AS _from0
        FROM DataContext.Licenses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.StartedOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView238()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.StartedOperation", @"
    SELECT VALUE -- Constructing StartedOperation
        [CodeFirstDatabaseSchema.StartedOperation](T1.StartedOperation_id, T1.StartedOperation_idRegistratorEntity, T1.StartedOperation_idEntityOperation, T1.StartedOperation_idUser, T1.StartedOperation_idRegistrator, T1.StartedOperation_Date)
    FROM (
        SELECT 
            T.Id AS StartedOperation_id, 
            T.IdRegistratorEntity AS StartedOperation_idRegistratorEntity, 
            T.IdEntityOperation AS StartedOperation_idEntityOperation, 
            T.IdUser AS StartedOperation_idUser, 
            T.IdRegistrator AS StartedOperation_idRegistrator, 
            T.Date AS StartedOperation_Date, 
            True AS _from0
        FROM DataContext.StartedOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.OrganizationRightExtension
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView239()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.OrganizationRightExtension", @"
    SELECT VALUE -- Constructing OrganizationRightExtension
        [CodeFirstDatabaseSchema.OrganizationRightExtension](T1.OrganizationRightExtension_id, T1.OrganizationRightExtension_Description, T1.OrganizationRightExtension_idKind, T1.OrganizationRightExtension_SqlTemplate)
    FROM (
        SELECT 
            T.Id AS OrganizationRightExtension_id, 
            T.Description AS OrganizationRightExtension_Description, 
            T.IdKind AS OrganizationRightExtension_idKind, 
            T.SqlTemplate AS OrganizationRightExtension_SqlTemplate, 
            True AS _from0
        FROM DataContext.OrganizationRightExtension AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FormElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView240()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FormElement", @"
    SELECT VALUE -- Constructing FormElement
        [CodeFirstDatabaseSchema.FormElement](T1.FormElement_id, T1.FormElement_idParent, T1.FormElement_Name, T1.FormElement_idOwner, T1.FormElement_idEntityField, T1.FormElement_Caption, T1.FormElement_idInterfaceControl, T1.FormElement_idEntityFieldType, T1.FormElement_idCalculatedFieldType, T1.FormElement_Formula, T1.FormElement_Properties, T1.FormElement_Order)
    FROM (
        SELECT 
            T.Id AS FormElement_id, 
            T.IdParent AS FormElement_idParent, 
            T.Name AS FormElement_Name, 
            T.IdOwner AS FormElement_idOwner, 
            T.IdEntityField AS FormElement_idEntityField, 
            T.Caption AS FormElement_Caption, 
            T.IdInterfaceControl AS FormElement_idInterfaceControl, 
            T.IdEntityFieldType AS FormElement_idEntityFieldType, 
            T.IdCalculatedFieldType AS FormElement_idCalculatedFieldType, 
            T.Formula AS FormElement_Formula, 
            T.Properties AS FormElement_Properties, 
            T.[Order] AS FormElement_Order, 
            True AS _from0
        FROM DataContext.FormElement AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterfaceControl
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView241()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterfaceControl", @"
    SELECT VALUE -- Constructing InterfaceControl
        [CodeFirstDatabaseSchema.InterfaceControl](T1.InterfaceControl_Id, T1.InterfaceControl_Caption, T1.InterfaceControl_Description, T1.InterfaceControl_ComponentName, T1.InterfaceControl_Alias, T1.InterfaceControl_DefaultProperties, T1.InterfaceControl_LabelProperty)
    FROM (
        SELECT 
            T.Id AS InterfaceControl_Id, 
            T.Caption AS InterfaceControl_Caption, 
            T.Description AS InterfaceControl_Description, 
            T.ComponentName AS InterfaceControl_ComponentName, 
            T.Alias AS InterfaceControl_Alias, 
            T.DefaultProperties AS InterfaceControl_DefaultProperties, 
            T.LabelProperty AS InterfaceControl_LabelProperty, 
            True AS _from0
        FROM DataContext.InterfaceControl AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Form
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView242()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Form", @"
    SELECT VALUE -- Constructing Form
        [CodeFirstDatabaseSchema.Form](T1.Form_id, T1.Form_Name, T1.Form_Caption, T1.Form_idEntity, T1.Form_idHierarchyViewField)
    FROM (
        SELECT 
            T.Id AS Form_id, 
            T.Name AS Form_Name, 
            T.Caption AS Form_Caption, 
            T.IdEntity AS Form_idEntity, 
            T.IdHierarchyViewField AS Form_idHierarchyViewField, 
            True AS _from0
        FROM DataContext.Form AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.SerializedEntityItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView243()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.SerializedEntityItem", @"
    SELECT VALUE -- Constructing SerializedEntityItem
        [CodeFirstDatabaseSchema.SerializedEntityItem](T1.SerializedEntityItem_id, T1.SerializedEntityItem_Data, T1.SerializedEntityItem_idTool, T1.SerializedEntityItem_idToolEntity)
    FROM (
        SELECT 
            T.Id AS SerializedEntityItem_id, 
            T.Data AS SerializedEntityItem_Data, 
            T.IdTool AS SerializedEntityItem_idTool, 
            T.IdToolEntity AS SerializedEntityItem_idToolEntity, 
            True AS _from0
        FROM DataContext.SerializedEntityItem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EntitySetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView244()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EntitySetting", @"
    SELECT VALUE -- Constructing EntitySetting
        [CodeFirstDatabaseSchema.EntitySetting](T1.EntitySetting_id, T1.EntitySetting_idEntity, T1.EntitySetting_idItemForm, T1.EntitySetting_idListForm, T1.EntitySetting_idSelectionForm, T1.EntitySetting_AlwaysShowLinearly, T1.[EntitySetting.idEntityField_Hierarchy], T1.EntitySetting_ClassSelectionCaption)
    FROM (
        SELECT 
            T.Id AS EntitySetting_id, 
            T.IdEntity AS EntitySetting_idEntity, 
            T.IdItemForm AS EntitySetting_idItemForm, 
            T.IdListForm AS EntitySetting_idListForm, 
            T.IdSelectionForm AS EntitySetting_idSelectionForm, 
            T.AlwaysShowLinearly AS EntitySetting_AlwaysShowLinearly, 
            T.IdEntityField_Hierarchy AS [EntitySetting.idEntityField_Hierarchy], 
            T.ClassSelectionCaption AS EntitySetting_ClassSelectionCaption, 
            True AS _from0
        FROM DataContext.EntitySetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ItemsCaptionsForNavigationPanel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView245()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ItemsCaptionsForNavigationPanel", @"
    SELECT VALUE -- Constructing ItemsCaptionsForNavigationPanel
        [CodeFirstDatabaseSchema.ItemsCaptionsForNavigationPanel](T1.ItemsCaptionsForNavigationPanel_id, T1.ItemsCaptionsForNavigationPanel_Comment, T1.ItemsCaptionsForNavigationPanel_Caption, T1.ItemsCaptionsForNavigationPanel_idEntitySetting)
    FROM (
        SELECT 
            T.Id AS ItemsCaptionsForNavigationPanel_id, 
            T.Comment AS ItemsCaptionsForNavigationPanel_Comment, 
            T.Caption AS ItemsCaptionsForNavigationPanel_Caption, 
            T.IdEntitySetting AS ItemsCaptionsForNavigationPanel_idEntitySetting, 
            True AS _from0
        FROM DataContext.ItemsCaptionsForNavigationPanel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EntityFieldSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView246()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EntityFieldSetting", @"
    SELECT VALUE -- Constructing EntityFieldSetting
        [CodeFirstDatabaseSchema.EntityFieldSetting](T1.EntityFieldSetting_id, T1.EntityFieldSetting_IgnoreFilterByPublicLegalFormation, T1.EntityFieldSetting_IgnoreFilterByBudget, T1.EntityFieldSetting_IgnoreFilterByVersion, T1.EntityFieldSetting_idAggregateFunction, T1.EntityFieldSetting_idEntityField, T1.EntityFieldSetting_IgnoreOrganizationRights, T1.[EntityFieldSetting.idEntity_Owner])
    FROM (
        SELECT 
            T.Id AS EntityFieldSetting_id, 
            T.IgnoreFilterByPublicLegalFormation AS EntityFieldSetting_IgnoreFilterByPublicLegalFormation, 
            T.IgnoreFilterByBudget AS EntityFieldSetting_IgnoreFilterByBudget, 
            T.IgnoreFilterByVersion AS EntityFieldSetting_IgnoreFilterByVersion, 
            T.IdAggregateFunction AS EntityFieldSetting_idAggregateFunction, 
            T.IdEntityField AS EntityFieldSetting_idEntityField, 
            T.IgnoreOrganizationRights AS EntityFieldSetting_IgnoreOrganizationRights, 
            T.IdEntity_Owner AS [EntityFieldSetting.idEntity_Owner], 
            True AS _from0
        FROM DataContext.EntityFieldSetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateImport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView247()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateImport", @"
    SELECT VALUE -- Constructing TemplateImport
        [CodeFirstDatabaseSchema.TemplateImport](T1.TemplateImport_id, T1.TemplateImport_Caption)
    FROM (
        SELECT 
            T.Id AS TemplateImport_id, 
            T.Caption AS TemplateImport_Caption, 
            True AS _from0
        FROM DataContext.TemplateImport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateImportXLS
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView248()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateImportXLS", @"
    SELECT VALUE -- Constructing TemplateImportXLS
        [CodeFirstDatabaseSchema.TemplateImportXLS](T1.TemplateImportXLS_id, T1.TemplateImportXLS_idOwner, T1.TemplateImportXLS_Caption, T1.TemplateImportXLS_idEntity, T1.TemplateImportXLS_idImportType, T1.TemplateImportXLS_IsPerformSingleTransaction, T1.TemplateImportXLS_IsIgnoreSoftControl, T1.TemplateImportXLS_Description, T1.TemplateImportXLS_idAccessGroup, T1.TemplateImportXLS_idExecImportMode, T1.TemplateImportXLS_idRefStatus)
    FROM (
        SELECT 
            T.Id AS TemplateImportXLS_id, 
            T.IdOwner AS TemplateImportXLS_idOwner, 
            T.Caption AS TemplateImportXLS_Caption, 
            T.IdEntity AS TemplateImportXLS_idEntity, 
            T.IdImportType AS TemplateImportXLS_idImportType, 
            T.IsPerformSingleTransaction AS TemplateImportXLS_IsPerformSingleTransaction, 
            T.IsIgnoreSoftControl AS TemplateImportXLS_IsIgnoreSoftControl, 
            T.Description AS TemplateImportXLS_Description, 
            T.IdAccessGroup AS TemplateImportXLS_idAccessGroup, 
            T.IdExecImportMode AS TemplateImportXLS_idExecImportMode, 
            T.IdRefStatus AS TemplateImportXLS_idRefStatus, 
            True AS _from0
        FROM DataContext.TemplateImportXLS AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateImportXLS_FieldsMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView249()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateImportXLS_FieldsMap", @"
    SELECT VALUE -- Constructing TemplateImportXLS_FieldsMap
        [CodeFirstDatabaseSchema.TemplateImportXLS_FieldsMap](T1.[TemplateImportXLS_FieldsMap.id], T1.[TemplateImportXLS_FieldsMap.idOwner], T1.[TemplateImportXLS_FieldsMap.idEntityField], T1.[TemplateImportXLS_FieldsMap.NameColumn], T1.[TemplateImportXLS_FieldsMap.ValueColumn], T1.[TemplateImportXLS_FieldsMap.MaskFinding], T1.[TemplateImportXLS_FieldsMap.MaskReplacing])
    FROM (
        SELECT 
            T.Id AS [TemplateImportXLS_FieldsMap.id], 
            T.IdOwner AS [TemplateImportXLS_FieldsMap.idOwner], 
            T.IdEntityField AS [TemplateImportXLS_FieldsMap.idEntityField], 
            T.NameColumn AS [TemplateImportXLS_FieldsMap.NameColumn], 
            T.ValueColumn AS [TemplateImportXLS_FieldsMap.ValueColumn], 
            T.MaskFinding AS [TemplateImportXLS_FieldsMap.MaskFinding], 
            T.MaskReplacing AS [TemplateImportXLS_FieldsMap.MaskReplacing], 
            True AS _from0
        FROM DataContext.TemplateImportXLS_FieldsMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateImportXLS_KeyField
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView250()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateImportXLS_KeyField", @"
    SELECT VALUE -- Constructing TemplateImportXLS_KeyField
        [CodeFirstDatabaseSchema.TemplateImportXLS_KeyField](T1.[TemplateImportXLS_KeyField.id], T1.[TemplateImportXLS_KeyField.idOwner], T1.[TemplateImportXLS_KeyField.idEntityField])
    FROM (
        SELECT 
            T.Id AS [TemplateImportXLS_KeyField.id], 
            T.IdOwner AS [TemplateImportXLS_KeyField.idOwner], 
            T.IdEntityField AS [TemplateImportXLS_KeyField.idEntityField], 
            True AS _from0
        FROM DataContext.TemplateImportXLS_KeyField AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateExport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView251()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateExport", @"
    SELECT VALUE -- Constructing TemplateExport
        [CodeFirstDatabaseSchema.TemplateExport](T1.TemplateExport_id, T1.TemplateExport_Caption, T1.TemplateExport_idSelectionType, T1.TemplateExport_EntitiesSql, T1.TemplateExport_LinkedEntitiesSql, T1.TemplateExport_idLinkedSelectionType)
    FROM (
        SELECT 
            T.Id AS TemplateExport_id, 
            T.Caption AS TemplateExport_Caption, 
            T.IdSelectionType AS TemplateExport_idSelectionType, 
            T.EntitiesSql AS TemplateExport_EntitiesSql, 
            T.LinkedEntitiesSql AS TemplateExport_LinkedEntitiesSql, 
            T.IdLinkedSelectionType AS TemplateExport_idLinkedSelectionType, 
            True AS _from0
        FROM DataContext.TemplateExport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateExport_Entity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView252()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateExport_Entity", @"
    SELECT VALUE -- Constructing TemplateExport_Entity
        [CodeFirstDatabaseSchema.TemplateExport_Entity](T1.[TemplateExport_Entity.id], T1.[TemplateExport_Entity.idOwner], T1.[TemplateExport_Entity.idEntity], T1.[TemplateExport_Entity.Sql])
    FROM (
        SELECT 
            T.Id AS [TemplateExport_Entity.id], 
            T.IdOwner AS [TemplateExport_Entity.idOwner], 
            T.IdEntity AS [TemplateExport_Entity.idEntity], 
            T.Sql AS [TemplateExport_Entity.Sql], 
            True AS _from0
        FROM DataContext.TemplateExport_Entity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.UserRole
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView253()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.UserRole", @"
    SELECT VALUE -- Constructing UserRole
        [CodeFirstDatabaseSchema.UserRole](T1.UserRole_idUser, T1.UserRole_idRole)
    FROM (
        SELECT 
            Key(T.User_Roles_Source).Id AS UserRole_idUser, 
            Key(T.User_Roles_Target).Id AS UserRole_idRole, 
            True AS _from0
        FROM DataContext.User_Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EntityOperationDocStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView254()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EntityOperationDocStatus", @"
    SELECT VALUE -- Constructing EntityOperationDocStatus
        [CodeFirstDatabaseSchema.EntityOperationDocStatus](T1.EntityOperationDocStatus_idOperation, T1.EntityOperationDocStatus_idDocStatus)
    FROM (
        SELECT 
            Key(T.EntityOperation_OriginalStatus_Source).Id AS EntityOperationDocStatus_idOperation, 
            Key(T.EntityOperation_OriginalStatus_Target).Id AS EntityOperationDocStatus_idDocStatus, 
            True AS _from0
        FROM DataContext.EntityOperation_OriginalStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EntityOperationDocStatus1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView255()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EntityOperationDocStatus1", @"
    SELECT VALUE -- Constructing EntityOperationDocStatus1
        [CodeFirstDatabaseSchema.EntityOperationDocStatus1](T1.EntityOperationDocStatus1_idOperation, T1.EntityOperationDocStatus1_idDocStatus)
    FROM (
        SELECT 
            Key(T.EntityOperation_FinalStatus_Source).Id AS EntityOperationDocStatus1_idOperation, 
            Key(T.EntityOperation_FinalStatus_Target).Id AS EntityOperationDocStatus1_idDocStatus, 
            True AS _from0
        FROM DataContext.EntityOperation_FinalStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.EntityOperationEntityField
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView256()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.EntityOperationEntityField", @"
    SELECT VALUE -- Constructing EntityOperationEntityField
        [CodeFirstDatabaseSchema.EntityOperationEntityField](T1.EntityOperationEntityField_idEntityOperation, T1.EntityOperationEntityField_idEntityField)
    FROM (
        SELECT 
            Key(T.EntityOperation_EditableFields_Source).Id AS EntityOperationEntityField_idEntityOperation, 
            Key(T.EntityOperation_EditableFields_Target).Id AS EntityOperationEntityField_idEntityField, 
            True AS _from0
        FROM DataContext.EntityOperation_EditableFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.CalculationFormulaIndicatorCalculation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView257()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.CalculationFormulaIndicatorCalculation", @"
    SELECT VALUE -- Constructing CalculationFormulaIndicatorCalculation
        [CodeFirstDatabaseSchema.CalculationFormulaIndicatorCalculation](T1.CalculationFormulaIndicatorCalculation_idCalculationFormula, T1.CalculationFormulaIndicatorCalculation_idIndicatorCalculation)
    FROM (
        SELECT 
            Key(T.CalculationFormula_IdIndicatorOfCalculationFormula_Source).Id AS CalculationFormulaIndicatorCalculation_idCalculationFormula, 
            Key(T.CalculationFormula_IdIndicatorOfCalculationFormula_Target).Id AS CalculationFormulaIndicatorCalculation_idIndicatorCalculation, 
            True AS _from0
        FROM DataContext.CalculationFormula_IdIndicatorOfCalculationFormula AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.CategoryContingentContingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView258()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.CategoryContingentContingent", @"
    SELECT VALUE -- Constructing CategoryContingentContingent
        [CodeFirstDatabaseSchema.CategoryContingentContingent](T1.CategoryContingentContingent_idCategoryContingent, T1.CategoryContingentContingent_idContingent)
    FROM (
        SELECT 
            Key(T.CategoryContingent_Contingent_CategoryContingent_Source).Id AS CategoryContingentContingent_idCategoryContingent, 
            Key(T.CategoryContingent_Contingent_CategoryContingent_Target).Id AS CategoryContingentContingent_idContingent, 
            True AS _from0
        FROM DataContext.CategoryContingent_Contingent_CategoryContingent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivitySBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView259()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivitySBP", @"
    SELECT VALUE -- Constructing ActivitySBP
        [CodeFirstDatabaseSchema.ActivitySBP](T1.ActivitySBP_idActivity, T1.ActivitySBP_idSBP)
    FROM (
        SELECT 
            Key(T.Activity_Activity_SBP_Source).Id AS ActivitySBP_idActivity, 
            Key(T.Activity_Activity_SBP_Target).Id AS ActivitySBP_idSBP, 
            True AS _from0
        FROM DataContext.Activity_Activity_SBP AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ActivityContingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView260()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ActivityContingent", @"
    SELECT VALUE -- Constructing ActivityContingent
        [CodeFirstDatabaseSchema.ActivityContingent](T1.ActivityContingent_idActivity, T1.ActivityContingent_idContingent)
    FROM (
        SELECT 
            Key(T.Activity_Activity_Contingent_Source).Id AS ActivityContingent_idActivity, 
            Key(T.Activity_Activity_Contingent_Target).Id AS ActivityContingent_idContingent, 
            True AS _from0
        FROM DataContext.Activity_Activity_Contingent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ResourceMaintenanceOfTheStateProgramFinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView261()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ResourceMaintenanceOfTheStateProgramFinanceSource", @"
    SELECT VALUE -- Constructing ResourceMaintenanceOfTheStateProgramFinanceSource
        [CodeFirstDatabaseSchema.ResourceMaintenanceOfTheStateProgramFinanceSource](T1.ResourceMaintenanceOfTheStateProgramFinanceSource_idResourceMaintenanceOfTheStateProgram, T1.ResourceMaintenanceOfTheStateProgramFinanceSource_idFinanceSource)
    FROM (
        SELECT 
            Key(T.ResourceMaintenanceOfTheStateProgram_FinanceSource_Source).Id AS ResourceMaintenanceOfTheStateProgramFinanceSource_idResourceMaintenanceOfTheStateProgram, 
            Key(T.ResourceMaintenanceOfTheStateProgram_FinanceSource_Target).Id AS ResourceMaintenanceOfTheStateProgramFinanceSource_idFinanceSource, 
            True AS _from0
        FROM DataContext.ResourceMaintenanceOfTheStateProgram_FinanceSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.AnalysisBAofDirectAndIndirectCostSBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView262()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.AnalysisBAofDirectAndIndirectCostSBP", @"
    SELECT VALUE -- Constructing AnalysisBAofDirectAndIndirectCostSBP
        [CodeFirstDatabaseSchema.AnalysisBAofDirectAndIndirectCostSBP](T1.AnalysisBAofDirectAndIndirectCostSBP_idAnalysisBAofDirectAndIndirectCost, T1.AnalysisBAofDirectAndIndirectCostSBP_idSBP)
    FROM (
        SELECT 
            Key(T.AnalysisBAofDirectAndIndirectCost_SBPs_Source).Id AS AnalysisBAofDirectAndIndirectCostSBP_idAnalysisBAofDirectAndIndirectCost, 
            Key(T.AnalysisBAofDirectAndIndirectCost_SBPs_Target).Id AS AnalysisBAofDirectAndIndirectCostSBP_idSBP, 
            True AS _from0
        FROM DataContext.AnalysisBAofDirectAndIndirectCost_SBPs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Report1FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView263()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Report1FinanceSource", @"
    SELECT VALUE -- Constructing Report1FinanceSource
        [CodeFirstDatabaseSchema.Report1FinanceSource](T1.Report1FinanceSource_idReport1, T1.Report1FinanceSource_idFinanceSource)
    FROM (
        SELECT 
            Key(T.Report1_FinanceSource_Source).Id AS Report1FinanceSource_idReport1, 
            Key(T.Report1_FinanceSource_Target).Id AS Report1FinanceSource_idFinanceSource, 
            True AS _from0
        FROM DataContext.Report1_FinanceSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView264()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsoli" +
                    "datedExpenditure_BaseFilter", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter](T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Id], T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFilter_Id])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_BaseFilter_Source).Id AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Id], 
            Key(T.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_BaseFilter_Target).Id AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFilter_Id], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_BaseFilter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterDKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView265()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterDKR", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterDKR
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterDKR](T1.[ConsolidatedExpenditure_BaseFilterDKR.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterDKR.idDKR])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_DKR_Source).Id AS [ConsolidatedExpenditure_BaseFilterDKR.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_DKR_Target).Id AS [ConsolidatedExpenditure_BaseFilterDKR.idDKR], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_DKR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterDFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView266()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterDFK", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterDFK
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterDFK](T1.[ConsolidatedExpenditure_BaseFilterDFK.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterDFK.idDFK])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_DFK_Source).Id AS [ConsolidatedExpenditure_BaseFilterDFK.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_DFK_Target).Id AS [ConsolidatedExpenditure_BaseFilterDFK.idDFK], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_DFK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterDEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView267()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterDEK", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterDEK
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterDEK](T1.[ConsolidatedExpenditure_BaseFilterDEK.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterDEK.idDEK])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_DEK_Source).Id AS [ConsolidatedExpenditure_BaseFilterDEK.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_DEK_Target).Id AS [ConsolidatedExpenditure_BaseFilterDEK.idDEK], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_DEK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterFinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView268()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterFinanceSource", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterFinanceSource
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterFinanceSource](T1.[ConsolidatedExpenditure_BaseFilterFinanceSource.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterFinanceSource.idFinanceSource])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_FinanceSource_Source).Id AS [ConsolidatedExpenditure_BaseFilterFinanceSource.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_FinanceSource_Target).Id AS [ConsolidatedExpenditure_BaseFilterFinanceSource.idFinanceSource], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_FinanceSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView269()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKVR", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterKVR
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterKVR](T1.[ConsolidatedExpenditure_BaseFilterKVR.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterKVR.idKVR])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_KVR_Source).Id AS [ConsolidatedExpenditure_BaseFilterKVR.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_KVR_Target).Id AS [ConsolidatedExpenditure_BaseFilterKVR.idKVR], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_KVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView270()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKVSR", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterKVSR
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterKVSR](T1.[ConsolidatedExpenditure_BaseFilterKVSR.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterKVSR.idKVSR])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_KVSR_Source).Id AS [ConsolidatedExpenditure_BaseFilterKVSR.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_KVSR_Target).Id AS [ConsolidatedExpenditure_BaseFilterKVSR.idKVSR], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_KVSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterCodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView271()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterCodeSubsidy", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterCodeSubsidy
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterCodeSubsidy](T1.[ConsolidatedExpenditure_BaseFilterCodeSubsidy.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterCodeSubsidy.idCodeSubsidy])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_CodeSubsidy_Source).Id AS [ConsolidatedExpenditure_BaseFilterCodeSubsidy.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_CodeSubsidy_Target).Id AS [ConsolidatedExpenditure_BaseFilterCodeSubsidy.idCodeSubsidy], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_CodeSubsidy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView272()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKOSGU", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterKOSGU
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterKOSGU](T1.[ConsolidatedExpenditure_BaseFilterKOSGU.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterKOSGU.idKOSGU])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_KOSGU_Source).Id AS [ConsolidatedExpenditure_BaseFilterKOSGU.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_KOSGU_Target).Id AS [ConsolidatedExpenditure_BaseFilterKOSGU.idKOSGU], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_KOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView273()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKFO", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterKFO
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterKFO](T1.[ConsolidatedExpenditure_BaseFilterKFO.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterKFO.idKFO])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_KFO_Source).Id AS [ConsolidatedExpenditure_BaseFilterKFO.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_KFO_Target).Id AS [ConsolidatedExpenditure_BaseFilterKFO.idKFO], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_KFO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView274()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKCSR", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterKCSR
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterKCSR](T1.[ConsolidatedExpenditure_BaseFilterKCSR.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterKCSR.idKCSR])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_KCSR_Source).Id AS [ConsolidatedExpenditure_BaseFilterKCSR.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_KCSR_Target).Id AS [ConsolidatedExpenditure_BaseFilterKCSR.idKCSR], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_KCSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterBranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView275()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterBranchCode", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterBranchCode
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterBranchCode](T1.[ConsolidatedExpenditure_BaseFilterBranchCode.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterBranchCode.idBranchCode])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_BranchCode_Source).Id AS [ConsolidatedExpenditure_BaseFilterBranchCode.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_BranchCode_Target).Id AS [ConsolidatedExpenditure_BaseFilterBranchCode.idBranchCode], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_BranchCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterRZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView276()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterRZPR", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilterRZPR
        [CodeFirstDatabaseSchema.ConsolidatedExpenditure_BaseFilterRZPR](T1.[ConsolidatedExpenditure_BaseFilterRZPR.idConsolidatedExpenditure_BaseFilter], T1.[ConsolidatedExpenditure_BaseFilterRZPR.idRZPR])
    FROM (
        SELECT 
            Key(T.ConsolidatedExpenditure_BaseFilter_RZPR_Source).Id AS [ConsolidatedExpenditure_BaseFilterRZPR.idConsolidatedExpenditure_BaseFilter], 
            Key(T.ConsolidatedExpenditure_BaseFilter_RZPR_Target).Id AS [ConsolidatedExpenditure_BaseFilterRZPR.idRZPR], 
            True AS _from0
        FROM DataContext.ConsolidatedExpenditure_BaseFilter_RZPR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.JustificationOfBudgetListRemovedFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView277()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.JustificationOfBudgetListRemovedFields", @"
    SELECT VALUE -- Constructing JustificationOfBudgetListRemovedFields
        [CodeFirstDatabaseSchema.JustificationOfBudgetListRemovedFields](T1.JustificationOfBudgetListRemovedFields_idJustificationOfBudget, T1.JustificationOfBudgetListRemovedFields_idListRemovedFields)
    FROM (
        SELECT 
            Key(T.JustificationOfBudget_ListRemovedField_Source).Id AS JustificationOfBudgetListRemovedFields_idJustificationOfBudget, 
            Key(T.JustificationOfBudget_ListRemovedField_Target).Id AS JustificationOfBudgetListRemovedFields_idListRemovedFields, 
            True AS _from0
        FROM DataContext.JustificationOfBudget_ListRemovedField AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.JustificationOfBudgetRZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView278()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.JustificationOfBudgetRZPR", @"
    SELECT VALUE -- Constructing JustificationOfBudgetRZPR
        [CodeFirstDatabaseSchema.JustificationOfBudgetRZPR](T1.JustificationOfBudgetRZPR_idJustificationOfBudget, T1.JustificationOfBudgetRZPR_idRZPR)
    FROM (
        SELECT 
            Key(T.JustificationOfBudget_RZPR_Source).Id AS JustificationOfBudgetRZPR_idJustificationOfBudget, 
            Key(T.JustificationOfBudget_RZPR_Target).Id AS JustificationOfBudgetRZPR_idRZPR, 
            True AS _from0
        FROM DataContext.JustificationOfBudget_RZPR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.JustificationOfBudgetKCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView279()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.JustificationOfBudgetKCSR", @"
    SELECT VALUE -- Constructing JustificationOfBudgetKCSR
        [CodeFirstDatabaseSchema.JustificationOfBudgetKCSR](T1.JustificationOfBudgetKCSR_idJustificationOfBudget, T1.JustificationOfBudgetKCSR_idKCSR)
    FROM (
        SELECT 
            Key(T.JustificationOfBudget_KCSR_Source).Id AS JustificationOfBudgetKCSR_idJustificationOfBudget, 
            Key(T.JustificationOfBudget_KCSR_Target).Id AS JustificationOfBudgetKCSR_idKCSR, 
            True AS _from0
        FROM DataContext.JustificationOfBudget_KCSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.JustificationOfBudgetKVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView280()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.JustificationOfBudgetKVR", @"
    SELECT VALUE -- Constructing JustificationOfBudgetKVR
        [CodeFirstDatabaseSchema.JustificationOfBudgetKVR](T1.JustificationOfBudgetKVR_idJustificationOfBudget, T1.JustificationOfBudgetKVR_idKVR)
    FROM (
        SELECT 
            Key(T.JustificationOfBudget_KVR_Source).Id AS JustificationOfBudgetKVR_idJustificationOfBudget, 
            Key(T.JustificationOfBudget_KVR_Target).Id AS JustificationOfBudgetKVR_idKVR, 
            True AS _from0
        FROM DataContext.JustificationOfBudget_KVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.JustificationOfBudgetKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView281()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.JustificationOfBudgetKOSGU", @"
    SELECT VALUE -- Constructing JustificationOfBudgetKOSGU
        [CodeFirstDatabaseSchema.JustificationOfBudgetKOSGU](T1.JustificationOfBudgetKOSGU_idJustificationOfBudget, T1.JustificationOfBudgetKOSGU_idKOSGU)
    FROM (
        SELECT 
            Key(T.JustificationOfBudget_KOSGU_Source).Id AS JustificationOfBudgetKOSGU_idJustificationOfBudget, 
            Key(T.JustificationOfBudget_KOSGU_Target).Id AS JustificationOfBudgetKOSGU_idKOSGU, 
            True AS _from0
        FROM DataContext.JustificationOfBudget_KOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.JustificationOfBudgetAuthorityOfExpenseObligation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView282()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.JustificationOfBudgetAuthorityOfExpenseObligation", @"
    SELECT VALUE -- Constructing JustificationOfBudgetAuthorityOfExpenseObligation
        [CodeFirstDatabaseSchema.JustificationOfBudgetAuthorityOfExpenseObligation](T1.JustificationOfBudgetAuthorityOfExpenseObligation_idJustificationOfBudget, T1.JustificationOfBudgetAuthorityOfExpenseObligation_idAuthorityOfExpenseObligation)
    FROM (
        SELECT 
            Key(T.JustificationOfBudget_AuthorityOfExpenseObligation_Source).Id AS JustificationOfBudgetAuthorityOfExpenseObligation_idJustificationOfBudget, 
            Key(T.JustificationOfBudget_AuthorityOfExpenseObligation_Target).Id AS JustificationOfBudgetAuthorityOfExpenseObligation_idAuthorityOfExpenseObligation, 
            True AS _from0
        FROM DataContext.JustificationOfBudget_AuthorityOfExpenseObligation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers_RuleFilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView283()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers" +
                    "_RuleFilterKBK", @"
    SELECT VALUE -- Constructing IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers_RuleFilterKBK
        [CodeFirstDatabaseSchema.IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers_RuleFilterKBK](T1.[IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_ExpenseObligationTypeT_Id], T1.[IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers_RuleFilterKBK.InterBudgetaryTransfers_RuleFilterKBK_Id])
    FROM (
        SELECT 
            Key(T.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Source).Id AS [IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_ExpenseObligationTypeT_Id], 
            Key(T.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Target).Id AS [IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudgetaryTransfers_RuleFilterKBK.InterBudgetaryTransfers_RuleFilterKBK_Id], 
            True AS _from0
        FROM DataContext.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKBranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView284()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKBranchCode", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKBranchCode
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKBranchCode](T1.[InterBudgetaryTransfers_RuleFilterKBKBranchCode.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKBranchCode.idBranchCode])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKBranchCode.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKBranchCode.idBranchCode], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView285()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy](T1.[InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy.idCodeSubsidy])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKCodeSubsidy.idCodeSubsidy], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKDEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView286()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKDEK", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKDEK
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKDEK](T1.[InterBudgetaryTransfers_RuleFilterKBKDEK.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKDEK.idDEK])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_DEKs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKDEK.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_DEKs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKDEK.idDEK], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_DEKs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKDFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView287()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKDFK", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKDFK
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKDFK](T1.[InterBudgetaryTransfers_RuleFilterKBKDFK.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKDFK.idDFK])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_DFKs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKDFK.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_DFKs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKDFK.idDFK], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_DFKs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKDKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView288()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKDKR", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKDKR
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKDKR](T1.[InterBudgetaryTransfers_RuleFilterKBKDKR.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKDKR.idDKR])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_DKRs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKDKR.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_DKRs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKDKR.idDKR], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_DKRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKFinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView289()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKFinanceSource", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKFinanceSource
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKFinanceSource](T1.[InterBudgetaryTransfers_RuleFilterKBKFinanceSource.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKFinanceSource.idFinanceSource])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKFinanceSource.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKFinanceSource.idFinanceSource], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView290()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKCSR", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKKCSR
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKKCSR](T1.[InterBudgetaryTransfers_RuleFilterKBKKCSR.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKKCSR.idKCSR])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKKCSR.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKKCSR.idKCSR], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_KCSRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView291()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKFO", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKKFO
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKKFO](T1.[InterBudgetaryTransfers_RuleFilterKBKKFO.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKKFO.idKFO])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KFOs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKKFO.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KFOs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKKFO.idKFO], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_KFOs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView292()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKOSGU", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKKOSGU
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKKOSGU](T1.[InterBudgetaryTransfers_RuleFilterKBKKOSGU.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKKOSGU.idKOSGU])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKKOSGU.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKKOSGU.idKOSGU], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView293()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKVR", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKKVR
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKKVR](T1.[InterBudgetaryTransfers_RuleFilterKBKKVR.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKKVR.idKVR])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KVRs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKKVR.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KVRs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKKVR.idKVR], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_KVRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView294()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKVSR", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKKVSR
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKKVSR](T1.[InterBudgetaryTransfers_RuleFilterKBKKVSR.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKKVSR.idKVSR])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKKVSR.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKKVSR.idKVSR], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_KVSRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKRZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView295()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKRZPR", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBKRZPR
        [CodeFirstDatabaseSchema.InterBudgetaryTransfers_RuleFilterKBKRZPR](T1.[InterBudgetaryTransfers_RuleFilterKBKRZPR.idInterBudgetaryTransfers_RuleFilterKBK], T1.[InterBudgetaryTransfers_RuleFilterKBKRZPR.idRZPR])
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Source).Id AS [InterBudgetaryTransfers_RuleFilterKBKRZPR.idInterBudgetaryTransfers_RuleFilterKBK], 
            Key(T.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Target).Id AS [InterBudgetaryTransfers_RuleFilterKBKRZPR.idRZPR], 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_RuleFilterKBK_RZPRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.InterBudgetaryTransfersBudgetLevel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView296()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.InterBudgetaryTransfersBudgetLevel", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfersBudgetLevel
        [CodeFirstDatabaseSchema.InterBudgetaryTransfersBudgetLevel](T1.InterBudgetaryTransfersBudgetLevel_idInterBudgetaryTransfers, T1.InterBudgetaryTransfersBudgetLevel_BudgetLevel)
    FROM (
        SELECT 
            Key(T.InterBudgetaryTransfers_BudgetLevel_Source).Id AS InterBudgetaryTransfersBudgetLevel_idInterBudgetaryTransfers, 
            Key(T.InterBudgetaryTransfers_BudgetLevel_Target).Id AS InterBudgetaryTransfersBudgetLevel_BudgetLevel, 
            True AS _from0
        FROM DataContext.InterBudgetaryTransfers_BudgetLevel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.RegistryGoalElementTypeSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView297()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.RegistryGoalElementTypeSystemGoal", @"
    SELECT VALUE -- Constructing RegistryGoalElementTypeSystemGoal
        [CodeFirstDatabaseSchema.RegistryGoalElementTypeSystemGoal](T1.RegistryGoalElementTypeSystemGoal_idRegistryGoal, T1.RegistryGoalElementTypeSystemGoal_idElementTypeSystemGoal)
    FROM (
        SELECT 
            Key(T.RegistryGoal_ElementTypeSystemGoal_Source).Id AS RegistryGoalElementTypeSystemGoal_idRegistryGoal, 
            Key(T.RegistryGoal_ElementTypeSystemGoal_Target).Id AS RegistryGoalElementTypeSystemGoal_idElementTypeSystemGoal, 
            True AS _from0
        FROM DataContext.RegistryGoal_ElementTypeSystemGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStructure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView298()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetEx" +
                    "penseStructure_BaseFilter", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStructure_BaseFilter
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStructure_BaseFilter](T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_Id], T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFilter_Id])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Source).Id AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_Id], 
            Key(T.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Target).Id AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFilter_Id], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterFinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView299()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterFinanceSource", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterFinanceSource
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterFinanceSource](T1.[BudgetExpenseStructure_BaseFilterFinanceSource.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterFinanceSource.idFinanceSource])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_FinanceSource_Source).Id AS [BudgetExpenseStructure_BaseFilterFinanceSource.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_FinanceSource_Target).Id AS [BudgetExpenseStructure_BaseFilterFinanceSource.idFinanceSource], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_FinanceSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView300()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKFO", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterKFO
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterKFO](T1.[BudgetExpenseStructure_BaseFilterKFO.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterKFO.idKFO])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_KFO_Source).Id AS [BudgetExpenseStructure_BaseFilterKFO.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_KFO_Target).Id AS [BudgetExpenseStructure_BaseFilterKFO.idKFO], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_KFO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView301()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKVSR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterKVSR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterKVSR](T1.[BudgetExpenseStructure_BaseFilterKVSR.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterKVSR.idKVSR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_KVSR_Source).Id AS [BudgetExpenseStructure_BaseFilterKVSR.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_KVSR_Target).Id AS [BudgetExpenseStructure_BaseFilterKVSR.idKVSR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_KVSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterRZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView302()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterRZPR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterRZPR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterRZPR](T1.[BudgetExpenseStructure_BaseFilterRZPR.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterRZPR.idRZPR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_RZPR_Source).Id AS [BudgetExpenseStructure_BaseFilterRZPR.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_RZPR_Target).Id AS [BudgetExpenseStructure_BaseFilterRZPR.idRZPR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_RZPR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView303()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKCSR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterKCSR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterKCSR](T1.[BudgetExpenseStructure_BaseFilterKCSR.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterKCSR.idKCSR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_KCSR_Source).Id AS [BudgetExpenseStructure_BaseFilterKCSR.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_KCSR_Target).Id AS [BudgetExpenseStructure_BaseFilterKCSR.idKCSR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_KCSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView304()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKVR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterKVR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterKVR](T1.[BudgetExpenseStructure_BaseFilterKVR.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterKVR.idKVR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_KVR_Source).Id AS [BudgetExpenseStructure_BaseFilterKVR.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_KVR_Target).Id AS [BudgetExpenseStructure_BaseFilterKVR.idKVR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_KVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView305()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKOSGU", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterKOSGU
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterKOSGU](T1.[BudgetExpenseStructure_BaseFilterKOSGU.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterKOSGU.idKOSGU])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_KOSGU_Source).Id AS [BudgetExpenseStructure_BaseFilterKOSGU.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_KOSGU_Target).Id AS [BudgetExpenseStructure_BaseFilterKOSGU.idKOSGU], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_KOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView306()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDFK", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterDFK
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterDFK](T1.[BudgetExpenseStructure_BaseFilterDFK.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterDFK.idDFK])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_DFK_Source).Id AS [BudgetExpenseStructure_BaseFilterDFK.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_DFK_Target).Id AS [BudgetExpenseStructure_BaseFilterDFK.idDFK], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_DFK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView307()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDKR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterDKR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterDKR](T1.[BudgetExpenseStructure_BaseFilterDKR.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterDKR.idDKR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_DKR_Source).Id AS [BudgetExpenseStructure_BaseFilterDKR.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_DKR_Target).Id AS [BudgetExpenseStructure_BaseFilterDKR.idDKR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_DKR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView308()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDEK", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterDEK
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterDEK](T1.[BudgetExpenseStructure_BaseFilterDEK.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterDEK.idDEK])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_DEK_Source).Id AS [BudgetExpenseStructure_BaseFilterDEK.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_DEK_Target).Id AS [BudgetExpenseStructure_BaseFilterDEK.idDEK], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_DEK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterCodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView309()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterCodeSubsidy", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterCodeSubsidy
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterCodeSubsidy](T1.[BudgetExpenseStructure_BaseFilterCodeSubsidy.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterCodeSubsidy.idCodeSubsidy])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_CodeSubsidy_Source).Id AS [BudgetExpenseStructure_BaseFilterCodeSubsidy.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_CodeSubsidy_Target).Id AS [BudgetExpenseStructure_BaseFilterCodeSubsidy.idCodeSubsidy], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_CodeSubsidy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_BaseFilterBranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView310()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_BaseFilterBranchCode", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilterBranchCode
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_BaseFilterBranchCode](T1.[BudgetExpenseStructure_BaseFilterBranchCode.idBudgetExpenseStructure_BaseFilter], T1.[BudgetExpenseStructure_BaseFilterBranchCode.idBranchCode])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_BaseFilter_BranchCode_Source).Id AS [BudgetExpenseStructure_BaseFilterBranchCode.idBudgetExpenseStructure_BaseFilter], 
            Key(T.BudgetExpenseStructure_BaseFilter_BranchCode_Target).Id AS [BudgetExpenseStructure_BaseFilterBranchCode.idBranchCode], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_BaseFilter_BranchCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudgetExpenseStructure_CustomFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView311()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudget" +
                    "ExpenseStructure_CustomFilter", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudgetExpenseStructure_CustomFilter
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudgetExpenseStructure_CustomFilter](T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudgetExpenseStructure_CustomFilter.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_Id], T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudgetExpenseStructure_CustomFilter.BudgetExpenseStructure_CustomFilter_Id])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_Source).Id AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudgetExpenseStructure_CustomFilter.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_Id], 
            Key(T.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_Target).Id AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationTypeBudgetExpenseStructure_CustomFilter.BudgetExpenseStructure_CustomFilter_Id], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterFinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView312()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterFinanceSource", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterFinanceSource
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterFinanceSource](T1.[BudgetExpenseStructure_CustomFilterFinanceSource.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterFinanceSource.idFinanceSource])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_FinanceSource_Source).Id AS [BudgetExpenseStructure_CustomFilterFinanceSource.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_FinanceSource_Target).Id AS [BudgetExpenseStructure_CustomFilterFinanceSource.idFinanceSource], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_FinanceSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView313()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKFO", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterKFO
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterKFO](T1.[BudgetExpenseStructure_CustomFilterKFO.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterKFO.idKFO])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_KFO_Source).Id AS [BudgetExpenseStructure_CustomFilterKFO.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_KFO_Target).Id AS [BudgetExpenseStructure_CustomFilterKFO.idKFO], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_KFO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView314()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKVSR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterKVSR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterKVSR](T1.[BudgetExpenseStructure_CustomFilterKVSR.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterKVSR.idKVSR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_KVSR_Source).Id AS [BudgetExpenseStructure_CustomFilterKVSR.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_KVSR_Target).Id AS [BudgetExpenseStructure_CustomFilterKVSR.idKVSR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_KVSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterRZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView315()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterRZPR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterRZPR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterRZPR](T1.[BudgetExpenseStructure_CustomFilterRZPR.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterRZPR.idRZPR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_RZPR_Source).Id AS [BudgetExpenseStructure_CustomFilterRZPR.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_RZPR_Target).Id AS [BudgetExpenseStructure_CustomFilterRZPR.idRZPR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_RZPR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView316()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKCSR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterKCSR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterKCSR](T1.[BudgetExpenseStructure_CustomFilterKCSR.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterKCSR.idKCSR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_KCSR_Source).Id AS [BudgetExpenseStructure_CustomFilterKCSR.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_KCSR_Target).Id AS [BudgetExpenseStructure_CustomFilterKCSR.idKCSR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_KCSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView317()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKVR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterKVR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterKVR](T1.[BudgetExpenseStructure_CustomFilterKVR.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterKVR.idKVR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_KVR_Source).Id AS [BudgetExpenseStructure_CustomFilterKVR.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_KVR_Target).Id AS [BudgetExpenseStructure_CustomFilterKVR.idKVR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_KVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView318()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKOSGU", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterKOSGU
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterKOSGU](T1.[BudgetExpenseStructure_CustomFilterKOSGU.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterKOSGU.idKOSGU])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_KOSGU_Source).Id AS [BudgetExpenseStructure_CustomFilterKOSGU.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_KOSGU_Target).Id AS [BudgetExpenseStructure_CustomFilterKOSGU.idKOSGU], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_KOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterDFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView319()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterDFK", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterDFK
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterDFK](T1.[BudgetExpenseStructure_CustomFilterDFK.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterDFK.idDFK])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_DFK_Source).Id AS [BudgetExpenseStructure_CustomFilterDFK.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_DFK_Target).Id AS [BudgetExpenseStructure_CustomFilterDFK.idDFK], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_DFK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterDKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView320()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterDKR", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterDKR
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterDKR](T1.[BudgetExpenseStructure_CustomFilterDKR.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterDKR.idDKR])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_DKR_Source).Id AS [BudgetExpenseStructure_CustomFilterDKR.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_DKR_Target).Id AS [BudgetExpenseStructure_CustomFilterDKR.idDKR], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_DKR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterDEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView321()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterDEK", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterDEK
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterDEK](T1.[BudgetExpenseStructure_CustomFilterDEK.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterDEK.idDEK])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_DEK_Source).Id AS [BudgetExpenseStructure_CustomFilterDEK.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_DEK_Target).Id AS [BudgetExpenseStructure_CustomFilterDEK.idDEK], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_DEK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterCodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView322()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterCodeSubsidy", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterCodeSubsidy
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterCodeSubsidy](T1.[BudgetExpenseStructure_CustomFilterCodeSubsidy.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterCodeSubsidy.idCodeSubsidy])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_CodeSubsidy_Source).Id AS [BudgetExpenseStructure_CustomFilterCodeSubsidy.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_CodeSubsidy_Target).Id AS [BudgetExpenseStructure_CustomFilterCodeSubsidy.idCodeSubsidy], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_CodeSubsidy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BudgetExpenseStructure_CustomFilterBranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView323()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BudgetExpenseStructure_CustomFilterBranchCode", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilterBranchCode
        [CodeFirstDatabaseSchema.BudgetExpenseStructure_CustomFilterBranchCode](T1.[BudgetExpenseStructure_CustomFilterBranchCode.idBudgetExpenseStructure_CustomFilter], T1.[BudgetExpenseStructure_CustomFilterBranchCode.idBranchCode])
    FROM (
        SELECT 
            Key(T.BudgetExpenseStructure_CustomFilter_BranchCode_Source).Id AS [BudgetExpenseStructure_CustomFilterBranchCode.idBudgetExpenseStructure_CustomFilter], 
            Key(T.BudgetExpenseStructure_CustomFilter_BranchCode_Target).Id AS [BudgetExpenseStructure_CustomFilterBranchCode.idBranchCode], 
            True AS _from0
        FROM DataContext.BudgetExpenseStructure_CustomFilter_BranchCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKFinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView324()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKFinanceSource", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKFinanceSource
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKFinanceSource](T1.[BalancingIFDB_RuleFilterKBKFinanceSource.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKFinanceSource.idFinanceSource])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_FinanceSources_Source).Id AS [BalancingIFDB_RuleFilterKBKFinanceSource.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_FinanceSources_Target).Id AS [BalancingIFDB_RuleFilterKBKFinanceSource.idFinanceSource], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_FinanceSources AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView325()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKFO", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKKFO
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKKFO](T1.[BalancingIFDB_RuleFilterKBKKFO.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKKFO.idKFO])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_KFOs_Source).Id AS [BalancingIFDB_RuleFilterKBKKFO.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_KFOs_Target).Id AS [BalancingIFDB_RuleFilterKBKKFO.idKFO], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_KFOs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView326()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKVSR", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKKVSR
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKKVSR](T1.[BalancingIFDB_RuleFilterKBKKVSR.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKKVSR.idKVSR])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_KVSRs_Source).Id AS [BalancingIFDB_RuleFilterKBKKVSR.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_KVSRs_Target).Id AS [BalancingIFDB_RuleFilterKBKKVSR.idKVSR], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_KVSRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKRZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView327()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKRZPR", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKRZPR
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKRZPR](T1.[BalancingIFDB_RuleFilterKBKRZPR.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKRZPR.idRZPR])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_RZPRs_Source).Id AS [BalancingIFDB_RuleFilterKBKRZPR.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_RZPRs_Target).Id AS [BalancingIFDB_RuleFilterKBKRZPR.idRZPR], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_RZPRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView328()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKCSR", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKKCSR
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKKCSR](T1.[BalancingIFDB_RuleFilterKBKKCSR.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKKCSR.idKCSR])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_KCSRs_Source).Id AS [BalancingIFDB_RuleFilterKBKKCSR.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_KCSRs_Target).Id AS [BalancingIFDB_RuleFilterKBKKCSR.idKCSR], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_KCSRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView329()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKVR", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKKVR
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKKVR](T1.[BalancingIFDB_RuleFilterKBKKVR.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKKVR.idKVR])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_KVRs_Source).Id AS [BalancingIFDB_RuleFilterKBKKVR.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_KVRs_Target).Id AS [BalancingIFDB_RuleFilterKBKKVR.idKVR], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_KVRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView330()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKOSGU", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKKOSGU
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKKOSGU](T1.[BalancingIFDB_RuleFilterKBKKOSGU.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKKOSGU.idKOSGU])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_KOSGUs_Source).Id AS [BalancingIFDB_RuleFilterKBKKOSGU.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_KOSGUs_Target).Id AS [BalancingIFDB_RuleFilterKBKKOSGU.idKOSGU], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_KOSGUs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKDFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView331()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKDFK", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKDFK
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKDFK](T1.[BalancingIFDB_RuleFilterKBKDFK.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKDFK.idDFK])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_DFKs_Source).Id AS [BalancingIFDB_RuleFilterKBKDFK.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_DFKs_Target).Id AS [BalancingIFDB_RuleFilterKBKDFK.idDFK], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_DFKs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKDKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView332()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKDKR", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKDKR
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKDKR](T1.[BalancingIFDB_RuleFilterKBKDKR.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKDKR.idDKR])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_DKRs_Source).Id AS [BalancingIFDB_RuleFilterKBKDKR.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_DKRs_Target).Id AS [BalancingIFDB_RuleFilterKBKDKR.idDKR], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_DKRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKDEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView333()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKDEK", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKDEK
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKDEK](T1.[BalancingIFDB_RuleFilterKBKDEK.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKDEK.idDEK])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_DEKs_Source).Id AS [BalancingIFDB_RuleFilterKBKDEK.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_DEKs_Target).Id AS [BalancingIFDB_RuleFilterKBKDEK.idDEK], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_DEKs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKCodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView334()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKCodeSubsidy", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKCodeSubsidy
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKCodeSubsidy](T1.[BalancingIFDB_RuleFilterKBKCodeSubsidy.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKCodeSubsidy.idCodeSubsidy])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Source).Id AS [BalancingIFDB_RuleFilterKBKCodeSubsidy.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Target).Id AS [BalancingIFDB_RuleFilterKBKCodeSubsidy.idCodeSubsidy], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_CodeSubsidys AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKBranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView335()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKBranchCode", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKBranchCode
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKBranchCode](T1.[BalancingIFDB_RuleFilterKBKBranchCode.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKBranchCode.idBranchCode])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_BranchCodes_Source).Id AS [BalancingIFDB_RuleFilterKBKBranchCode.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_BranchCodes_Target).Id AS [BalancingIFDB_RuleFilterKBKBranchCode.idBranchCode], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_BranchCodes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKOKATO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView336()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKOKATO", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKOKATO
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKOKATO](T1.[BalancingIFDB_RuleFilterKBKOKATO.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKOKATO.idOKATO])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_OKATOs_Source).Id AS [BalancingIFDB_RuleFilterKBKOKATO.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_OKATOs_Target).Id AS [BalancingIFDB_RuleFilterKBKOKATO.idOKATO], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_OKATOs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView337()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation
        [CodeFirstDatabaseSchema.BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation](T1.[BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation.idBalancingIFDB_RuleFilterKBK], T1.[BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation.idAuthorityOfExpenseObligation])
    FROM (
        SELECT 
            Key(T.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations_Source).Id AS [BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation.idBalancingIFDB_RuleFilterKBK], 
            Key(T.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations_Target).Id AS [BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation.idAuthorityOfExpenseObligation], 
            True AS _from0
        FROM DataContext.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKFinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView338()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKFinanceSource", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKFinanceSource
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKFinanceSource](T1.[BalanceConfig_FilterKBKFinanceSource.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKFinanceSource.idFinanceSource])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_FinanceSources_Source).Id AS [BalanceConfig_FilterKBKFinanceSource.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_FinanceSources_Target).Id AS [BalanceConfig_FilterKBKFinanceSource.idFinanceSource], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_FinanceSources AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKKFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView339()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKKFO", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKKFO
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKKFO](T1.[BalanceConfig_FilterKBKKFO.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKKFO.idKFO])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_KFOs_Source).Id AS [BalanceConfig_FilterKBKKFO.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_KFOs_Target).Id AS [BalanceConfig_FilterKBKKFO.idKFO], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_KFOs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKKVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView340()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKKVSR", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKKVSR
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKKVSR](T1.[BalanceConfig_FilterKBKKVSR.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKKVSR.idKVSR])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_KVSRs_Source).Id AS [BalanceConfig_FilterKBKKVSR.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_KVSRs_Target).Id AS [BalanceConfig_FilterKBKKVSR.idKVSR], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_KVSRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKRZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView341()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKRZPR", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKRZPR
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKRZPR](T1.[BalanceConfig_FilterKBKRZPR.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKRZPR.idRZPR])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_RZPRs_Source).Id AS [BalanceConfig_FilterKBKRZPR.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_RZPRs_Target).Id AS [BalanceConfig_FilterKBKRZPR.idRZPR], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_RZPRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKKCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView342()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKKCSR", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKKCSR
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKKCSR](T1.[BalanceConfig_FilterKBKKCSR.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKKCSR.idKCSR])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_KCSRs_Source).Id AS [BalanceConfig_FilterKBKKCSR.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_KCSRs_Target).Id AS [BalanceConfig_FilterKBKKCSR.idKCSR], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_KCSRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKKVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView343()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKKVR", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKKVR
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKKVR](T1.[BalanceConfig_FilterKBKKVR.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKKVR.idKVR])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_KVRs_Source).Id AS [BalanceConfig_FilterKBKKVR.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_KVRs_Target).Id AS [BalanceConfig_FilterKBKKVR.idKVR], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_KVRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView344()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKKOSGU", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKKOSGU
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKKOSGU](T1.[BalanceConfig_FilterKBKKOSGU.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKKOSGU.idKOSGU])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_KOSGUs_Source).Id AS [BalanceConfig_FilterKBKKOSGU.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_KOSGUs_Target).Id AS [BalanceConfig_FilterKBKKOSGU.idKOSGU], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_KOSGUs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKDFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView345()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKDFK", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKDFK
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKDFK](T1.[BalanceConfig_FilterKBKDFK.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKDFK.idDFK])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_DFKs_Source).Id AS [BalanceConfig_FilterKBKDFK.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_DFKs_Target).Id AS [BalanceConfig_FilterKBKDFK.idDFK], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_DFKs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKDKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView346()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKDKR", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKDKR
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKDKR](T1.[BalanceConfig_FilterKBKDKR.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKDKR.idDKR])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_DKRs_Source).Id AS [BalanceConfig_FilterKBKDKR.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_DKRs_Target).Id AS [BalanceConfig_FilterKBKDKR.idDKR], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_DKRs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKDEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView347()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKDEK", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKDEK
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKDEK](T1.[BalanceConfig_FilterKBKDEK.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKDEK.idDEK])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_DEKs_Source).Id AS [BalanceConfig_FilterKBKDEK.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_DEKs_Target).Id AS [BalanceConfig_FilterKBKDEK.idDEK], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_DEKs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKCodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView348()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKCodeSubsidy", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKCodeSubsidy
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKCodeSubsidy](T1.[BalanceConfig_FilterKBKCodeSubsidy.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKCodeSubsidy.idCodeSubsidy])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_CodeSubsidys_Source).Id AS [BalanceConfig_FilterKBKCodeSubsidy.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_CodeSubsidys_Target).Id AS [BalanceConfig_FilterKBKCodeSubsidy.idCodeSubsidy], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_CodeSubsidys AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKBranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView349()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKBranchCode", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKBranchCode
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKBranchCode](T1.[BalanceConfig_FilterKBKBranchCode.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKBranchCode.idBranchCode])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_BranchCodes_Source).Id AS [BalanceConfig_FilterKBKBranchCode.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_BranchCodes_Target).Id AS [BalanceConfig_FilterKBKBranchCode.idBranchCode], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_BranchCodes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKOKATO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView350()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKOKATO", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKOKATO
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKOKATO](T1.[BalanceConfig_FilterKBKOKATO.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKOKATO.idOKATO])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_OKATOs_Source).Id AS [BalanceConfig_FilterKBKOKATO.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_OKATOs_Target).Id AS [BalanceConfig_FilterKBKOKATO.idOKATO], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_OKATOs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.BalanceConfig_FilterKBKAuthorityOfExpenseObligation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView351()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.BalanceConfig_FilterKBKAuthorityOfExpenseObligation", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBKAuthorityOfExpenseObligation
        [CodeFirstDatabaseSchema.BalanceConfig_FilterKBKAuthorityOfExpenseObligation](T1.[BalanceConfig_FilterKBKAuthorityOfExpenseObligation.idBalanceConfig_FilterKBK], T1.[BalanceConfig_FilterKBKAuthorityOfExpenseObligation.idAuthorityOfExpenseObligation])
    FROM (
        SELECT 
            Key(T.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations_Source).Id AS [BalanceConfig_FilterKBKAuthorityOfExpenseObligation.idBalanceConfig_FilterKBK], 
            Key(T.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations_Target).Id AS [BalanceConfig_FilterKBKAuthorityOfExpenseObligation.idAuthorityOfExpenseObligation], 
            True AS _from0
        FROM DataContext.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ApprovalBalancingIFDBBalancingIFDB
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView352()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ApprovalBalancingIFDBBalancingIFDB", @"
    SELECT VALUE -- Constructing ApprovalBalancingIFDBBalancingIFDB
        [CodeFirstDatabaseSchema.ApprovalBalancingIFDBBalancingIFDB](T1.ApprovalBalancingIFDBBalancingIFDB_idApprovalBalancingIFDB, T1.ApprovalBalancingIFDBBalancingIFDB_idBalancingIFDB)
    FROM (
        SELECT 
            Key(T.ApprovalBalancingIFDB_BalancingIFDBs_Source).Id AS ApprovalBalancingIFDBBalancingIFDB_idApprovalBalancingIFDB, 
            Key(T.ApprovalBalancingIFDB_BalancingIFDBs_Target).Id AS ApprovalBalancingIFDBBalancingIFDB_idBalancingIFDB, 
            True AS _from0
        FROM DataContext.ApprovalBalancingIFDB_BalancingIFDBs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ApprovalBalancingIFDBLimitBudgetAllocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView353()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ApprovalBalancingIFDBLimitBudgetAllocations", @"
    SELECT VALUE -- Constructing ApprovalBalancingIFDBLimitBudgetAllocations
        [CodeFirstDatabaseSchema.ApprovalBalancingIFDBLimitBudgetAllocations](T1.ApprovalBalancingIFDBLimitBudgetAllocations_idApprovalBalancingIFDB, T1.ApprovalBalancingIFDBLimitBudgetAllocations_idLimitBudgetAllocations)
    FROM (
        SELECT 
            Key(T.ApprovalBalancingIFDB_LimitBudgetAllocations_Source).Id AS ApprovalBalancingIFDBLimitBudgetAllocations_idApprovalBalancingIFDB, 
            Key(T.ApprovalBalancingIFDB_LimitBudgetAllocations_Target).Id AS ApprovalBalancingIFDBLimitBudgetAllocations_idLimitBudgetAllocations, 
            True AS _from0
        FROM DataContext.ApprovalBalancingIFDB_LimitBudgetAllocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ApprovalBalancingIFDBActivityOfSBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView354()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ApprovalBalancingIFDBActivityOfSBP", @"
    SELECT VALUE -- Constructing ApprovalBalancingIFDBActivityOfSBP
        [CodeFirstDatabaseSchema.ApprovalBalancingIFDBActivityOfSBP](T1.ApprovalBalancingIFDBActivityOfSBP_idApprovalBalancingIFDB, T1.ApprovalBalancingIFDBActivityOfSBP_idActivityOfSBP)
    FROM (
        SELECT 
            Key(T.ApprovalBalancingIFDB_ActivityOfSBPs_Source).Id AS ApprovalBalancingIFDBActivityOfSBP_idApprovalBalancingIFDB, 
            Key(T.ApprovalBalancingIFDB_ActivityOfSBPs_Target).Id AS ApprovalBalancingIFDBActivityOfSBP_idActivityOfSBP, 
            True AS _from0
        FROM DataContext.ApprovalBalancingIFDB_ActivityOfSBPs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ModuleEntity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView355()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ModuleEntity", @"
    SELECT VALUE -- Constructing ModuleEntity
        [CodeFirstDatabaseSchema.ModuleEntity](T1.ModuleEntity_idModule, T1.ModuleEntity_idEntity)
    FROM (
        SELECT 
            Key(T.Module_Entity_Source).Id AS ModuleEntity_idModule, 
            Key(T.Module_Entity_Target).Id AS ModuleEntity_idEntity, 
            True AS _from0
        FROM DataContext.Module_Entity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.PublicLegalFormationModuleModule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView356()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.PublicLegalFormationModuleModule", @"
    SELECT VALUE -- Constructing PublicLegalFormationModuleModule
        [CodeFirstDatabaseSchema.PublicLegalFormationModuleModule](T1.PublicLegalFormationModuleModule_idPublicLegalFormationModule, T1.PublicLegalFormationModuleModule_idModule)
    FROM (
        SELECT 
            Key(T.PublicLegalFormationModule_IncludeModule_Source).Id AS PublicLegalFormationModuleModule_idPublicLegalFormationModule, 
            Key(T.PublicLegalFormationModule_IncludeModule_Target).Id AS PublicLegalFormationModuleModule_idModule, 
            True AS _from0
        FROM DataContext.PublicLegalFormationModule_IncludeModule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.LicenseUser
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView357()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.LicenseUser", @"
    SELECT VALUE -- Constructing LicenseUser
        [CodeFirstDatabaseSchema.LicenseUser](T1.LicenseUser_idLicense, T1.LicenseUser_idUser)
    FROM (
        SELECT 
            Key(T.License_Users_Source).Id AS LicenseUser_idLicense, 
            Key(T.License_Users_Target).Id AS LicenseUser_idUser, 
            True AS _from0
        FROM DataContext.License_Users AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.OrganizationRightExtensionEntity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView358()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.OrganizationRightExtensionEntity", @"
    SELECT VALUE -- Constructing OrganizationRightExtensionEntity
        [CodeFirstDatabaseSchema.OrganizationRightExtensionEntity](T1.OrganizationRightExtensionEntity_OrganizationRightExtension, T1.OrganizationRightExtensionEntity_Entity)
    FROM (
        SELECT 
            Key(T.OrganizationRightExtension_Targets_Source).Id AS OrganizationRightExtensionEntity_OrganizationRightExtension, 
            Key(T.OrganizationRightExtension_Targets_Target).Id AS OrganizationRightExtensionEntity_Entity, 
            True AS _from0
        FROM DataContext.OrganizationRightExtension_Targets AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.OrganizationRightExtensionEntity1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView359()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.OrganizationRightExtensionEntity1", @"
    SELECT VALUE -- Constructing OrganizationRightExtensionEntity1
        [CodeFirstDatabaseSchema.OrganizationRightExtensionEntity1](T1.OrganizationRightExtensionEntity1_OrganizationRightExtension, T1.OrganizationRightExtensionEntity1_Entity)
    FROM (
        SELECT 
            Key(T.OrganizationRightExtension_Results_Source).Id AS OrganizationRightExtensionEntity1_OrganizationRightExtension, 
            Key(T.OrganizationRightExtension_Results_Target).Id AS OrganizationRightExtensionEntity1_Entity, 
            True AS _from0
        FROM DataContext.OrganizationRightExtension_Results AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateExportEntity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView360()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateExportEntity", @"
    SELECT VALUE -- Constructing TemplateExportEntity
        [CodeFirstDatabaseSchema.TemplateExportEntity](T1.TemplateExportEntity_idTemplateExport, T1.TemplateExportEntity_idEntity)
    FROM (
        SELECT 
            Key(T.TemplateExport_LinkedEntities_Source).Id AS TemplateExportEntity_idTemplateExport, 
            Key(T.TemplateExport_LinkedEntities_Target).Id AS TemplateExportEntity_idEntity, 
            True AS _from0
        FROM DataContext.TemplateExport_LinkedEntities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.testDtp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView361()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.testDtp", @"
    SELECT VALUE -- Constructing testDtp
        [Tests.testDtp](T1.testDtp_Id, T1.testDtp_Caption, T1.testDtp_V1, T1.testDtp_V2, T1.testDtp_V3)
    FROM (
        SELECT 
            T.id AS testDtp_Id, 
            T.Caption AS testDtp_Caption, 
            T.v1 AS testDtp_V1, 
            T.v2 AS testDtp_V2, 
            T.v3 AS testDtp_V3, 
            True AS _from0
        FROM CodeFirstDatabase.testDtp AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.testDtp_Child
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView362()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.testDtp_Child", @"
    SELECT VALUE -- Constructing testDtp_Child
        [Tests.testDtp_Child](T1.[testDtp_Child.Id], T1.[testDtp_Child.IdOwner], T1.[testDtp_Child.IdMaster], T1.[testDtp_Child.IdHierarchyPeriod], T1.[testDtp_Child.Value1], T1.[testDtp_Child.Value2], T1.[testDtp_Child.Value3])
    FROM (
        SELECT 
            T.id AS [testDtp_Child.Id], 
            T.idOwner AS [testDtp_Child.IdOwner], 
            T.idMaster AS [testDtp_Child.IdMaster], 
            T.idHierarchyPeriod AS [testDtp_Child.IdHierarchyPeriod], 
            T.Value1 AS [testDtp_Child.Value1], 
            T.Value2 AS [testDtp_Child.Value2], 
            T.Value3 AS [testDtp_Child.Value3], 
            True AS _from0
        FROM CodeFirstDatabase.testDtp_Child AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.HierarchyPeriod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView363()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.HierarchyPeriod", @"
    SELECT VALUE -- Constructing HierarchyPeriod
        [Tests.HierarchyPeriod](T1.HierarchyPeriod_Id, T1.HierarchyPeriod_Year, T1.HierarchyPeriod_IdParent, T1.HierarchyPeriod_Caption, T1.HierarchyPeriod_DateStart, T1.HierarchyPeriod_DateEnd, T1.HierarchyPeriod_IdRefStatus)
    FROM (
        SELECT 
            T.id AS HierarchyPeriod_Id, 
            T.Year AS HierarchyPeriod_Year, 
            T.idParent AS HierarchyPeriod_IdParent, 
            T.Caption AS HierarchyPeriod_Caption, 
            T.DateStart AS HierarchyPeriod_DateStart, 
            T.DateEnd AS HierarchyPeriod_DateEnd, 
            T.idRefStatus AS HierarchyPeriod_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.HierarchyPeriod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ResourceMaintenanceOfTheStateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView364()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2801);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ResourceMaintenanceOfTheStateProgram\r\n       ");
            viewString.Append(" [Tests.ResourceMaintenanceOfTheStateProgram](T1.ResourceMaintenanceOfTheStatePr");
            viewString.Append("ogram_Id, T1.ResourceMaintenanceOfTheStateProgram_IsTemporary, T1.ResourceMainte");
            viewString.Append("nanceOfTheStateProgram_IdPublicLegalFormation, T1.ResourceMaintenanceOfTheStateP");
            viewString.Append("rogram_IdBudget, T1.ResourceMaintenanceOfTheStateProgram_IdVersion, T1.ResourceM");
            viewString.Append("aintenanceOfTheStateProgram_Caption, T1.ResourceMaintenanceOfTheStateProgram_IdP");
            viewString.Append("rogram, T1.ResourceMaintenanceOfTheStateProgram_ByApproved, T1.ResourceMaintenan");
            viewString.Append("ceOfTheStateProgram_IsRatingAdditionalNeeds, T1.ResourceMaintenanceOfTheStatePro");
            viewString.Append("gram_DateReport, T1.ResourceMaintenanceOfTheStateProgram_RepeatTableHeader, T1.R");
            viewString.Append("esourceMaintenanceOfTheStateProgram_ShowActivities, T1.ResourceMaintenanceOfTheS");
            viewString.Append("tateProgram_BySource, T1.ResourceMaintenanceOfTheStateProgram_IdSourcesDataRepor");
            viewString.Append("ts, T1.ResourceMaintenanceOfTheStateProgram_HasNoFunds, T1.ResourceMaintenanceOf");
            viewString.Append("TheStateProgram_IdReportProfileType, T1.ResourceMaintenanceOfTheStateProgram_IdR");
            viewString.Append("eportProfileUser, T1.ResourceMaintenanceOfTheStateProgram_ReportProfileCaption)\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.id AS ResourceMaintenanceOfTheStateP");
            viewString.Append("rogram_Id, \r\n            T.isTemporary AS ResourceMaintenanceOfTheStateProgram_I");
            viewString.Append("sTemporary, \r\n            T.idPublicLegalFormation AS ResourceMaintenanceOfTheSt");
            viewString.Append("ateProgram_IdPublicLegalFormation, \r\n            T.idBudget AS ResourceMaintenan");
            viewString.Append("ceOfTheStateProgram_IdBudget, \r\n            T.idVersion AS ResourceMaintenanceOf");
            viewString.Append("TheStateProgram_IdVersion, \r\n            T.Caption AS ResourceMaintenanceOfTheSt");
            viewString.Append("ateProgram_Caption, \r\n            T.idProgram AS ResourceMaintenanceOfTheStatePr");
            viewString.Append("ogram_IdProgram, \r\n            T.byApproved AS ResourceMaintenanceOfTheStateProg");
            viewString.Append("ram_ByApproved, \r\n            T.isRatingAdditionalNeeds AS ResourceMaintenanceOf");
            viewString.Append("TheStateProgram_IsRatingAdditionalNeeds, \r\n            T.DateReport AS ResourceM");
            viewString.Append("aintenanceOfTheStateProgram_DateReport, \r\n            T.repeatTableHeader AS Res");
            viewString.Append("ourceMaintenanceOfTheStateProgram_RepeatTableHeader, \r\n            T.showActivit");
            viewString.Append("ies AS ResourceMaintenanceOfTheStateProgram_ShowActivities, \r\n            T.bySo");
            viewString.Append("urce AS ResourceMaintenanceOfTheStateProgram_BySource, \r\n            T.idSources");
            viewString.Append("DataReports AS ResourceMaintenanceOfTheStateProgram_IdSourcesDataReports, \r\n    ");
            viewString.Append("        T.HasNoFunds AS ResourceMaintenanceOfTheStateProgram_HasNoFunds, \r\n     ");
            viewString.Append("       T.idReportProfileType AS ResourceMaintenanceOfTheStateProgram_IdReportPro");
            viewString.Append("fileType, \r\n            T.idReportProfileUser AS ResourceMaintenanceOfTheStatePr");
            viewString.Append("ogram_IdReportProfileUser, \r\n            T.ReportProfileCaption AS ResourceMaint");
            viewString.Append("enanceOfTheStateProgram_ReportProfileCaption, \r\n            True AS _from0\r\n    ");
            viewString.Append("    FROM CodeFirstDatabase.ResourceMaintenanceOfTheStateProgram AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ResourceMaintenanceOfTheStateProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PublicLegalFormation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView365()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicLegalFormation", @"
    SELECT VALUE -- Constructing PublicLegalFormation
        [Tests.PublicLegalFormation](T1.PublicLegalFormation_Id, T1.PublicLegalFormation_IdParent, T1.PublicLegalFormation_Caption, T1.PublicLegalFormation_IdBudgetLevel, T1.PublicLegalFormation_IdAccessGroup, T1.PublicLegalFormation_Subject, T1.[PublicLegalFormation.IdMethodofFormingCode_GoalSetting], T1.[PublicLegalFormation.IdMethodofFormingCode_TargetIndicator], T1.[PublicLegalFormation.IdMethodofFormingCode_Activity], T1.PublicLegalFormation_IdRefStatus, T1.PublicLegalFormation_UsedGMZ)
    FROM (
        SELECT 
            T.id AS PublicLegalFormation_Id, 
            T.idParent AS PublicLegalFormation_IdParent, 
            T.Caption AS PublicLegalFormation_Caption, 
            T.idBudgetLevel AS PublicLegalFormation_IdBudgetLevel, 
            T.idAccessGroup AS PublicLegalFormation_IdAccessGroup, 
            T.Subject AS PublicLegalFormation_Subject, 
            T.idMethodofFormingCode_GoalSetting AS [PublicLegalFormation.IdMethodofFormingCode_GoalSetting], 
            T.idMethodofFormingCode_TargetIndicator AS [PublicLegalFormation.IdMethodofFormingCode_TargetIndicator], 
            T.idMethodofFormingCode_Activity AS [PublicLegalFormation.IdMethodofFormingCode_Activity], 
            T.idRefStatus AS PublicLegalFormation_IdRefStatus, 
            T.UsedGMZ AS PublicLegalFormation_UsedGMZ, 
            True AS _from0
        FROM CodeFirstDatabase.PublicLegalFormation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetLevel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView366()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetLevel", @"
    SELECT VALUE -- Constructing BudgetLevel
        [Tests.BudgetLevel](T1.BudgetLevel_Id, T1.BudgetLevel_IdParent, T1.BudgetLevel_Caption, T1.BudgetLevel_IdRefStatus)
    FROM (
        SELECT 
            T.id AS BudgetLevel_Id, 
            T.idParent AS BudgetLevel_IdParent, 
            T.Caption AS BudgetLevel_Caption, 
            T.idRefStatus AS BudgetLevel_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.BudgetLevel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.AccessGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView367()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.AccessGroup", @"
    SELECT VALUE -- Constructing AccessGroup
        [Tests.AccessGroup](T1.AccessGroup_Id, T1.AccessGroup_IdParent, T1.AccessGroup_Caption, T1.AccessGroup_IdRefStatus)
    FROM (
        SELECT 
            T.id AS AccessGroup_Id, 
            T.idParent AS AccessGroup_IdParent, 
            T.Caption AS AccessGroup_Caption, 
            T.idRefStatus AS AccessGroup_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.AccessGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Budget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView368()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Budget", @"
    SELECT VALUE -- Constructing Budget
        [Tests.Budget](T1.Budget_Id, T1.Budget_IdPublicLegalFormation, T1.Budget_Year, T1.Budget_Caption, T1.Budget_IdRefStatus)
    FROM (
        SELECT 
            T.id AS Budget_Id, 
            T.idPublicLegalFormation AS Budget_IdPublicLegalFormation, 
            T.Year AS Budget_Year, 
            T.Caption AS Budget_Caption, 
            T.idRefStatus AS Budget_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.Budget AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Version
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView369()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Version", @"
    SELECT VALUE -- Constructing Version
        [Tests.Version](T1.Version_Id, T1.Version_IdPublicLegalFormation, T1.Version_Caption, T1.Version_IdRefStatus)
    FROM (
        SELECT 
            T.id AS Version_Id, 
            T.idPublicLegalFormation AS Version_IdPublicLegalFormation, 
            T.Caption AS Version_Caption, 
            T.idRefStatus AS Version_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.Version AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Program
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView370()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Program", "\r\n    SELECT VALUE -- Constructing Program\r\n        [Tests.Program](T1.Program_Id" +
                    ", T1.Program_Caption, T1.Program_IdTerminator, T1.Program_IdTerminatorEntity, T1" +
                    ".Program_IdRegistrator, T1.Program_IdRegistratorEntity, T1.Program_IdApproved, T" +
                    "1.Program_IdApprovedEntity, T1.Program_IdExecutedOperation, T1.Program_IdTermina" +
                    "teOperation, T1.Program_IdPublicLegalFormation, T1.Program_IdVersion, T1.Program" +
                    "_DateCommit, T1.Program_DateTerminate, T1.Program_DateCreate, T1.Program_IdDocTy" +
                    "pe, T1.Program_IdSBP)\r\n    FROM (\r\n        SELECT \r\n            T.id AS Program_" +
                    "Id, \r\n            T.Caption AS Program_Caption, \r\n            T.idTerminator AS " +
                    "Program_IdTerminator, \r\n            T.idTerminatorEntity AS Program_IdTerminator" +
                    "Entity, \r\n            T.idRegistrator AS Program_IdRegistrator, \r\n            T." +
                    "idRegistratorEntity AS Program_IdRegistratorEntity, \r\n            T.idApproved A" +
                    "S Program_IdApproved, \r\n            T.idApprovedEntity AS Program_IdApprovedEnti" +
                    "ty, \r\n            T.idExecutedOperation AS Program_IdExecutedOperation, \r\n      " +
                    "      T.idTerminateOperation AS Program_IdTerminateOperation, \r\n            T.id" +
                    "PublicLegalFormation AS Program_IdPublicLegalFormation, \r\n            T.idVersio" +
                    "n AS Program_IdVersion, \r\n            T.DateCommit AS Program_DateCommit, \r\n    " +
                    "        T.DateTerminate AS Program_DateTerminate, \r\n            T.DateCreate AS " +
                    "Program_DateCreate, \r\n            T.idDocType AS Program_IdDocType, \r\n          " +
                    "  T.idSBP AS Program_IdSBP, \r\n            True AS _from0\r\n        FROM CodeFirst" +
                    "Database.Program AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Entity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView371()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Entity", @"
    SELECT VALUE -- Constructing Entity
        [Tests.Entity](T1.Entity_Id, T1.Entity_Name, T1.Entity_Caption, T1.Entity_Description, T1.Entity_IdEntityType, T1.Entity_GenerateEntityClass, T1.Entity_IsSystem, T1.Entity_IdEntityGroup, T1.Entity_IdProject, T1.Entity_IsVersioning, T1.Entity_Ordered, T1.Entity_AllowGenericLinks)
    FROM (
        SELECT 
            T.id AS Entity_Id, 
            T.Name AS Entity_Name, 
            T.Caption AS Entity_Caption, 
            T.Description AS Entity_Description, 
            T.idEntityType AS Entity_IdEntityType, 
            T.GenerateEntityClass AS Entity_GenerateEntityClass, 
            T.isSystem AS Entity_IsSystem, 
            T.idEntityGroup AS Entity_IdEntityGroup, 
            T.idProject AS Entity_IdProject, 
            T.isVersioning AS Entity_IsVersioning, 
            T.Ordered AS Entity_Ordered, 
            T.AllowGenericLinks AS Entity_AllowGenericLinks, 
            True AS _from0
        FROM CodeFirstDatabase.Entity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ExecutedOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView372()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ExecutedOperation", @"
    SELECT VALUE -- Constructing ExecutedOperation
        [Tests.ExecutedOperation](T1.ExecutedOperation_Id, T1.ExecutedOperation_Date, T1.ExecutedOperation_IdUser, T1.ExecutedOperation_IdEntityOperation, T1.ExecutedOperation_IdOriginalStatus, T1.ExecutedOperation_IdFinalStatus, T1.ExecutedOperation_IdRegistrator, T1.ExecutedOperation_IdRegistratorEntity)
    FROM (
        SELECT 
            T.id AS ExecutedOperation_Id, 
            T.Date AS ExecutedOperation_Date, 
            T.idUser AS ExecutedOperation_IdUser, 
            T.idEntityOperation AS ExecutedOperation_IdEntityOperation, 
            T.idOriginalStatus AS ExecutedOperation_IdOriginalStatus, 
            T.idFinalStatus AS ExecutedOperation_IdFinalStatus, 
            T.idRegistrator AS ExecutedOperation_IdRegistrator, 
            T.idRegistratorEntity AS ExecutedOperation_IdRegistratorEntity, 
            True AS _from0
        FROM CodeFirstDatabase.ExecutedOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView373()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.User", @"
    SELECT VALUE -- Constructing User
        [Tests.User](T1.User_Id, T1.User_Caption, T1.User_Name, T1.User_Email, T1.User_Password, T1.User_DateofLastEntry, T1.User_Department, T1.User_Site, T1.User_IISAddress, T1.User_Telephone, T1.User_IdAccessGroup, T1.User_IdOrganization, T1.User_IdResponsiblePerson, T1.User_ChangePasswordNextTime, T1.User_IsBlocked)
    FROM (
        SELECT 
            T.id AS User_Id, 
            T.Caption AS User_Caption, 
            T.Name AS User_Name, 
            T.Email AS User_Email, 
            T.Password AS User_Password, 
            T.DateofLastEntry AS User_DateofLastEntry, 
            T.Department AS User_Department, 
            T.Site AS User_Site, 
            T.IISAddress AS User_IISAddress, 
            T.Telephone AS User_Telephone, 
            T.idAccessGroup AS User_IdAccessGroup, 
            T.idOrganization AS User_IdOrganization, 
            T.idResponsiblePerson AS User_IdResponsiblePerson, 
            T.ChangePasswordNextTime AS User_ChangePasswordNextTime, 
            T.IsBlocked AS User_IsBlocked, 
            True AS _from0
        FROM CodeFirstDatabase.User AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Organization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView374()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Organization", @"
    SELECT VALUE -- Constructing Organization
        [Tests.Organization](T1.Organization_Id, T1.Organization_IdPublicLegalFormation, T1.Organization_Caption, T1.Organization_Description, T1.Organization_INN, T1.Organization_KPP, T1.Organization_CodeOrgBud, T1.Organization_IdOKATO, T1.Organization_PostAdress, T1.Organization_LegalAddress, T1.Organization_IdRefStatus, T1.Organization_Okpo)
    FROM (
        SELECT 
            T.id AS Organization_Id, 
            T.idPublicLegalFormation AS Organization_IdPublicLegalFormation, 
            T.Caption AS Organization_Caption, 
            T.Description AS Organization_Description, 
            T.INN AS Organization_INN, 
            T.KPP AS Organization_KPP, 
            T.CodeOrgBud AS Organization_CodeOrgBud, 
            T.idOKATO AS Organization_IdOKATO, 
            T.PostAdress AS Organization_PostAdress, 
            T.LegalAddress AS Organization_LegalAddress, 
            T.idRefStatus AS Organization_IdRefStatus, 
            T.Okpo AS Organization_Okpo, 
            True AS _from0
        FROM CodeFirstDatabase.Organization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.OKATO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView375()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.OKATO", @"
    SELECT VALUE -- Constructing OKATO
        [Tests.OKATO](T1.OKATO_Id, T1.OKATO_IdParent, T1.OKATO_Caption, T1.OKATO_Description, T1.OKATO_IdRefStatus, T1.OKATO_IdBudgetLevel)
    FROM (
        SELECT 
            T.id AS OKATO_Id, 
            T.idParent AS OKATO_IdParent, 
            T.Caption AS OKATO_Caption, 
            T.Description AS OKATO_Description, 
            T.idRefStatus AS OKATO_IdRefStatus, 
            T.idBudgetLevel AS OKATO_IdBudgetLevel, 
            True AS _from0
        FROM CodeFirstDatabase.OKATO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ResponsiblePerson
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView376()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ResponsiblePerson", @"
    SELECT VALUE -- Constructing ResponsiblePerson
        [Tests.ResponsiblePerson](T1.ResponsiblePerson_Id, T1.ResponsiblePerson_IdPublicLegalFormation, T1.ResponsiblePerson_IdOrganization, T1.ResponsiblePerson_Caption, T1.ResponsiblePerson_IdOfficialCapacity, T1.ResponsiblePerson_IdRoleResponsiblePerson, T1.ResponsiblePerson_Phone, T1.ResponsiblePerson_Email, T1.ResponsiblePerson_MoreInformation, T1.ResponsiblePerson_DateEnd, T1.ResponsiblePerson_IdRefStatus)
    FROM (
        SELECT 
            T.id AS ResponsiblePerson_Id, 
            T.idPublicLegalFormation AS ResponsiblePerson_IdPublicLegalFormation, 
            T.idOrganization AS ResponsiblePerson_IdOrganization, 
            T.Caption AS ResponsiblePerson_Caption, 
            T.idOfficialCapacity AS ResponsiblePerson_IdOfficialCapacity, 
            T.idRoleResponsiblePerson AS ResponsiblePerson_IdRoleResponsiblePerson, 
            T.Phone AS ResponsiblePerson_Phone, 
            T.Email AS ResponsiblePerson_Email, 
            T.MoreInformation AS ResponsiblePerson_MoreInformation, 
            T.DateEnd AS ResponsiblePerson_DateEnd, 
            T.idRefStatus AS ResponsiblePerson_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.ResponsiblePerson AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.OfficialCapacity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView377()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.OfficialCapacity", @"
    SELECT VALUE -- Constructing OfficialCapacity
        [Tests.OfficialCapacity](T1.OfficialCapacity_Id, T1.OfficialCapacity_IdPublicLegalFormation, T1.OfficialCapacity_Department, T1.OfficialCapacity_Caption, T1.OfficialCapacity_IdRefStatus)
    FROM (
        SELECT 
            T.id AS OfficialCapacity_Id, 
            T.idPublicLegalFormation AS OfficialCapacity_IdPublicLegalFormation, 
            T.Department AS OfficialCapacity_Department, 
            T.Caption AS OfficialCapacity_Caption, 
            T.idRefStatus AS OfficialCapacity_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.OfficialCapacity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Role
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView378()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Role", @"
    SELECT VALUE -- Constructing Role
        [Tests.Role](T1.Role_Id, T1.Role_Caption, T1.Role_Description, T1.Role_IdAccessGroup, T1.Role_IdRoleType, T1.Role_IdRoleKind)
    FROM (
        SELECT 
            T.id AS Role_Id, 
            T.Caption AS Role_Caption, 
            T.Description AS Role_Description, 
            T.idAccessGroup AS Role_IdAccessGroup, 
            T.idRoleType AS Role_IdRoleType, 
            T.idRoleKind AS Role_IdRoleKind, 
            True AS _from0
        FROM CodeFirstDatabase.Role AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Role_FunctionalRight
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView379()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Role_FunctionalRight", @"
    SELECT VALUE -- Constructing Role_FunctionalRight
        [Tests.Role_FunctionalRight](T1.[Role_FunctionalRight.Id], T1.[Role_FunctionalRight.IdOwner], T1.[Role_FunctionalRight.IdEntity], T1.[Role_FunctionalRight.EditingFlag])
    FROM (
        SELECT 
            T.id AS [Role_FunctionalRight.Id], 
            T.idOwner AS [Role_FunctionalRight.IdOwner], 
            T.idEntity AS [Role_FunctionalRight.IdEntity], 
            T.EditingFlag AS [Role_FunctionalRight.EditingFlag], 
            True AS _from0
        FROM CodeFirstDatabase.Role_FunctionalRight AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Role_DocumentOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView380()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Role_DocumentOperation", @"
    SELECT VALUE -- Constructing Role_DocumentOperation
        [Tests.Role_DocumentOperation](T1.[Role_DocumentOperation.Id], T1.[Role_DocumentOperation.IdOwner], T1.[Role_DocumentOperation.IdOperation], T1.[Role_DocumentOperation.SwitchOn], T1.[Role_DocumentOperation.InitialStatus], T1.[Role_DocumentOperation.FinalStatus], T1.[Role_DocumentOperation.IdMaster])
    FROM (
        SELECT 
            T.id AS [Role_DocumentOperation.Id], 
            T.idOwner AS [Role_DocumentOperation.IdOwner], 
            T.idOperation AS [Role_DocumentOperation.IdOperation], 
            T.SwitchOn AS [Role_DocumentOperation.SwitchOn], 
            T.InitialStatus AS [Role_DocumentOperation.InitialStatus], 
            T.FinalStatus AS [Role_DocumentOperation.FinalStatus], 
            T.idMaster AS [Role_DocumentOperation.IdMaster], 
            True AS _from0
        FROM CodeFirstDatabase.Role_DocumentOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Operation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView381()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Operation", @"
    SELECT VALUE -- Constructing Operation
        [Tests.Operation](T1.Operation_Id, T1.Operation_Name, T1.Operation_Caption, T1.Operation_Description)
    FROM (
        SELECT 
            T.id AS Operation_Id, 
            T.Name AS Operation_Name, 
            T.Caption AS Operation_Caption, 
            T.Description AS Operation_Description, 
            True AS _from0
        FROM CodeFirstDatabase.Operation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Role_RefStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView382()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Role_RefStatus", @"
    SELECT VALUE -- Constructing Role_RefStatus
        [Tests.Role_RefStatus](T1.[Role_RefStatus.Id], T1.[Role_RefStatus.IdOwner], T1.[Role_RefStatus.IdMaster], T1.[Role_RefStatus.IdRefStatus], T1.[Role_RefStatus.SwitchOn])
    FROM (
        SELECT 
            T.id AS [Role_RefStatus.Id], 
            T.idOwner AS [Role_RefStatus.IdOwner], 
            T.idMaster AS [Role_RefStatus.IdMaster], 
            T.idRefStatus AS [Role_RefStatus.IdRefStatus], 
            T.SwitchOn AS [Role_RefStatus.SwitchOn], 
            True AS _from0
        FROM CodeFirstDatabase.Role_RefStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Role_OrganizationRight
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView383()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Role_OrganizationRight", @"
    SELECT VALUE -- Constructing Role_OrganizationRight
        [Tests.Role_OrganizationRight](T1.[Role_OrganizationRight.Id], T1.[Role_OrganizationRight.IdParentField], T1.[Role_OrganizationRight.IdOwner], T1.[Role_OrganizationRight.IdElement], T1.[Role_OrganizationRight.IdElementEntity], T1.[Role_OrganizationRight.EditingFlag], T1.[Role_OrganizationRight.Disabled])
    FROM (
        SELECT 
            T.id AS [Role_OrganizationRight.Id], 
            T.idParentField AS [Role_OrganizationRight.IdParentField], 
            T.idOwner AS [Role_OrganizationRight.IdOwner], 
            T.idElement AS [Role_OrganizationRight.IdElement], 
            T.idElementEntity AS [Role_OrganizationRight.IdElementEntity], 
            T.EditingFlag AS [Role_OrganizationRight.EditingFlag], 
            T.Disabled AS [Role_OrganizationRight.Disabled], 
            True AS _from0
        FROM CodeFirstDatabase.Role_OrganizationRight AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.EntityField
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView384()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EntityField", "\r\n    SELECT VALUE -- Constructing EntityField\r\n        [Tests.EntityField](T1.En" +
                    "tityField_Id, T1.EntityField_Name, T1.EntityField_Caption, T1.EntityField_IdEnti" +
                    "ty, T1.EntityField_IdEntityFieldType, T1.EntityField_Size, T1.EntityField_Precis" +
                    "ion, T1.EntityField_RegExpValidator, T1.EntityField_AllowNull, T1.EntityField_De" +
                    "faultValue, T1.EntityField_IsSystem, T1.EntityField_IdEntityLink, T1.EntityField" +
                    "_IdOwnerField, T1.EntityField_Expression, T1.EntityField_IdForeignKeyType, T1.En" +
                    "tityField_IsCaption, T1.EntityField_IsDescription, T1.EntityField_IsHidden, T1.E" +
                    "ntityField_ReadOnly, T1.EntityField_IdCalculatedFieldType, T1.EntityField_Toolti" +
                    "p)\r\n    FROM (\r\n        SELECT \r\n            T.id AS EntityField_Id, \r\n         " +
                    "   T.Name AS EntityField_Name, \r\n            T.Caption AS EntityField_Caption, \r" +
                    "\n            T.idEntity AS EntityField_IdEntity, \r\n            T.idEntityFieldTy" +
                    "pe AS EntityField_IdEntityFieldType, \r\n            T.Size AS EntityField_Size, \r" +
                    "\n            T.Precision AS EntityField_Precision, \r\n            T.RegExpValidat" +
                    "or AS EntityField_RegExpValidator, \r\n            T.AllowNull AS EntityField_Allo" +
                    "wNull, \r\n            T.DefaultValue AS EntityField_DefaultValue, \r\n            T" +
                    ".isSystem AS EntityField_IsSystem, \r\n            T.idEntityLink AS EntityField_I" +
                    "dEntityLink, \r\n            T.idOwnerField AS EntityField_IdOwnerField, \r\n       " +
                    "     T.Expression AS EntityField_Expression, \r\n            T.idForeignKeyType AS" +
                    " EntityField_IdForeignKeyType, \r\n            T.isCaption AS EntityField_IsCaptio" +
                    "n, \r\n            T.isDescription AS EntityField_IsDescription, \r\n            T.i" +
                    "sHidden AS EntityField_IsHidden, \r\n            T.ReadOnly AS EntityField_ReadOnl" +
                    "y, \r\n            T.idCalculatedFieldType AS EntityField_IdCalculatedFieldType, \r" +
                    "\n            T.Tooltip AS EntityField_Tooltip, \r\n            True AS _from0\r\n   " +
                    "     FROM CodeFirstDatabase.EntityField AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.EntityOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView385()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EntityOperation", @"
    SELECT VALUE -- Constructing EntityOperation
        [Tests.EntityOperation](T1.EntityOperation_Id, T1.EntityOperation_IdEntity, T1.EntityOperation_IdOperation, T1.EntityOperation_IsHidden)
    FROM (
        SELECT 
            T.id AS EntityOperation_Id, 
            T.idEntity AS EntityOperation_IdEntity, 
            T.idOperation AS EntityOperation_IdOperation, 
            T.isHidden AS EntityOperation_IsHidden, 
            True AS _from0
        FROM CodeFirstDatabase.EntityOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DocStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView386()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DocStatus", @"
    SELECT VALUE -- Constructing DocStatus
        [Tests.DocStatus](T1.DocStatus_Id, T1.DocStatus_Name, T1.DocStatus_Caption, T1.DocStatus_Description)
    FROM (
        SELECT 
            T.id AS DocStatus_Id, 
            T.Name AS DocStatus_Name, 
            T.Caption AS DocStatus_Caption, 
            T.Description AS DocStatus_Description, 
            True AS _from0
        FROM CodeFirstDatabase.DocStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DocType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView387()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DocType", @"
    SELECT VALUE -- Constructing DocType
        [Tests.DocType](T1.DocType_Id, T1.DocType_IdEntity, T1.DocType_Caption)
    FROM (
        SELECT 
            T.id AS DocType_Id, 
            T.idEntity AS DocType_IdEntity, 
            T.Caption AS DocType_Caption, 
            True AS _from0
        FROM CodeFirstDatabase.DocType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView388()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SBP", @"
    SELECT VALUE -- Constructing SBP
        [Tests.SBP](T1.SBP_Id, T1.SBP_IdPublicLegalFormation, T1.SBP_IdOrganization, T1.SBP_Caption, T1.SBP_IdSBPType, T1.SBP_IsFounder, T1.SBP_IdParent, T1.SBP_IdKVSR, T1.SBP_ValidityFrom, T1.SBP_ValidityTo, T1.SBP_IdRoot, T1.SBP_IdRefStatus)
    FROM (
        SELECT 
            T.id AS SBP_Id, 
            T.idPublicLegalFormation AS SBP_IdPublicLegalFormation, 
            T.idOrganization AS SBP_IdOrganization, 
            T.Caption AS SBP_Caption, 
            T.idSBPType AS SBP_IdSBPType, 
            T.isFounder AS SBP_IsFounder, 
            T.idParent AS SBP_IdParent, 
            T.idKVSR AS SBP_IdKVSR, 
            T.ValidityFrom AS SBP_ValidityFrom, 
            T.ValidityTo AS SBP_ValidityTo, 
            T.idRoot AS SBP_IdRoot, 
            T.idRefStatus AS SBP_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.SBP AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.KVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView389()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.KVSR", @"
    SELECT VALUE -- Constructing KVSR
        [Tests.KVSR](T1.KVSR_Id, T1.KVSR_IdPublicLegalFormation, T1.KVSR_Caption, T1.KVSR_Description, T1.KVSR_ValidityFrom, T1.KVSR_ValidityTo, T1.KVSR_IdRoot, T1.KVSR_IdRefStatus)
    FROM (
        SELECT 
            T.id AS KVSR_Id, 
            T.idPublicLegalFormation AS KVSR_IdPublicLegalFormation, 
            T.Caption AS KVSR_Caption, 
            T.Description AS KVSR_Description, 
            T.ValidityFrom AS KVSR_ValidityFrom, 
            T.ValidityTo AS KVSR_ValidityTo, 
            T.idRoot AS KVSR_IdRoot, 
            T.idRefStatus AS KVSR_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.KVSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SBP_Blank
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView390()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2063);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SBP_Blank\r\n        [Tests.SBP_Blank](T1.[SBP_");
            viewString.Append("Blank.Id], T1.[SBP_Blank.IdOwner], T1.[SBP_Blank.IdBudget], T1.[SBP_Blank.IdBlan");
            viewString.Append("kType], T1.[SBP_Blank.IdBlankValueType_ExpenseObligationType], T1.[SBP_Blank.IdB");
            viewString.Append("lankValueType_FinanceSource], T1.[SBP_Blank.IdBlankValueType_KFO], T1.[SBP_Blank");
            viewString.Append(".IdBlankValueType_KVSR], T1.[SBP_Blank.IdBlankValueType_RZPR], T1.[SBP_Blank.IdB");
            viewString.Append("lankValueType_KCSR], T1.[SBP_Blank.IdBlankValueType_KVR], T1.[SBP_Blank.IdBlankV");
            viewString.Append("alueType_KOSGU], T1.[SBP_Blank.IdBlankValueType_DFK], T1.[SBP_Blank.IdBlankValue");
            viewString.Append("Type_DKR], T1.[SBP_Blank.IdBlankValueType_DEK], T1.[SBP_Blank.IdBlankValueType_C");
            viewString.Append("odeSubsidy], T1.[SBP_Blank.IdBlankValueType_BranchCode])\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.id AS [SBP_Blank.Id], \r\n            T.idOwner AS [SBP_Blank");
            viewString.Append(".IdOwner], \r\n            T.idBudget AS [SBP_Blank.IdBudget], \r\n            T.idB");
            viewString.Append("lankType AS [SBP_Blank.IdBlankType], \r\n            T.idBlankValueType_ExpenseObl");
            viewString.Append("igationType AS [SBP_Blank.IdBlankValueType_ExpenseObligationType], \r\n           ");
            viewString.Append(" T.idBlankValueType_FinanceSource AS [SBP_Blank.IdBlankValueType_FinanceSource],");
            viewString.Append(" \r\n            T.idBlankValueType_KFO AS [SBP_Blank.IdBlankValueType_KFO], \r\n   ");
            viewString.Append("         T.idBlankValueType_KVSR AS [SBP_Blank.IdBlankValueType_KVSR], \r\n       ");
            viewString.Append("     T.idBlankValueType_RZPR AS [SBP_Blank.IdBlankValueType_RZPR], \r\n           ");
            viewString.Append(" T.idBlankValueType_KCSR AS [SBP_Blank.IdBlankValueType_KCSR], \r\n            T.i");
            viewString.Append("dBlankValueType_KVR AS [SBP_Blank.IdBlankValueType_KVR], \r\n            T.idBlank");
            viewString.Append("ValueType_KOSGU AS [SBP_Blank.IdBlankValueType_KOSGU], \r\n            T.idBlankVa");
            viewString.Append("lueType_DFK AS [SBP_Blank.IdBlankValueType_DFK], \r\n            T.idBlankValueTyp");
            viewString.Append("e_DKR AS [SBP_Blank.IdBlankValueType_DKR], \r\n            T.idBlankValueType_DEK ");
            viewString.Append("AS [SBP_Blank.IdBlankValueType_DEK], \r\n            T.idBlankValueType_CodeSubsid");
            viewString.Append("y AS [SBP_Blank.IdBlankValueType_CodeSubsidy], \r\n            T.idBlankValueType_");
            viewString.Append("BranchCode AS [SBP_Blank.IdBlankValueType_BranchCode], \r\n            True AS _fr");
            viewString.Append("om0\r\n        FROM CodeFirstDatabase.SBP_Blank AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SBP_Blank", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.SBP_PlanningPeriodsInDocumentsAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView391()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SBP_PlanningPeriodsInDocumentsAUBU", @"
    SELECT VALUE -- Constructing SBP_PlanningPeriodsInDocumentsAUBU
        [Tests.SBP_PlanningPeriodsInDocumentsAUBU](T1.[SBP_PlanningPeriodsInDocumentsAUBU.Id], T1.[SBP_PlanningPeriodsInDocumentsAUBU.IdOwner], T1.[SBP_PlanningPeriodsInDocumentsAUBU.IdBudget], T1.[SBP_PlanningPeriodsInDocumentsAUBU.IdDocAUBUPeriodType_OFG], T1.[SBP_PlanningPeriodsInDocumentsAUBU.IdDocAUBUPeriodType_PFG1], T1.[SBP_PlanningPeriodsInDocumentsAUBU.IdDocAUBUPeriodType_PFG2])
    FROM (
        SELECT 
            T.id AS [SBP_PlanningPeriodsInDocumentsAUBU.Id], 
            T.idOwner AS [SBP_PlanningPeriodsInDocumentsAUBU.IdOwner], 
            T.idBudget AS [SBP_PlanningPeriodsInDocumentsAUBU.IdBudget], 
            T.idDocAUBUPeriodType_OFG AS [SBP_PlanningPeriodsInDocumentsAUBU.IdDocAUBUPeriodType_OFG], 
            T.idDocAUBUPeriodType_PFG1 AS [SBP_PlanningPeriodsInDocumentsAUBU.IdDocAUBUPeriodType_PFG1], 
            T.idDocAUBUPeriodType_PFG2 AS [SBP_PlanningPeriodsInDocumentsAUBU.IdDocAUBUPeriodType_PFG2], 
            True AS _from0
        FROM CodeFirstDatabase.SBP_PlanningPeriodsInDocumentsAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SBP_BlankHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView392()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2417);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SBP_BlankHistory\r\n        [Tests.SBP_BlankHis");
            viewString.Append("tory](T1.[SBP_BlankHistory.Id], T1.[SBP_BlankHistory.IdOwner], T1.[SBP_BlankHist");
            viewString.Append("ory.DateCreate], T1.[SBP_BlankHistory.IdBlankType], T1.[SBP_BlankHistory.IdBlank");
            viewString.Append("ValueType_ExpenseObligationType], T1.[SBP_BlankHistory.IdBlankValueType_FinanceS");
            viewString.Append("ource], T1.[SBP_BlankHistory.IdBlankValueType_KFO], T1.[SBP_BlankHistory.IdBlank");
            viewString.Append("ValueType_KVSR], T1.[SBP_BlankHistory.IdBlankValueType_RZPR], T1.[SBP_BlankHisto");
            viewString.Append("ry.IdBlankValueType_KCSR], T1.[SBP_BlankHistory.IdBlankValueType_KVR], T1.[SBP_B");
            viewString.Append("lankHistory.IdBlankValueType_KOSGU], T1.[SBP_BlankHistory.IdBlankValueType_DFK],");
            viewString.Append(" T1.[SBP_BlankHistory.IdBlankValueType_DKR], T1.[SBP_BlankHistory.IdBlankValueTy");
            viewString.Append("pe_DEK], T1.[SBP_BlankHistory.IdBlankValueType_CodeSubsidy], T1.[SBP_BlankHistor");
            viewString.Append("y.IdBlankValueType_BranchCode], T1.[SBP_BlankHistory.IdBudget])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.id AS [SBP_BlankHistory.Id], \r\n            T.idOwner");
            viewString.Append(" AS [SBP_BlankHistory.IdOwner], \r\n            T.DateCreate AS [SBP_BlankHistory.");
            viewString.Append("DateCreate], \r\n            T.idBlankType AS [SBP_BlankHistory.IdBlankType], \r\n  ");
            viewString.Append("          T.idBlankValueType_ExpenseObligationType AS [SBP_BlankHistory.IdBlankV");
            viewString.Append("alueType_ExpenseObligationType], \r\n            T.idBlankValueType_FinanceSource ");
            viewString.Append("AS [SBP_BlankHistory.IdBlankValueType_FinanceSource], \r\n            T.idBlankVal");
            viewString.Append("ueType_KFO AS [SBP_BlankHistory.IdBlankValueType_KFO], \r\n            T.idBlankVa");
            viewString.Append("lueType_KVSR AS [SBP_BlankHistory.IdBlankValueType_KVSR], \r\n            T.idBlan");
            viewString.Append("kValueType_RZPR AS [SBP_BlankHistory.IdBlankValueType_RZPR], \r\n            T.idB");
            viewString.Append("lankValueType_KCSR AS [SBP_BlankHistory.IdBlankValueType_KCSR], \r\n            T.");
            viewString.Append("idBlankValueType_KVR AS [SBP_BlankHistory.IdBlankValueType_KVR], \r\n            T");
            viewString.Append(".idBlankValueType_KOSGU AS [SBP_BlankHistory.IdBlankValueType_KOSGU], \r\n        ");
            viewString.Append("    T.idBlankValueType_DFK AS [SBP_BlankHistory.IdBlankValueType_DFK], \r\n       ");
            viewString.Append("     T.idBlankValueType_DKR AS [SBP_BlankHistory.IdBlankValueType_DKR], \r\n      ");
            viewString.Append("      T.idBlankValueType_DEK AS [SBP_BlankHistory.IdBlankValueType_DEK], \r\n     ");
            viewString.Append("       T.idBlankValueType_CodeSubsidy AS [SBP_BlankHistory.IdBlankValueType_Code");
            viewString.Append("Subsidy], \r\n            T.idBlankValueType_BranchCode AS [SBP_BlankHistory.IdBla");
            viewString.Append("nkValueType_BranchCode], \r\n            T.idBudget AS [SBP_BlankHistory.IdBudget]");
            viewString.Append(", \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.SBP_BlankHistory ");
            viewString.Append("AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SBP_BlankHistory", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_SBPBlankActual
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView393()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_SBPBlankActual", @"
    SELECT VALUE -- Constructing ActivityOfSBP_SBPBlankActual
        [Tests.ActivityOfSBP_SBPBlankActual](T1.[ActivityOfSBP_SBPBlankActual.Id], T1.[ActivityOfSBP_SBPBlankActual.IdOwner], T1.[ActivityOfSBP_SBPBlankActual.IdSBP_BlankHistory])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_SBPBlankActual.Id], 
            T.idOwner AS [ActivityOfSBP_SBPBlankActual.IdOwner], 
            T.idSBP_BlankHistory AS [ActivityOfSBP_SBPBlankActual.IdSBP_BlankHistory], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_SBPBlankActual AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView394()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2654);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ActivityOfSBP\r\n        [Tests.ActivityOfSBP](");
            viewString.Append("T1.ActivityOfSBP_Id, T1.ActivityOfSBP_IdPublicLegalFormation, T1.ActivityOfSBP_I");
            viewString.Append("dDocType, T1.ActivityOfSBP_IdVersion, T1.ActivityOfSBP_Number, T1.ActivityOfSBP_");
            viewString.Append("Date, T1.ActivityOfSBP_IdAnalyticalCodeStateProgram, T1.ActivityOfSBP_DateStart,");
            viewString.Append(" T1.ActivityOfSBP_DateEnd, T1.ActivityOfSBP_DateCommit, T1.ActivityOfSBP_IsAppro");
            viewString.Append("ved, T1.ActivityOfSBP_Caption, T1.ActivityOfSBP_IdResponsibleExecutantType, T1.A");
            viewString.Append("ctivityOfSBP_IdSBP, T1.ActivityOfSBP_HasMasterDoc, T1.ActivityOfSBP_IdMasterDoc,");
            viewString.Append(" T1.ActivityOfSBP_Description, T1.ActivityOfSBP_IsRequireClarification, T1.Activ");
            viewString.Append("ityOfSBP_ReasonClarification, T1.ActivityOfSBP_DateTerminate, T1.ActivityOfSBP_R");
            viewString.Append("easonTerminate, T1.ActivityOfSBP_IdParent, T1.ActivityOfSBP_ReasonCancel, T1.Act");
            viewString.Append("ivityOfSBP_IdDocStatus, T1.ActivityOfSBP_Header, T1.ActivityOfSBP_DateLastEdit, ");
            viewString.Append("T1.ActivityOfSBP_HasAdditionalNeed)\r\n    FROM (\r\n        SELECT \r\n            T.");
            viewString.Append("id AS ActivityOfSBP_Id, \r\n            T.idPublicLegalFormation AS ActivityOfSBP_");
            viewString.Append("IdPublicLegalFormation, \r\n            T.idDocType AS ActivityOfSBP_IdDocType, \r\n");
            viewString.Append("            T.idVersion AS ActivityOfSBP_IdVersion, \r\n            T.Number AS Ac");
            viewString.Append("tivityOfSBP_Number, \r\n            T.Date AS ActivityOfSBP_Date, \r\n            T.");
            viewString.Append("idAnalyticalCodeStateProgram AS ActivityOfSBP_IdAnalyticalCodeStateProgram, \r\n  ");
            viewString.Append("          T.DateStart AS ActivityOfSBP_DateStart, \r\n            T.DateEnd AS Act");
            viewString.Append("ivityOfSBP_DateEnd, \r\n            T.DateCommit AS ActivityOfSBP_DateCommit, \r\n  ");
            viewString.Append("          T.isApproved AS ActivityOfSBP_IsApproved, \r\n            T.Caption AS A");
            viewString.Append("ctivityOfSBP_Caption, \r\n            T.idResponsibleExecutantType AS ActivityOfSB");
            viewString.Append("P_IdResponsibleExecutantType, \r\n            T.idSBP AS ActivityOfSBP_IdSBP, \r\n  ");
            viewString.Append("          T.HasMasterDoc AS ActivityOfSBP_HasMasterDoc, \r\n            T.idMaster");
            viewString.Append("Doc AS ActivityOfSBP_IdMasterDoc, \r\n            T.Description AS ActivityOfSBP_D");
            viewString.Append("escription, \r\n            T.isRequireClarification AS ActivityOfSBP_IsRequireCla");
            viewString.Append("rification, \r\n            T.ReasonClarification AS ActivityOfSBP_ReasonClarifica");
            viewString.Append("tion, \r\n            T.DateTerminate AS ActivityOfSBP_DateTerminate, \r\n          ");
            viewString.Append("  T.ReasonTerminate AS ActivityOfSBP_ReasonTerminate, \r\n            T.idParent A");
            viewString.Append("S ActivityOfSBP_IdParent, \r\n            T.ReasonCancel AS ActivityOfSBP_ReasonCa");
            viewString.Append("ncel, \r\n            T.idDocStatus AS ActivityOfSBP_IdDocStatus, \r\n            T.");
            viewString.Append("Header AS ActivityOfSBP_Header, \r\n            T.DateLastEdit AS ActivityOfSBP_Da");
            viewString.Append("teLastEdit, \r\n            T.HasAdditionalNeed AS ActivityOfSBP_HasAdditionalNeed");
            viewString.Append(", \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.ActivityOfSBP AS ");
            viewString.Append("T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.AnalyticalCodeStateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView395()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.AnalyticalCodeStateProgram", @"
    SELECT VALUE -- Constructing AnalyticalCodeStateProgram
        [Tests.AnalyticalCodeStateProgram](T1.AnalyticalCodeStateProgram_Id, T1.AnalyticalCodeStateProgram_IdPublicLegalFormation, T1.AnalyticalCodeStateProgram_IdTypeOfAnalyticalCodeStateProgram, T1.AnalyticalCodeStateProgram_AnalyticalCode, T1.AnalyticalCodeStateProgram_Caption, T1.AnalyticalCodeStateProgram_IdParent, T1.AnalyticalCodeStateProgram_IdRefStatus)
    FROM (
        SELECT 
            T.id AS AnalyticalCodeStateProgram_Id, 
            T.idPublicLegalFormation AS AnalyticalCodeStateProgram_IdPublicLegalFormation, 
            T.idTypeOfAnalyticalCodeStateProgram AS AnalyticalCodeStateProgram_IdTypeOfAnalyticalCodeStateProgram, 
            T.AnalyticalCode AS AnalyticalCodeStateProgram_AnalyticalCode, 
            T.Caption AS AnalyticalCodeStateProgram_Caption, 
            T.idParent AS AnalyticalCodeStateProgram_IdParent, 
            T.idRefStatus AS AnalyticalCodeStateProgram_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.AnalyticalCodeStateProgram AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ResponsibleExecutantType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView396()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ResponsibleExecutantType", @"
    SELECT VALUE -- Constructing ResponsibleExecutantType
        [Tests.ResponsibleExecutantType](T1.ResponsibleExecutantType_Id, T1.ResponsibleExecutantType_Caption, T1.ResponsibleExecutantType_IdPublicLegalFormation, T1.ResponsibleExecutantType_IdRefStatus)
    FROM (
        SELECT 
            T.id AS ResponsibleExecutantType_Id, 
            T.Caption AS ResponsibleExecutantType_Caption, 
            T.idPublicLegalFormation AS ResponsibleExecutantType_IdPublicLegalFormation, 
            T.idRefStatus AS ResponsibleExecutantType_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.ResponsibleExecutantType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView397()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2508);
            viewString.Append("\r\n    SELECT VALUE -- Constructing StateProgram\r\n        [Tests.StateProgram](T1");
            viewString.Append(".StateProgram_Id, T1.StateProgram_IdPublicLegalFormation, T1.StateProgram_IdDocT");
            viewString.Append("ype, T1.StateProgram_IdVersion, T1.StateProgram_Number, T1.StateProgram_Date, T1");
            viewString.Append(".StateProgram_IdAnalyticalCodeStateProgram, T1.StateProgram_DateStart, T1.StateP");
            viewString.Append("rogram_DateEnd, T1.StateProgram_DateCommit, T1.StateProgram_IsApproved, T1.State");
            viewString.Append("Program_Caption, T1.StateProgram_IdResponsibleExecutantType, T1.StateProgram_IdS");
            viewString.Append("BP, T1.StateProgram_Description, T1.StateProgram_IdParent, T1.StateProgram_IsReq");
            viewString.Append("uireClarification, T1.StateProgram_ReasonClarification, T1.StateProgram_DateTerm");
            viewString.Append("inate, T1.StateProgram_ReasonTerminate, T1.StateProgram_IdMasterDoc, T1.StatePro");
            viewString.Append("gram_ReasonCancel, T1.StateProgram_IdDocStatus, T1.StateProgram_Header, T1.State");
            viewString.Append("Program_DateLastEdit, T1.StateProgram_HasAdditionalNeed)\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.id AS StateProgram_Id, \r\n            T.idPublicLegalFormati");
            viewString.Append("on AS StateProgram_IdPublicLegalFormation, \r\n            T.idDocType AS StatePro");
            viewString.Append("gram_IdDocType, \r\n            T.idVersion AS StateProgram_IdVersion, \r\n         ");
            viewString.Append("   T.Number AS StateProgram_Number, \r\n            T.Date AS StateProgram_Date, \r");
            viewString.Append("\n            T.idAnalyticalCodeStateProgram AS StateProgram_IdAnalyticalCodeStat");
            viewString.Append("eProgram, \r\n            T.DateStart AS StateProgram_DateStart, \r\n            T.D");
            viewString.Append("ateEnd AS StateProgram_DateEnd, \r\n            T.DateCommit AS StateProgram_DateC");
            viewString.Append("ommit, \r\n            T.isApproved AS StateProgram_IsApproved, \r\n            T.Ca");
            viewString.Append("ption AS StateProgram_Caption, \r\n            T.idResponsibleExecutantType AS Sta");
            viewString.Append("teProgram_IdResponsibleExecutantType, \r\n            T.idSBP AS StateProgram_IdSB");
            viewString.Append("P, \r\n            T.Description AS StateProgram_Description, \r\n            T.idPa");
            viewString.Append("rent AS StateProgram_IdParent, \r\n            T.isRequireClarification AS StatePr");
            viewString.Append("ogram_IsRequireClarification, \r\n            T.ReasonClarification AS StateProgra");
            viewString.Append("m_ReasonClarification, \r\n            T.DateTerminate AS StateProgram_DateTermina");
            viewString.Append("te, \r\n            T.ReasonTerminate AS StateProgram_ReasonTerminate, \r\n         ");
            viewString.Append("   T.idMasterDoc AS StateProgram_IdMasterDoc, \r\n            T.ReasonCancel AS St");
            viewString.Append("ateProgram_ReasonCancel, \r\n            T.idDocStatus AS StateProgram_IdDocStatus");
            viewString.Append(", \r\n            T.Header AS StateProgram_Header, \r\n            T.DateLastEdit AS");
            viewString.Append(" StateProgram_DateLastEdit, \r\n            T.HasAdditionalNeed AS StateProgram_Ha");
            viewString.Append("sAdditionalNeed, \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.St");
            viewString.Append("ateProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView398()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_SystemGoalElement", "\r\n    SELECT VALUE -- Constructing StateProgram_SystemGoalElement\r\n        [Tests" +
                    ".StateProgram_SystemGoalElement](T1.[StateProgram_SystemGoalElement.Id], T1.[Sta" +
                    "teProgram_SystemGoalElement.IdOwner], T1.[StateProgram_SystemGoalElement.FromAno" +
                    "therDocumentSE], T1.[StateProgram_SystemGoalElement.IdSystemGoal], T1.[StateProg" +
                    "ram_SystemGoalElement.IsMainGoal], T1.[StateProgram_SystemGoalElement.Code], T1." +
                    "[StateProgram_SystemGoalElement.IdElementTypeSystemGoal], T1.[StateProgram_Syste" +
                    "mGoalElement.DateStart], T1.[StateProgram_SystemGoalElement.DateEnd], T1.[StateP" +
                    "rogram_SystemGoalElement.IdSBP], T1.[StateProgram_SystemGoalElement.IdParent])\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.id AS [StateProgram_SystemGoalElement" +
                    ".Id], \r\n            T.idOwner AS [StateProgram_SystemGoalElement.IdOwner], \r\n   " +
                    "         T.FromAnotherDocumentSE AS [StateProgram_SystemGoalElement.FromAnotherD" +
                    "ocumentSE], \r\n            T.idSystemGoal AS [StateProgram_SystemGoalElement.IdSy" +
                    "stemGoal], \r\n            T.IsMainGoal AS [StateProgram_SystemGoalElement.IsMainG" +
                    "oal], \r\n            T.Code AS [StateProgram_SystemGoalElement.Code], \r\n         " +
                    "   T.idElementTypeSystemGoal AS [StateProgram_SystemGoalElement.IdElementTypeSys" +
                    "temGoal], \r\n            T.DateStart AS [StateProgram_SystemGoalElement.DateStart" +
                    "], \r\n            T.DateEnd AS [StateProgram_SystemGoalElement.DateEnd], \r\n      " +
                    "      T.idSBP AS [StateProgram_SystemGoalElement.IdSBP], \r\n            T.idParen" +
                    "t AS [StateProgram_SystemGoalElement.IdParent], \r\n            True AS _from0\r\n  " +
                    "      FROM CodeFirstDatabase.StateProgram_SystemGoalElement AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView399()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SystemGoal", "\r\n    SELECT VALUE -- Constructing SystemGoal\r\n        [Tests.SystemGoal](T1.Syst" +
                    "emGoal_Id, T1.SystemGoal_IdPublicLegalFormation, T1.SystemGoal_IdParent, T1.Syst" +
                    "emGoal_Code, T1.SystemGoal_Caption, T1.SystemGoal_DateStart, T1.SystemGoal_DateE" +
                    "nd, T1.SystemGoal_IdElementTypeSystemGoal, T1.SystemGoal_IdSBP, T1.[SystemGoal.I" +
                    "dDocType_CommitDoc], T1.SystemGoal_IdRefStatus, T1.SystemGoal_DateCommit, T1.Sys" +
                    "temGoal_IsChanged, T1.SystemGoal_IdCommitDoc, T1.SystemGoal_IdCommitDocEntity, T" +
                    "1.SystemGoal_IdImplementDoc, T1.SystemGoal_IdImplementDocEntity, T1.[SystemGoal." +
                    "IdDocType_ImplementDoc])\r\n    FROM (\r\n        SELECT \r\n            T.id AS Syste" +
                    "mGoal_Id, \r\n            T.idPublicLegalFormation AS SystemGoal_IdPublicLegalForm" +
                    "ation, \r\n            T.idParent AS SystemGoal_IdParent, \r\n            T.Code AS " +
                    "SystemGoal_Code, \r\n            T.Caption AS SystemGoal_Caption, \r\n            T." +
                    "DateStart AS SystemGoal_DateStart, \r\n            T.DateEnd AS SystemGoal_DateEnd" +
                    ", \r\n            T.idElementTypeSystemGoal AS SystemGoal_IdElementTypeSystemGoal," +
                    " \r\n            T.idSBP AS SystemGoal_IdSBP, \r\n            T.idDocType_CommitDoc " +
                    "AS [SystemGoal.IdDocType_CommitDoc], \r\n            T.idRefStatus AS SystemGoal_I" +
                    "dRefStatus, \r\n            T.DateCommit AS SystemGoal_DateCommit, \r\n            T" +
                    ".isChanged AS SystemGoal_IsChanged, \r\n            T.idCommitDoc AS SystemGoal_Id" +
                    "CommitDoc, \r\n            T.idCommitDocEntity AS SystemGoal_IdCommitDocEntity, \r\n" +
                    "            T.idImplementDoc AS SystemGoal_IdImplementDoc, \r\n            T.idImp" +
                    "lementDocEntity AS SystemGoal_IdImplementDocEntity, \r\n            T.idDocType_Im" +
                    "plementDoc AS [SystemGoal.IdDocType_ImplementDoc], \r\n            True AS _from0\r" +
                    "\n        FROM CodeFirstDatabase.SystemGoal AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ElementTypeSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView400()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ElementTypeSystemGoal", @"
    SELECT VALUE -- Constructing ElementTypeSystemGoal
        [Tests.ElementTypeSystemGoal](T1.ElementTypeSystemGoal_Id, T1.ElementTypeSystemGoal_IdPublicLegalFormation, T1.ElementTypeSystemGoal_Caption, T1.ElementTypeSystemGoal_Description, T1.ElementTypeSystemGoal_IdRefStatus)
    FROM (
        SELECT 
            T.id AS ElementTypeSystemGoal_Id, 
            T.idPublicLegalFormation AS ElementTypeSystemGoal_IdPublicLegalFormation, 
            T.Caption AS ElementTypeSystemGoal_Caption, 
            T.Description AS ElementTypeSystemGoal_Description, 
            T.idRefStatus AS ElementTypeSystemGoal_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.ElementTypeSystemGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ElementTypeSystemGoal_Document
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView401()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ElementTypeSystemGoal_Document", @"
    SELECT VALUE -- Constructing ElementTypeSystemGoal_Document
        [Tests.ElementTypeSystemGoal_Document](T1.[ElementTypeSystemGoal_Document.Id], T1.[ElementTypeSystemGoal_Document.IdOwner], T1.[ElementTypeSystemGoal_Document.IdDocType], T1.[ElementTypeSystemGoal_Document.IsDefault])
    FROM (
        SELECT 
            T.id AS [ElementTypeSystemGoal_Document.Id], 
            T.idOwner AS [ElementTypeSystemGoal_Document.IdOwner], 
            T.idDocType AS [ElementTypeSystemGoal_Document.IdDocType], 
            T.isDefault AS [ElementTypeSystemGoal_Document.IsDefault], 
            True AS _from0
        FROM CodeFirstDatabase.ElementTypeSystemGoal_Document AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SystemGoal_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView402()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SystemGoal_GoalIndicator", @"
    SELECT VALUE -- Constructing SystemGoal_GoalIndicator
        [Tests.SystemGoal_GoalIndicator](T1.[SystemGoal_GoalIndicator.Id], T1.[SystemGoal_GoalIndicator.IdOwner], T1.[SystemGoal_GoalIndicator.IdGoalIndicator], T1.[SystemGoal_GoalIndicator.IdVersion])
    FROM (
        SELECT 
            T.id AS [SystemGoal_GoalIndicator.Id], 
            T.idOwner AS [SystemGoal_GoalIndicator.IdOwner], 
            T.idGoalIndicator AS [SystemGoal_GoalIndicator.IdGoalIndicator], 
            T.idVersion AS [SystemGoal_GoalIndicator.IdVersion], 
            True AS _from0
        FROM CodeFirstDatabase.SystemGoal_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView403()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.GoalIndicator", @"
    SELECT VALUE -- Constructing GoalIndicator
        [Tests.GoalIndicator](T1.GoalIndicator_Id, T1.GoalIndicator_IdPublicLegalFormation, T1.GoalIndicator_Code, T1.GoalIndicator_Caption, T1.GoalIndicator_IdUnitDimension, T1.GoalIndicator_IdTermsOfPerception, T1.GoalIndicator_IdSBP, T1.GoalIndicator_IdRefStatus, T1.GoalIndicator_IdCalculationFormula, T1.GoalIndicator_IdRegulatoryAct, T1.GoalIndicator_IndicatedCumulatively)
    FROM (
        SELECT 
            T.id AS GoalIndicator_Id, 
            T.idPublicLegalFormation AS GoalIndicator_IdPublicLegalFormation, 
            T.Code AS GoalIndicator_Code, 
            T.Caption AS GoalIndicator_Caption, 
            T.idUnitDimension AS GoalIndicator_IdUnitDimension, 
            T.idTermsOfPerception AS GoalIndicator_IdTermsOfPerception, 
            T.idSBP AS GoalIndicator_IdSBP, 
            T.idRefStatus AS GoalIndicator_IdRefStatus, 
            T.idCalculationFormula AS GoalIndicator_IdCalculationFormula, 
            T.idRegulatoryAct AS GoalIndicator_IdRegulatoryAct, 
            T.IndicatedCumulatively AS GoalIndicator_IndicatedCumulatively, 
            True AS _from0
        FROM CodeFirstDatabase.GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.UnitDimension
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView404()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.UnitDimension", @"
    SELECT VALUE -- Constructing UnitDimension
        [Tests.UnitDimension](T1.UnitDimension_Id, T1.UnitDimension_OKEICode, T1.UnitDimension_Caption, T1.UnitDimension_Symbol, T1.UnitDimension_InternationalAbbreviation, T1.UnitDimension_IdRefStatus)
    FROM (
        SELECT 
            T.id AS UnitDimension_Id, 
            T.OKEICode AS UnitDimension_OKEICode, 
            T.Caption AS UnitDimension_Caption, 
            T.Symbol AS UnitDimension_Symbol, 
            T.InternationalAbbreviation AS UnitDimension_InternationalAbbreviation, 
            T.idRefStatus AS UnitDimension_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.UnitDimension AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.CalculationFormula
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView405()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.CalculationFormula", @"
    SELECT VALUE -- Constructing CalculationFormula
        [Tests.CalculationFormula](T1.CalculationFormula_Id, T1.CalculationFormula_IdPublicLegalFormation, T1.CalculationFormula_Caption, T1.CalculationFormula_Description, T1.CalculationFormula_IdRefStatus)
    FROM (
        SELECT 
            T.id AS CalculationFormula_Id, 
            T.idPublicLegalFormation AS CalculationFormula_IdPublicLegalFormation, 
            T.Caption AS CalculationFormula_Caption, 
            T.Description AS CalculationFormula_Description, 
            T.idRefStatus AS CalculationFormula_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.CalculationFormula AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.IndicatorCalculation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView406()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.IndicatorCalculation", @"
    SELECT VALUE -- Constructing IndicatorCalculation
        [Tests.IndicatorCalculation](T1.IndicatorCalculation_Id, T1.IndicatorCalculation_IdPublicLegalFormation, T1.IndicatorCalculation_Caption, T1.IndicatorCalculation_Symbol, T1.IndicatorCalculation_IdUnitDimension, T1.IndicatorCalculation_DefaultValue, T1.IndicatorCalculation_IdIndicatorCalculationValueType, T1.IndicatorCalculation_IdRefStatus)
    FROM (
        SELECT 
            T.id AS IndicatorCalculation_Id, 
            T.idPublicLegalFormation AS IndicatorCalculation_IdPublicLegalFormation, 
            T.Caption AS IndicatorCalculation_Caption, 
            T.Symbol AS IndicatorCalculation_Symbol, 
            T.idUnitDimension AS IndicatorCalculation_IdUnitDimension, 
            T.DefaultValue AS IndicatorCalculation_DefaultValue, 
            T.idIndicatorCalculationValueType AS IndicatorCalculation_IdIndicatorCalculationValueType, 
            T.idRefStatus AS IndicatorCalculation_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.IndicatorCalculation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.RegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView407()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegulatoryAct", @"
    SELECT VALUE -- Constructing RegulatoryAct
        [Tests.RegulatoryAct](T1.RegulatoryAct_Id, T1.RegulatoryAct_IdPublicLegalFormation, T1.RegulatoryAct_IdBudgetLevel, T1.RegulatoryAct_IdTypeRegulatoryAct, T1.RegulatoryAct_Number, T1.RegulatoryAct_Date, T1.RegulatoryAct_DateStart, T1.RegulatoryAct_DateEnd, T1.RegulatoryAct_AuthorityRegulatoryAct, T1.RegulatoryAct_Caption, T1.RegulatoryAct_IdRefStatus)
    FROM (
        SELECT 
            T.id AS RegulatoryAct_Id, 
            T.idPublicLegalFormation AS RegulatoryAct_IdPublicLegalFormation, 
            T.idBudgetLevel AS RegulatoryAct_IdBudgetLevel, 
            T.idTypeRegulatoryAct AS RegulatoryAct_IdTypeRegulatoryAct, 
            T.Number AS RegulatoryAct_Number, 
            T.Date AS RegulatoryAct_Date, 
            T.DateStart AS RegulatoryAct_DateStart, 
            T.DateEnd AS RegulatoryAct_DateEnd, 
            T.AuthorityRegulatoryAct AS RegulatoryAct_AuthorityRegulatoryAct, 
            T.Caption AS RegulatoryAct_Caption, 
            T.idRefStatus AS RegulatoryAct_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.RegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TypeRegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView408()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TypeRegulatoryAct", @"
    SELECT VALUE -- Constructing TypeRegulatoryAct
        [Tests.TypeRegulatoryAct](T1.TypeRegulatoryAct_Id, T1.TypeRegulatoryAct_IdAccessGroup, T1.TypeRegulatoryAct_Caption, T1.TypeRegulatoryAct_IdRefStatus)
    FROM (
        SELECT 
            T.id AS TypeRegulatoryAct_Id, 
            T.idAccessGroup AS TypeRegulatoryAct_IdAccessGroup, 
            T.Caption AS TypeRegulatoryAct_Caption, 
            T.idRefStatus AS TypeRegulatoryAct_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.TypeRegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.RegulatoryAct_StructuralUnit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView409()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegulatoryAct_StructuralUnit", @"
    SELECT VALUE -- Constructing RegulatoryAct_StructuralUnit
        [Tests.RegulatoryAct_StructuralUnit](T1.[RegulatoryAct_StructuralUnit.Id], T1.[RegulatoryAct_StructuralUnit.IdOwner], T1.[RegulatoryAct_StructuralUnit.Article], T1.[RegulatoryAct_StructuralUnit.Part], T1.[RegulatoryAct_StructuralUnit.Item], T1.[RegulatoryAct_StructuralUnit.SubItem], T1.[RegulatoryAct_StructuralUnit.Paragraph], T1.[RegulatoryAct_StructuralUnit.Caption])
    FROM (
        SELECT 
            T.id AS [RegulatoryAct_StructuralUnit.Id], 
            T.idOwner AS [RegulatoryAct_StructuralUnit.IdOwner], 
            T.Article AS [RegulatoryAct_StructuralUnit.Article], 
            T.Part AS [RegulatoryAct_StructuralUnit.Part], 
            T.Item AS [RegulatoryAct_StructuralUnit.Item], 
            T.SubItem AS [RegulatoryAct_StructuralUnit.SubItem], 
            T.Paragraph AS [RegulatoryAct_StructuralUnit.Paragraph], 
            T.Caption AS [RegulatoryAct_StructuralUnit.Caption], 
            True AS _from0
        FROM CodeFirstDatabase.RegulatoryAct_StructuralUnit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ExpenditureObligations_RegulatoryAct_StructuralUnit
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView410()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ExpenditureObligations_RegulatoryAct_StructuralUnit", @"
    SELECT VALUE -- Constructing ExpenditureObligations_RegulatoryAct_StructuralUnit
        [Tests.ExpenditureObligations_RegulatoryAct_StructuralUnit](T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.Id], T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.IdOwner], T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.IdMaster], T1.[ExpenditureObligations_RegulatoryAct_StructuralUnit.IdRegulatoryAct_StructuralUnit])
    FROM (
        SELECT 
            T.id AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.Id], 
            T.idOwner AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.IdOwner], 
            T.idMaster AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.IdMaster], 
            T.idRegulatoryAct_StructuralUnit AS [ExpenditureObligations_RegulatoryAct_StructuralUnit.IdRegulatoryAct_StructuralUnit], 
            True AS _from0
        FROM CodeFirstDatabase.ExpenditureObligations_RegulatoryAct_StructuralUnit AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ExpenditureObligations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView411()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ExpenditureObligations", @"
    SELECT VALUE -- Constructing ExpenditureObligations
        [Tests.ExpenditureObligations](T1.ExpenditureObligations_Id, T1.ExpenditureObligations_IdPublicLegalFormation, T1.ExpenditureObligations_IdSBP, T1.ExpenditureObligations_IdAuthorityOfExpenseObligation, T1.ExpenditureObligations_Caption, T1.ExpenditureObligations_Description, T1.ExpenditureObligations_IdRefStatus)
    FROM (
        SELECT 
            T.id AS ExpenditureObligations_Id, 
            T.idPublicLegalFormation AS ExpenditureObligations_IdPublicLegalFormation, 
            T.idSBP AS ExpenditureObligations_IdSBP, 
            T.idAuthorityOfExpenseObligation AS ExpenditureObligations_IdAuthorityOfExpenseObligation, 
            T.Caption AS ExpenditureObligations_Caption, 
            T.Description AS ExpenditureObligations_Description, 
            T.idRefStatus AS ExpenditureObligations_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.ExpenditureObligations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.AuthorityOfExpenseObligation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView412()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.AuthorityOfExpenseObligation", @"
    SELECT VALUE -- Constructing AuthorityOfExpenseObligation
        [Tests.AuthorityOfExpenseObligation](T1.AuthorityOfExpenseObligation_Id, T1.AuthorityOfExpenseObligation_IdParent, T1.AuthorityOfExpenseObligation_Caption, T1.AuthorityOfExpenseObligation_IdAuthorityType, T1.AuthorityOfExpenseObligation_Description, T1.AuthorityOfExpenseObligation_LineNumber, T1.AuthorityOfExpenseObligation_IdRefStatus)
    FROM (
        SELECT 
            T.id AS AuthorityOfExpenseObligation_Id, 
            T.idParent AS AuthorityOfExpenseObligation_IdParent, 
            T.Caption AS AuthorityOfExpenseObligation_Caption, 
            T.idAuthorityType AS AuthorityOfExpenseObligation_IdAuthorityType, 
            T.Description AS AuthorityOfExpenseObligation_Description, 
            T.LineNumber AS AuthorityOfExpenseObligation_LineNumber, 
            T.idRefStatus AS AuthorityOfExpenseObligation_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.AuthorityOfExpenseObligation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ExpenditureObligations_RegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView413()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ExpenditureObligations_RegulatoryAct", @"
    SELECT VALUE -- Constructing ExpenditureObligations_RegulatoryAct
        [Tests.ExpenditureObligations_RegulatoryAct](T1.[ExpenditureObligations_RegulatoryAct.Id], T1.[ExpenditureObligations_RegulatoryAct.IdOwner], T1.[ExpenditureObligations_RegulatoryAct.IdRegulatoryAct])
    FROM (
        SELECT 
            T.id AS [ExpenditureObligations_RegulatoryAct.Id], 
            T.idOwner AS [ExpenditureObligations_RegulatoryAct.IdOwner], 
            T.idRegulatoryAct AS [ExpenditureObligations_RegulatoryAct.IdRegulatoryAct], 
            True AS _from0
        FROM CodeFirstDatabase.ExpenditureObligations_RegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SystemGoal_GoalIndicatorValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView414()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SystemGoal_GoalIndicatorValue", @"
    SELECT VALUE -- Constructing SystemGoal_GoalIndicatorValue
        [Tests.SystemGoal_GoalIndicatorValue](T1.[SystemGoal_GoalIndicatorValue.Id], T1.[SystemGoal_GoalIndicatorValue.IdHierarchyPeriod], T1.[SystemGoal_GoalIndicatorValue.Value], T1.[SystemGoal_GoalIndicatorValue.IdOwner], T1.[SystemGoal_GoalIndicatorValue.IdMaster])
    FROM (
        SELECT 
            T.id AS [SystemGoal_GoalIndicatorValue.Id], 
            T.idHierarchyPeriod AS [SystemGoal_GoalIndicatorValue.IdHierarchyPeriod], 
            T.[Value] AS [SystemGoal_GoalIndicatorValue.Value], 
            T.idOwner AS [SystemGoal_GoalIndicatorValue.IdOwner], 
            T.idMaster AS [SystemGoal_GoalIndicatorValue.IdMaster], 
            True AS _from0
        FROM CodeFirstDatabase.SystemGoal_GoalIndicatorValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SystemGoal_GoalIndicatorParent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView415()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SystemGoal_GoalIndicatorParent", @"
    SELECT VALUE -- Constructing SystemGoal_GoalIndicatorParent
        [Tests.SystemGoal_GoalIndicatorParent](T1.[SystemGoal_GoalIndicatorParent.Id], T1.[SystemGoal_GoalIndicatorParent.IdOwner], T1.[SystemGoal_GoalIndicatorParent.IdGoalIndicator])
    FROM (
        SELECT 
            T.id AS [SystemGoal_GoalIndicatorParent.Id], 
            T.idOwner AS [SystemGoal_GoalIndicatorParent.IdOwner], 
            T.idGoalIndicator AS [SystemGoal_GoalIndicatorParent.IdGoalIndicator], 
            True AS _from0
        FROM CodeFirstDatabase.SystemGoal_GoalIndicatorParent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView416()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_GoalIndicator", @"
    SELECT VALUE -- Constructing StateProgram_GoalIndicator
        [Tests.StateProgram_GoalIndicator](T1.[StateProgram_GoalIndicator.Id], T1.[StateProgram_GoalIndicator.IdOwner], T1.[StateProgram_GoalIndicator.IdMaster], T1.[StateProgram_GoalIndicator.IdGoalIndicator])
    FROM (
        SELECT 
            T.id AS [StateProgram_GoalIndicator.Id], 
            T.idOwner AS [StateProgram_GoalIndicator.IdOwner], 
            T.idMaster AS [StateProgram_GoalIndicator.IdMaster], 
            T.idGoalIndicator AS [StateProgram_GoalIndicator.IdGoalIndicator], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_GoalIndicator_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView417()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_GoalIndicator_Value", @"
    SELECT VALUE -- Constructing StateProgram_GoalIndicator_Value
        [Tests.StateProgram_GoalIndicator_Value](T1.[StateProgram_GoalIndicator_Value.Id], T1.[StateProgram_GoalIndicator_Value.IdHierarchyPeriod], T1.[StateProgram_GoalIndicator_Value.Value], T1.[StateProgram_GoalIndicator_Value.IdOwner], T1.[StateProgram_GoalIndicator_Value.IdMaster])
    FROM (
        SELECT 
            T.id AS [StateProgram_GoalIndicator_Value.Id], 
            T.idHierarchyPeriod AS [StateProgram_GoalIndicator_Value.IdHierarchyPeriod], 
            T.[Value] AS [StateProgram_GoalIndicator_Value.Value], 
            T.idOwner AS [StateProgram_GoalIndicator_Value.IdOwner], 
            T.idMaster AS [StateProgram_GoalIndicator_Value.IdMaster], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_GoalIndicator_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_CoExecutor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView418()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_CoExecutor", @"
    SELECT VALUE -- Constructing StateProgram_CoExecutor
        [Tests.StateProgram_CoExecutor](T1.[StateProgram_CoExecutor.Id], T1.[StateProgram_CoExecutor.IdOwner], T1.[StateProgram_CoExecutor.IdSBP], T1.[StateProgram_CoExecutor.IdResponsibleExecutantType])
    FROM (
        SELECT 
            T.id AS [StateProgram_CoExecutor.Id], 
            T.idOwner AS [StateProgram_CoExecutor.IdOwner], 
            T.idSBP AS [StateProgram_CoExecutor.IdSBP], 
            T.idResponsibleExecutantType AS [StateProgram_CoExecutor.IdResponsibleExecutantType], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_CoExecutor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView419()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_ResourceMaintenance", @"
    SELECT VALUE -- Constructing StateProgram_ResourceMaintenance
        [Tests.StateProgram_ResourceMaintenance](T1.[StateProgram_ResourceMaintenance.Id], T1.[StateProgram_ResourceMaintenance.IdOwner], T1.[StateProgram_ResourceMaintenance.IdFinanceSource])
    FROM (
        SELECT 
            T.id AS [StateProgram_ResourceMaintenance.Id], 
            T.idOwner AS [StateProgram_ResourceMaintenance.IdOwner], 
            T.idFinanceSource AS [StateProgram_ResourceMaintenance.IdFinanceSource], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_ResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView420()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FinanceSource", @"
    SELECT VALUE -- Constructing FinanceSource
        [Tests.FinanceSource](T1.FinanceSource_Id, T1.FinanceSource_Code, T1.FinanceSource_Caption, T1.FinanceSource_IdFinanceSourceType, T1.FinanceSource_IdRefStatus)
    FROM (
        SELECT 
            T.id AS FinanceSource_Id, 
            T.Code AS FinanceSource_Code, 
            T.Caption AS FinanceSource_Caption, 
            T.idFinanceSourceType AS FinanceSource_IdFinanceSourceType, 
            T.idRefStatus AS FinanceSource_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.FinanceSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_ResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView421()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_ResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing StateProgram_ResourceMaintenance_Value
        [Tests.StateProgram_ResourceMaintenance_Value](T1.[StateProgram_ResourceMaintenance_Value.Id], T1.[StateProgram_ResourceMaintenance_Value.IdHierarchyPeriod], T1.[StateProgram_ResourceMaintenance_Value.Value], T1.[StateProgram_ResourceMaintenance_Value.IdOwner], T1.[StateProgram_ResourceMaintenance_Value.IdMaster], T1.[StateProgram_ResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [StateProgram_ResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [StateProgram_ResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [StateProgram_ResourceMaintenance_Value.Value], 
            T.idOwner AS [StateProgram_ResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [StateProgram_ResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [StateProgram_ResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_ResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_ListSubProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView422()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2123);
            viewString.Append("\r\n    SELECT VALUE -- Constructing StateProgram_ListSubProgram\r\n        [Tests.S");
            viewString.Append("tateProgram_ListSubProgram](T1.[StateProgram_ListSubProgram.Id], T1.[StateProgra");
            viewString.Append("m_ListSubProgram.ActiveDocumentCaption], T1.[StateProgram_ListSubProgram.IdOwner");
            viewString.Append("], T1.[StateProgram_ListSubProgram.IdAnalyticalCodeStateProgram], T1.[StateProgr");
            viewString.Append("am_ListSubProgram.IdDocType], T1.[StateProgram_ListSubProgram.IdSBP], T1.[StateP");
            viewString.Append("rogram_ListSubProgram.IdResponsibleExecutantType], T1.[StateProgram_ListSubProgr");
            viewString.Append("am.IdSystemGoal], T1.[StateProgram_ListSubProgram.DateStart], T1.[StateProgram_L");
            viewString.Append("istSubProgram.DateEnd], T1.[StateProgram_ListSubProgram.Caption], T1.[StateProgr");
            viewString.Append("am_ListSubProgram.IdDocument], T1.[StateProgram_ListSubProgram.IdDocumentEntity]");
            viewString.Append(", T1.[StateProgram_ListSubProgram.IdActiveDocStatus], T1.[StateProgram_ListSubPr");
            viewString.Append("ogram.IdActiveDocument])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [Stat");
            viewString.Append("eProgram_ListSubProgram.Id], \r\n            T.ActiveDocumentCaption AS [StateProg");
            viewString.Append("ram_ListSubProgram.ActiveDocumentCaption], \r\n            T.idOwner AS [StateProg");
            viewString.Append("ram_ListSubProgram.IdOwner], \r\n            T.idAnalyticalCodeStateProgram AS [St");
            viewString.Append("ateProgram_ListSubProgram.IdAnalyticalCodeStateProgram], \r\n            T.idDocTy");
            viewString.Append("pe AS [StateProgram_ListSubProgram.IdDocType], \r\n            T.idSBP AS [StatePr");
            viewString.Append("ogram_ListSubProgram.IdSBP], \r\n            T.idResponsibleExecutantType AS [Stat");
            viewString.Append("eProgram_ListSubProgram.IdResponsibleExecutantType], \r\n            T.idSystemGoa");
            viewString.Append("l AS [StateProgram_ListSubProgram.IdSystemGoal], \r\n            T.DateStart AS [S");
            viewString.Append("tateProgram_ListSubProgram.DateStart], \r\n            T.DateEnd AS [StateProgram_");
            viewString.Append("ListSubProgram.DateEnd], \r\n            T.Caption AS [StateProgram_ListSubProgram");
            viewString.Append(".Caption], \r\n            T.idDocument AS [StateProgram_ListSubProgram.IdDocument");
            viewString.Append("], \r\n            T.idDocumentEntity AS [StateProgram_ListSubProgram.IdDocumentEn");
            viewString.Append("tity], \r\n            T.idActiveDocStatus AS [StateProgram_ListSubProgram.IdActiv");
            viewString.Append("eDocStatus], \r\n            T.idActiveDocument AS [StateProgram_ListSubProgram.Id");
            viewString.Append("ActiveDocument], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.St");
            viewString.Append("ateProgram_ListSubProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_ListSubProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_SubProgramResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView423()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_SubProgramResourceMaintenance", @"
    SELECT VALUE -- Constructing StateProgram_SubProgramResourceMaintenance
        [Tests.StateProgram_SubProgramResourceMaintenance](T1.[StateProgram_SubProgramResourceMaintenance.Id], T1.[StateProgram_SubProgramResourceMaintenance.IdOwner], T1.[StateProgram_SubProgramResourceMaintenance.IdMaster], T1.[StateProgram_SubProgramResourceMaintenance.IdFinanceSource])
    FROM (
        SELECT 
            T.id AS [StateProgram_SubProgramResourceMaintenance.Id], 
            T.idOwner AS [StateProgram_SubProgramResourceMaintenance.IdOwner], 
            T.idMaster AS [StateProgram_SubProgramResourceMaintenance.IdMaster], 
            T.idFinanceSource AS [StateProgram_SubProgramResourceMaintenance.IdFinanceSource], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_SubProgramResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_SubProgramResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView424()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_SubProgramResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing StateProgram_SubProgramResourceMaintenance_Value
        [Tests.StateProgram_SubProgramResourceMaintenance_Value](T1.[StateProgram_SubProgramResourceMaintenance_Value.Id], T1.[StateProgram_SubProgramResourceMaintenance_Value.IdHierarchyPeriod], T1.[StateProgram_SubProgramResourceMaintenance_Value.Value], T1.[StateProgram_SubProgramResourceMaintenance_Value.IdOwner], T1.[StateProgram_SubProgramResourceMaintenance_Value.IdMaster], T1.[StateProgram_SubProgramResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [StateProgram_SubProgramResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [StateProgram_SubProgramResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [StateProgram_SubProgramResourceMaintenance_Value.Value], 
            T.idOwner AS [StateProgram_SubProgramResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [StateProgram_SubProgramResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [StateProgram_SubProgramResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_SubProgramResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_DepartmentGoalProgramAndKeyActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView425()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2816);
            viewString.Append("\r\n    SELECT VALUE -- Constructing StateProgram_DepartmentGoalProgramAndKeyActiv");
            viewString.Append("ity\r\n        [Tests.StateProgram_DepartmentGoalProgramAndKeyActivity](T1.[StateP");
            viewString.Append("rogram_DepartmentGoalProgramAndKeyActivity.Id], T1.[StateProgram_DepartmentGoalP");
            viewString.Append("rogramAndKeyActivity.IdOwner], T1.[StateProgram_DepartmentGoalProgramAndKeyActiv");
            viewString.Append("ity.IdAnalyticalCodeStateProgram], T1.[StateProgram_DepartmentGoalProgramAndKeyA");
            viewString.Append("ctivity.IdDocType], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.IdSBP],");
            viewString.Append(" T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.IdResponsibleExecutantType");
            viewString.Append("], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.IdSystemGoal], T1.[State");
            viewString.Append("Program_DepartmentGoalProgramAndKeyActivity.DateStart], T1.[StateProgram_Departm");
            viewString.Append("entGoalProgramAndKeyActivity.DateEnd], T1.[StateProgram_DepartmentGoalProgramAnd");
            viewString.Append("KeyActivity.Caption], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.IdDoc");
            viewString.Append("ument], T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.IdDocumentEntity], ");
            viewString.Append("T1.[StateProgram_DepartmentGoalProgramAndKeyActivity.IdActiveDocStatus], T1.[Sta");
            viewString.Append("teProgram_DepartmentGoalProgramAndKeyActivity.IdActiveDocument], T1.[StateProgra");
            viewString.Append("m_DepartmentGoalProgramAndKeyActivity.ActiveDocumentCaption])\r\n    FROM (\r\n     ");
            viewString.Append("   SELECT \r\n            T.id AS [StateProgram_DepartmentGoalProgramAndKeyActivit");
            viewString.Append("y.Id], \r\n            T.idOwner AS [StateProgram_DepartmentGoalProgramAndKeyActiv");
            viewString.Append("ity.IdOwner], \r\n            T.idAnalyticalCodeStateProgram AS [StateProgram_Depa");
            viewString.Append("rtmentGoalProgramAndKeyActivity.IdAnalyticalCodeStateProgram], \r\n            T.i");
            viewString.Append("dDocType AS [StateProgram_DepartmentGoalProgramAndKeyActivity.IdDocType], \r\n    ");
            viewString.Append("        T.idSBP AS [StateProgram_DepartmentGoalProgramAndKeyActivity.IdSBP], \r\n ");
            viewString.Append("           T.idResponsibleExecutantType AS [StateProgram_DepartmentGoalProgramAn");
            viewString.Append("dKeyActivity.IdResponsibleExecutantType], \r\n            T.idSystemGoal AS [State");
            viewString.Append("Program_DepartmentGoalProgramAndKeyActivity.IdSystemGoal], \r\n            T.DateS");
            viewString.Append("tart AS [StateProgram_DepartmentGoalProgramAndKeyActivity.DateStart], \r\n        ");
            viewString.Append("    T.DateEnd AS [StateProgram_DepartmentGoalProgramAndKeyActivity.DateEnd], \r\n ");
            viewString.Append("           T.Caption AS [StateProgram_DepartmentGoalProgramAndKeyActivity.Captio");
            viewString.Append("n], \r\n            T.idDocument AS [StateProgram_DepartmentGoalProgramAndKeyActiv");
            viewString.Append("ity.IdDocument], \r\n            T.idDocumentEntity AS [StateProgram_DepartmentGoa");
            viewString.Append("lProgramAndKeyActivity.IdDocumentEntity], \r\n            T.idActiveDocStatus AS [");
            viewString.Append("StateProgram_DepartmentGoalProgramAndKeyActivity.IdActiveDocStatus], \r\n         ");
            viewString.Append("   T.idActiveDocument AS [StateProgram_DepartmentGoalProgramAndKeyActivity.IdAct");
            viewString.Append("iveDocument], \r\n            T.ActiveDocumentCaption AS [StateProgram_DepartmentG");
            viewString.Append("oalProgramAndKeyActivity.ActiveDocumentCaption], \r\n            True AS _from0\r\n ");
            viewString.Append("       FROM CodeFirstDatabase.StateProgram_DepartmentGoalProgramAndKeyActivity A");
            viewString.Append("S T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_DepartmentGoalProgramAndKeyActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_DGPKAResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView426()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_DGPKAResourceMaintenance", @"
    SELECT VALUE -- Constructing StateProgram_DGPKAResourceMaintenance
        [Tests.StateProgram_DGPKAResourceMaintenance](T1.[StateProgram_DGPKAResourceMaintenance.Id], T1.[StateProgram_DGPKAResourceMaintenance.IdOwner], T1.[StateProgram_DGPKAResourceMaintenance.IdMaster], T1.[StateProgram_DGPKAResourceMaintenance.IdFinanceSource])
    FROM (
        SELECT 
            T.id AS [StateProgram_DGPKAResourceMaintenance.Id], 
            T.idOwner AS [StateProgram_DGPKAResourceMaintenance.IdOwner], 
            T.idMaster AS [StateProgram_DGPKAResourceMaintenance.IdMaster], 
            T.idFinanceSource AS [StateProgram_DGPKAResourceMaintenance.IdFinanceSource], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_DGPKAResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StateProgram_DGPKAResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView427()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StateProgram_DGPKAResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing StateProgram_DGPKAResourceMaintenance_Value
        [Tests.StateProgram_DGPKAResourceMaintenance_Value](T1.[StateProgram_DGPKAResourceMaintenance_Value.Id], T1.[StateProgram_DGPKAResourceMaintenance_Value.IdHierarchyPeriod], T1.[StateProgram_DGPKAResourceMaintenance_Value.Value], T1.[StateProgram_DGPKAResourceMaintenance_Value.IdOwner], T1.[StateProgram_DGPKAResourceMaintenance_Value.IdMaster], T1.[StateProgram_DGPKAResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [StateProgram_DGPKAResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [StateProgram_DGPKAResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [StateProgram_DGPKAResourceMaintenance_Value.Value], 
            T.idOwner AS [StateProgram_DGPKAResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [StateProgram_DGPKAResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [StateProgram_DGPKAResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.StateProgram_DGPKAResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView428()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_SystemGoalElement", "\r\n    SELECT VALUE -- Constructing ActivityOfSBP_SystemGoalElement\r\n        [Test" +
                    "s.ActivityOfSBP_SystemGoalElement](T1.[ActivityOfSBP_SystemGoalElement.Id], T1.[" +
                    "ActivityOfSBP_SystemGoalElement.IdOwner], T1.[ActivityOfSBP_SystemGoalElement.Fr" +
                    "omAnotherDocumentSE], T1.[ActivityOfSBP_SystemGoalElement.IdSystemGoal], T1.[Act" +
                    "ivityOfSBP_SystemGoalElement.IsMainGoal], T1.[ActivityOfSBP_SystemGoalElement.Co" +
                    "de], T1.[ActivityOfSBP_SystemGoalElement.IdElementTypeSystemGoal], T1.[ActivityO" +
                    "fSBP_SystemGoalElement.DateStart], T1.[ActivityOfSBP_SystemGoalElement.DateEnd]," +
                    " T1.[ActivityOfSBP_SystemGoalElement.IdSBP], T1.[ActivityOfSBP_SystemGoalElement" +
                    ".IdParent])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [ActivityOfSBP_Sys" +
                    "temGoalElement.Id], \r\n            T.idOwner AS [ActivityOfSBP_SystemGoalElement." +
                    "IdOwner], \r\n            T.FromAnotherDocumentSE AS [ActivityOfSBP_SystemGoalElem" +
                    "ent.FromAnotherDocumentSE], \r\n            T.idSystemGoal AS [ActivityOfSBP_Syste" +
                    "mGoalElement.IdSystemGoal], \r\n            T.IsMainGoal AS [ActivityOfSBP_SystemG" +
                    "oalElement.IsMainGoal], \r\n            T.Code AS [ActivityOfSBP_SystemGoalElement" +
                    ".Code], \r\n            T.idElementTypeSystemGoal AS [ActivityOfSBP_SystemGoalElem" +
                    "ent.IdElementTypeSystemGoal], \r\n            T.DateStart AS [ActivityOfSBP_System" +
                    "GoalElement.DateStart], \r\n            T.DateEnd AS [ActivityOfSBP_SystemGoalElem" +
                    "ent.DateEnd], \r\n            T.idSBP AS [ActivityOfSBP_SystemGoalElement.IdSBP], " +
                    "\r\n            T.idParent AS [ActivityOfSBP_SystemGoalElement.IdParent], \r\n      " +
                    "      True AS _from0\r\n        FROM CodeFirstDatabase.ActivityOfSBP_SystemGoalEle" +
                    "ment AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView429()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_GoalIndicator", @"
    SELECT VALUE -- Constructing ActivityOfSBP_GoalIndicator
        [Tests.ActivityOfSBP_GoalIndicator](T1.[ActivityOfSBP_GoalIndicator.Id], T1.[ActivityOfSBP_GoalIndicator.IdOwner], T1.[ActivityOfSBP_GoalIndicator.IdMaster], T1.[ActivityOfSBP_GoalIndicator.IdGoalIndicator])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_GoalIndicator.Id], 
            T.idOwner AS [ActivityOfSBP_GoalIndicator.IdOwner], 
            T.idMaster AS [ActivityOfSBP_GoalIndicator.IdMaster], 
            T.idGoalIndicator AS [ActivityOfSBP_GoalIndicator.IdGoalIndicator], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_GoalIndicator_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView430()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_GoalIndicator_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_GoalIndicator_Value
        [Tests.ActivityOfSBP_GoalIndicator_Value](T1.[ActivityOfSBP_GoalIndicator_Value.Id], T1.[ActivityOfSBP_GoalIndicator_Value.IdHierarchyPeriod], T1.[ActivityOfSBP_GoalIndicator_Value.Value], T1.[ActivityOfSBP_GoalIndicator_Value.IdOwner], T1.[ActivityOfSBP_GoalIndicator_Value.IdMaster])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_GoalIndicator_Value.Id], 
            T.idHierarchyPeriod AS [ActivityOfSBP_GoalIndicator_Value.IdHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_GoalIndicator_Value.Value], 
            T.idOwner AS [ActivityOfSBP_GoalIndicator_Value.IdOwner], 
            T.idMaster AS [ActivityOfSBP_GoalIndicator_Value.IdMaster], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_GoalIndicator_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView431()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_Activity", @"
    SELECT VALUE -- Constructing ActivityOfSBP_Activity
        [Tests.ActivityOfSBP_Activity](T1.[ActivityOfSBP_Activity.Id], T1.[ActivityOfSBP_Activity.IdOwner], T1.[ActivityOfSBP_Activity.IdMaster], T1.[ActivityOfSBP_Activity.IdSBP], T1.[ActivityOfSBP_Activity.IdContingent], T1.[ActivityOfSBP_Activity.IdIndicatorActivity_Volume], T1.[ActivityOfSBP_Activity.IdActivity])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_Activity.Id], 
            T.idOwner AS [ActivityOfSBP_Activity.IdOwner], 
            T.idMaster AS [ActivityOfSBP_Activity.IdMaster], 
            T.idSBP AS [ActivityOfSBP_Activity.IdSBP], 
            T.idContingent AS [ActivityOfSBP_Activity.IdContingent], 
            T.idIndicatorActivity_Volume AS [ActivityOfSBP_Activity.IdIndicatorActivity_Volume], 
            T.idActivity AS [ActivityOfSBP_Activity.IdActivity], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Contingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView432()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Contingent", @"
    SELECT VALUE -- Constructing Contingent
        [Tests.Contingent](T1.Contingent_Id, T1.Contingent_IdPublicLegalFormation, T1.Contingent_Caption, T1.Contingent_IdRefStatus)
    FROM (
        SELECT 
            T.id AS Contingent_Id, 
            T.idPublicLegalFormation AS Contingent_IdPublicLegalFormation, 
            T.Caption AS Contingent_Caption, 
            T.idRefStatus AS Contingent_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.Contingent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.CategoryContingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView433()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.CategoryContingent", @"
    SELECT VALUE -- Constructing CategoryContingent
        [Tests.CategoryContingent](T1.CategoryContingent_Id, T1.CategoryContingent_IdPublicLegalFormation, T1.CategoryContingent_Caption, T1.CategoryContingent_IdParent, T1.CategoryContingent_IdRefStatus)
    FROM (
        SELECT 
            T.id AS CategoryContingent_Id, 
            T.idPublicLegalFormation AS CategoryContingent_IdPublicLegalFormation, 
            T.Caption AS CategoryContingent_Caption, 
            T.idParent AS CategoryContingent_IdParent, 
            T.idRefStatus AS CategoryContingent_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.CategoryContingent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView434()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Activity", @"
    SELECT VALUE -- Constructing Activity
        [Tests.Activity](T1.Activity_Id, T1.Activity_IdPublicLegalFormation, T1.Activity_Code, T1.Activity_IdActivityType, T1.Activity_Caption, T1.Activity_FullCaption, T1.Activity_OrganSetPrice, T1.Activity_IdRefStatus, T1.Activity_IdPaidType)
    FROM (
        SELECT 
            T.id AS Activity_Id, 
            T.idPublicLegalFormation AS Activity_IdPublicLegalFormation, 
            T.Code AS Activity_Code, 
            T.idActivityType AS Activity_IdActivityType, 
            T.Caption AS Activity_Caption, 
            T.FullCaption AS Activity_FullCaption, 
            T.OrganSetPrice AS Activity_OrganSetPrice, 
            T.idRefStatus AS Activity_IdRefStatus, 
            T.idPaidType AS Activity_IdPaidType, 
            True AS _from0
        FROM CodeFirstDatabase.Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Activity_RegulatoryAct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView435()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Activity_RegulatoryAct", @"
    SELECT VALUE -- Constructing Activity_RegulatoryAct
        [Tests.Activity_RegulatoryAct](T1.[Activity_RegulatoryAct.Id], T1.[Activity_RegulatoryAct.IdOwner], T1.[Activity_RegulatoryAct.IdRegulatoryAct], T1.[Activity_RegulatoryAct.IsBasis], T1.[Activity_RegulatoryAct.IsEstablishQualityStandard], T1.[Activity_RegulatoryAct.IsSetMaxPrice], T1.[Activity_RegulatoryAct.IdSBP])
    FROM (
        SELECT 
            T.id AS [Activity_RegulatoryAct.Id], 
            T.idOwner AS [Activity_RegulatoryAct.IdOwner], 
            T.idRegulatoryAct AS [Activity_RegulatoryAct.IdRegulatoryAct], 
            T.IsBasis AS [Activity_RegulatoryAct.IsBasis], 
            T.IsEstablishQualityStandard AS [Activity_RegulatoryAct.IsEstablishQualityStandard], 
            T.IsSetMaxPrice AS [Activity_RegulatoryAct.IsSetMaxPrice], 
            T.idSBP AS [Activity_RegulatoryAct.IdSBP], 
            True AS _from0
        FROM CodeFirstDatabase.Activity_RegulatoryAct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Activity_ExtInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView436()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Activity_ExtInfo", @"
    SELECT VALUE -- Constructing Activity_ExtInfo
        [Tests.Activity_ExtInfo](T1.[Activity_ExtInfo.Id], T1.[Activity_ExtInfo.IdOwner], T1.[Activity_ExtInfo.Method], T1.[Activity_ExtInfo.Composition], T1.[Activity_ExtInfo.Periodicity], T1.[Activity_ExtInfo.IdSBP])
    FROM (
        SELECT 
            T.id AS [Activity_ExtInfo.Id], 
            T.idOwner AS [Activity_ExtInfo.IdOwner], 
            T.Method AS [Activity_ExtInfo.Method], 
            T.Composition AS [Activity_ExtInfo.Composition], 
            T.Periodicity AS [Activity_ExtInfo.Periodicity], 
            T.idSBP AS [Activity_ExtInfo.IdSBP], 
            True AS _from0
        FROM CodeFirstDatabase.Activity_ExtInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Activity_CodeAuthority
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView437()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Activity_CodeAuthority", @"
    SELECT VALUE -- Constructing Activity_CodeAuthority
        [Tests.Activity_CodeAuthority](T1.[Activity_CodeAuthority.Id], T1.[Activity_CodeAuthority.IdOwner], T1.[Activity_CodeAuthority.IsMain], T1.[Activity_CodeAuthority.IdAuthorityOfExpenseObligation])
    FROM (
        SELECT 
            T.id AS [Activity_CodeAuthority.Id], 
            T.idOwner AS [Activity_CodeAuthority.IdOwner], 
            T.IsMain AS [Activity_CodeAuthority.IsMain], 
            T.idAuthorityOfExpenseObligation AS [Activity_CodeAuthority.IdAuthorityOfExpenseObligation], 
            True AS _from0
        FROM CodeFirstDatabase.Activity_CodeAuthority AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Activity_Indicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView438()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Activity_Indicator", @"
    SELECT VALUE -- Constructing Activity_Indicator
        [Tests.Activity_Indicator](T1.[Activity_Indicator.Id], T1.[Activity_Indicator.IdOwner], T1.[Activity_Indicator.IdIndicatorActivity], T1.[Activity_Indicator.IdSBP])
    FROM (
        SELECT 
            T.id AS [Activity_Indicator.Id], 
            T.idOwner AS [Activity_Indicator.IdOwner], 
            T.idIndicatorActivity AS [Activity_Indicator.IdIndicatorActivity], 
            T.idSBP AS [Activity_Indicator.IdSBP], 
            True AS _from0
        FROM CodeFirstDatabase.Activity_Indicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.IndicatorActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView439()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.IndicatorActivity", @"
    SELECT VALUE -- Constructing IndicatorActivity
        [Tests.IndicatorActivity](T1.IndicatorActivity_Id, T1.IndicatorActivity_IdPublicLegalFormation, T1.IndicatorActivity_IdIndicatorActivityType, T1.IndicatorActivity_Caption, T1.IndicatorActivity_IdUnitDimension, T1.IndicatorActivity_IdSBP, T1.IndicatorActivity_IdTermsOfPerception, T1.IndicatorActivity_IdRefStatus, T1.IndicatorActivity_IdCalculationFormula, T1.IndicatorActivity_IdRegulatoryAct)
    FROM (
        SELECT 
            T.id AS IndicatorActivity_Id, 
            T.idPublicLegalFormation AS IndicatorActivity_IdPublicLegalFormation, 
            T.idIndicatorActivityType AS IndicatorActivity_IdIndicatorActivityType, 
            T.Caption AS IndicatorActivity_Caption, 
            T.idUnitDimension AS IndicatorActivity_IdUnitDimension, 
            T.idSBP AS IndicatorActivity_IdSBP, 
            T.idTermsOfPerception AS IndicatorActivity_IdTermsOfPerception, 
            T.idRefStatus AS IndicatorActivity_IdRefStatus, 
            T.idCalculationFormula AS IndicatorActivity_IdCalculationFormula, 
            T.idRegulatoryAct AS IndicatorActivity_IdRegulatoryAct, 
            True AS _from0
        FROM CodeFirstDatabase.IndicatorActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_ActivityResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView440()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3139);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ActivityOfSBP_ActivityResourceMaintenance\r\n  ");
            viewString.Append("      [Tests.ActivityOfSBP_ActivityResourceMaintenance](T1.[ActivityOfSBP_Activi");
            viewString.Append("tyResourceMaintenance.Id], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdBudge");
            viewString.Append("t], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdExpenseObligationType], T1.[");
            viewString.Append("ActivityOfSBP_ActivityResourceMaintenance.IdKFO], T1.[ActivityOfSBP_ActivityReso");
            viewString.Append("urceMaintenance.IdKVSR], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdRZPR], ");
            viewString.Append("T1.[ActivityOfSBP_ActivityResourceMaintenance.IdKCSR], T1.[ActivityOfSBP_Activit");
            viewString.Append("yResourceMaintenance.IdKVR], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdKOS");
            viewString.Append("GU], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdDFK], T1.[ActivityOfSBP_Act");
            viewString.Append("ivityResourceMaintenance.IdDKR], T1.[ActivityOfSBP_ActivityResourceMaintenance.I");
            viewString.Append("dDEK], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdCodeSubsidy], T1.[Activit");
            viewString.Append("yOfSBP_ActivityResourceMaintenance.IdBranchCode], T1.[ActivityOfSBP_ActivityReso");
            viewString.Append("urceMaintenance.IsDocument], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdOwn");
            viewString.Append("er], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdMaster], T1.[ActivityOfSBP_");
            viewString.Append("ActivityResourceMaintenance.IdFinanceSource], T1.[ActivityOfSBP_ActivityResource");
            viewString.Append("Maintenance.IdOKATO], T1.[ActivityOfSBP_ActivityResourceMaintenance.IdAuthorityO");
            viewString.Append("fExpenseObligation])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [Activity");
            viewString.Append("OfSBP_ActivityResourceMaintenance.Id], \r\n            T.idBudget AS [ActivityOfSB");
            viewString.Append("P_ActivityResourceMaintenance.IdBudget], \r\n            T.idExpenseObligationType");
            viewString.Append(" AS [ActivityOfSBP_ActivityResourceMaintenance.IdExpenseObligationType], \r\n     ");
            viewString.Append("       T.idKFO AS [ActivityOfSBP_ActivityResourceMaintenance.IdKFO], \r\n         ");
            viewString.Append("   T.idKVSR AS [ActivityOfSBP_ActivityResourceMaintenance.IdKVSR], \r\n           ");
            viewString.Append(" T.idRZPR AS [ActivityOfSBP_ActivityResourceMaintenance.IdRZPR], \r\n            T");
            viewString.Append(".idKCSR AS [ActivityOfSBP_ActivityResourceMaintenance.IdKCSR], \r\n            T.i");
            viewString.Append("dKVR AS [ActivityOfSBP_ActivityResourceMaintenance.IdKVR], \r\n            T.idKOS");
            viewString.Append("GU AS [ActivityOfSBP_ActivityResourceMaintenance.IdKOSGU], \r\n            T.idDFK");
            viewString.Append(" AS [ActivityOfSBP_ActivityResourceMaintenance.IdDFK], \r\n            T.idDKR AS ");
            viewString.Append("[ActivityOfSBP_ActivityResourceMaintenance.IdDKR], \r\n            T.idDEK AS [Act");
            viewString.Append("ivityOfSBP_ActivityResourceMaintenance.IdDEK], \r\n            T.idCodeSubsidy AS ");
            viewString.Append("[ActivityOfSBP_ActivityResourceMaintenance.IdCodeSubsidy], \r\n            T.idBra");
            viewString.Append("nchCode AS [ActivityOfSBP_ActivityResourceMaintenance.IdBranchCode], \r\n         ");
            viewString.Append("   T.isDocument AS [ActivityOfSBP_ActivityResourceMaintenance.IsDocument], \r\n   ");
            viewString.Append("         T.idOwner AS [ActivityOfSBP_ActivityResourceMaintenance.IdOwner], \r\n   ");
            viewString.Append("         T.idMaster AS [ActivityOfSBP_ActivityResourceMaintenance.IdMaster], \r\n ");
            viewString.Append("           T.idFinanceSource AS [ActivityOfSBP_ActivityResourceMaintenance.IdFin");
            viewString.Append("anceSource], \r\n            T.idOKATO AS [ActivityOfSBP_ActivityResourceMaintenan");
            viewString.Append("ce.IdOKATO], \r\n            T.idAuthorityOfExpenseObligation AS [ActivityOfSBP_Ac");
            viewString.Append("tivityResourceMaintenance.IdAuthorityOfExpenseObligation], \r\n            True AS");
            viewString.Append(" _from0\r\n        FROM CodeFirstDatabase.ActivityOfSBP_ActivityResourceMaintenanc");
            viewString.Append("e AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_ActivityResourceMaintenance", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.KFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView441()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.KFO", @"
    SELECT VALUE -- Constructing KFO
        [Tests.KFO](T1.KFO_Id, T1.KFO_IdRefStatus, T1.KFO_Code, T1.KFO_Caption, T1.KFO_IsIncludedInBudget, T1.KFO_ValidityFrom, T1.KFO_ValidityTo, T1.KFO_IdRoot)
    FROM (
        SELECT 
            T.id AS KFO_Id, 
            T.idRefStatus AS KFO_IdRefStatus, 
            T.Code AS KFO_Code, 
            T.Caption AS KFO_Caption, 
            T.IsIncludedInBudget AS KFO_IsIncludedInBudget, 
            T.ValidityFrom AS KFO_ValidityFrom, 
            T.ValidityTo AS KFO_ValidityTo, 
            T.idRoot AS KFO_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.KFO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.RZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView442()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RZPR", @"
    SELECT VALUE -- Constructing RZPR
        [Tests.RZPR](T1.RZPR_Id, T1.RZPR_IdRefStatus, T1.RZPR_Code, T1.RZPR_Caption, T1.RZPR_IdParent, T1.RZPR_ValidityFrom, T1.RZPR_ValidityTo, T1.RZPR_IdRoot)
    FROM (
        SELECT 
            T.id AS RZPR_Id, 
            T.idRefStatus AS RZPR_IdRefStatus, 
            T.Code AS RZPR_Code, 
            T.Caption AS RZPR_Caption, 
            T.idParent AS RZPR_IdParent, 
            T.ValidityFrom AS RZPR_ValidityFrom, 
            T.ValidityTo AS RZPR_ValidityTo, 
            T.idRoot AS RZPR_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.RZPR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.KCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView443()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.KCSR", @"
    SELECT VALUE -- Constructing KCSR
        [Tests.KCSR](T1.KCSR_Id, T1.KCSR_IdRefStatus, T1.KCSR_Code, T1.KCSR_Caption, T1.KCSR_IdPublicLegalFormation, T1.KCSR_IdParent, T1.KCSR_ValidityFrom, T1.KCSR_ValidityTo, T1.KCSR_IdRoot)
    FROM (
        SELECT 
            T.id AS KCSR_Id, 
            T.idRefStatus AS KCSR_IdRefStatus, 
            T.Code AS KCSR_Code, 
            T.Caption AS KCSR_Caption, 
            T.idPublicLegalFormation AS KCSR_IdPublicLegalFormation, 
            T.idParent AS KCSR_IdParent, 
            T.ValidityFrom AS KCSR_ValidityFrom, 
            T.ValidityTo AS KCSR_ValidityTo, 
            T.idRoot AS KCSR_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.KCSR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.KVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView444()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.KVR", @"
    SELECT VALUE -- Constructing KVR
        [Tests.KVR](T1.KVR_Id, T1.KVR_ValidityFrom, T1.KVR_ValidityTo, T1.KVR_IdRoot, T1.KVR_IdPublicLegalFormation, T1.KVR_Code, T1.KVR_Caption, T1.KVR_IdParent, T1.KVR_IdRefStatus)
    FROM (
        SELECT 
            T.id AS KVR_Id, 
            T.ValidityFrom AS KVR_ValidityFrom, 
            T.ValidityTo AS KVR_ValidityTo, 
            T.idRoot AS KVR_IdRoot, 
            T.idPublicLegalFormation AS KVR_IdPublicLegalFormation, 
            T.Code AS KVR_Code, 
            T.Caption AS KVR_Caption, 
            T.idParent AS KVR_IdParent, 
            T.idRefStatus AS KVR_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.KVR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.KOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView445()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.KOSGU", @"
    SELECT VALUE -- Constructing KOSGU
        [Tests.KOSGU](T1.KOSGU_Id, T1.KOSGU_IdRefStatus, T1.KOSGU_Code, T1.KOSGU_Caption, T1.KOSGU_IdParent, T1.KOSGU_ValidityFrom, T1.KOSGU_ValidityTo, T1.KOSGU_IdRoot)
    FROM (
        SELECT 
            T.id AS KOSGU_Id, 
            T.idRefStatus AS KOSGU_IdRefStatus, 
            T.Code AS KOSGU_Code, 
            T.Caption AS KOSGU_Caption, 
            T.idParent AS KOSGU_IdParent, 
            T.ValidityFrom AS KOSGU_ValidityFrom, 
            T.ValidityTo AS KOSGU_ValidityTo, 
            T.idRoot AS KOSGU_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.KOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView446()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DFK", @"
    SELECT VALUE -- Constructing DFK
        [Tests.DFK](T1.DFK_Id, T1.DFK_IdRefStatus, T1.DFK_Code, T1.DFK_Caption, T1.DFK_IdPublicLegalFormation, T1.DFK_IdParent, T1.DFK_ValidityFrom, T1.DFK_ValidityTo, T1.DFK_IdRoot)
    FROM (
        SELECT 
            T.id AS DFK_Id, 
            T.idRefStatus AS DFK_IdRefStatus, 
            T.Code AS DFK_Code, 
            T.Caption AS DFK_Caption, 
            T.idPublicLegalFormation AS DFK_IdPublicLegalFormation, 
            T.idParent AS DFK_IdParent, 
            T.ValidityFrom AS DFK_ValidityFrom, 
            T.ValidityTo AS DFK_ValidityTo, 
            T.idRoot AS DFK_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.DFK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView447()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DKR", @"
    SELECT VALUE -- Constructing DKR
        [Tests.DKR](T1.DKR_Id, T1.DKR_IdRefStatus, T1.DKR_Code, T1.DKR_Caption, T1.DKR_IdPublicLegalFormation, T1.DKR_IdParent, T1.DKR_ValidityFrom, T1.DKR_ValidityTo, T1.DKR_IdRoot)
    FROM (
        SELECT 
            T.id AS DKR_Id, 
            T.idRefStatus AS DKR_IdRefStatus, 
            T.Code AS DKR_Code, 
            T.Caption AS DKR_Caption, 
            T.idPublicLegalFormation AS DKR_IdPublicLegalFormation, 
            T.idParent AS DKR_IdParent, 
            T.ValidityFrom AS DKR_ValidityFrom, 
            T.ValidityTo AS DKR_ValidityTo, 
            T.idRoot AS DKR_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.DKR AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView448()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DEK", @"
    SELECT VALUE -- Constructing DEK
        [Tests.DEK](T1.DEK_Id, T1.DEK_IdRefStatus, T1.DEK_Code, T1.DEK_Caption, T1.DEK_IdPublicLegalFormation, T1.DEK_IdParent, T1.DEK_ValidityFrom, T1.DEK_ValidityTo, T1.DEK_IdRoot)
    FROM (
        SELECT 
            T.id AS DEK_Id, 
            T.idRefStatus AS DEK_IdRefStatus, 
            T.Code AS DEK_Code, 
            T.Caption AS DEK_Caption, 
            T.idPublicLegalFormation AS DEK_IdPublicLegalFormation, 
            T.idParent AS DEK_IdParent, 
            T.ValidityFrom AS DEK_ValidityFrom, 
            T.ValidityTo AS DEK_ValidityTo, 
            T.idRoot AS DEK_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.DEK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.CodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView449()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.CodeSubsidy", @"
    SELECT VALUE -- Constructing CodeSubsidy
        [Tests.CodeSubsidy](T1.CodeSubsidy_Id, T1.CodeSubsidy_IdRefStatus, T1.CodeSubsidy_Code, T1.CodeSubsidy_Caption, T1.CodeSubsidy_IdPublicLegalFormation, T1.CodeSubsidy_ValidityFrom, T1.CodeSubsidy_ValidityTo, T1.CodeSubsidy_IdRoot, T1.CodeSubsidy_IdParent)
    FROM (
        SELECT 
            T.id AS CodeSubsidy_Id, 
            T.idRefStatus AS CodeSubsidy_IdRefStatus, 
            T.Code AS CodeSubsidy_Code, 
            T.Caption AS CodeSubsidy_Caption, 
            T.idPublicLegalFormation AS CodeSubsidy_IdPublicLegalFormation, 
            T.ValidityFrom AS CodeSubsidy_ValidityFrom, 
            T.ValidityTo AS CodeSubsidy_ValidityTo, 
            T.idRoot AS CodeSubsidy_IdRoot, 
            T.idParent AS CodeSubsidy_IdParent, 
            True AS _from0
        FROM CodeFirstDatabase.CodeSubsidy AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView450()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BranchCode", @"
    SELECT VALUE -- Constructing BranchCode
        [Tests.BranchCode](T1.BranchCode_Id, T1.BranchCode_IdParent, T1.BranchCode_Code, T1.BranchCode_Caption, T1.BranchCode_IdRefStatus, T1.BranchCode_IdPublicLegalFormation, T1.BranchCode_ValidityFrom, T1.BranchCode_ValidityTo, T1.BranchCode_IdRoot)
    FROM (
        SELECT 
            T.id AS BranchCode_Id, 
            T.idParent AS BranchCode_IdParent, 
            T.Code AS BranchCode_Code, 
            T.Caption AS BranchCode_Caption, 
            T.idRefStatus AS BranchCode_IdRefStatus, 
            T.idPublicLegalFormation AS BranchCode_IdPublicLegalFormation, 
            T.ValidityFrom AS BranchCode_ValidityFrom, 
            T.ValidityTo AS BranchCode_ValidityTo, 
            T.idRoot AS BranchCode_IdRoot, 
            True AS _from0
        FROM CodeFirstDatabase.BranchCode AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_ActivityResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView451()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_ActivityResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ActivityResourceMaintenance_Value
        [Tests.ActivityOfSBP_ActivityResourceMaintenance_Value](T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.Id], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.IdHierarchyPeriod], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.Value], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.IdOwner], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.IdMaster], T1.[ActivityOfSBP_ActivityResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_ActivityResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [ActivityOfSBP_ActivityResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_ActivityResourceMaintenance_Value.Value], 
            T.idOwner AS [ActivityOfSBP_ActivityResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [ActivityOfSBP_ActivityResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [ActivityOfSBP_ActivityResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_ActivityResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_IndicatorQualityActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView452()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_IndicatorQualityActivity", @"
    SELECT VALUE -- Constructing ActivityOfSBP_IndicatorQualityActivity
        [Tests.ActivityOfSBP_IndicatorQualityActivity](T1.[ActivityOfSBP_IndicatorQualityActivity.Id], T1.[ActivityOfSBP_IndicatorQualityActivity.IdOwner], T1.[ActivityOfSBP_IndicatorQualityActivity.IdMaster], T1.[ActivityOfSBP_IndicatorQualityActivity.IdIndicatorActivity])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_IndicatorQualityActivity.Id], 
            T.idOwner AS [ActivityOfSBP_IndicatorQualityActivity.IdOwner], 
            T.idMaster AS [ActivityOfSBP_IndicatorQualityActivity.IdMaster], 
            T.idIndicatorActivity AS [ActivityOfSBP_IndicatorQualityActivity.IdIndicatorActivity], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_IndicatorQualityActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_IndicatorQualityActivity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView453()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_IndicatorQualityActivity_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_IndicatorQualityActivity_Value
        [Tests.ActivityOfSBP_IndicatorQualityActivity_Value](T1.[ActivityOfSBP_IndicatorQualityActivity_Value.Id], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.IdHierarchyPeriod], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.Value], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.IdOwner], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.IdMaster], T1.[ActivityOfSBP_IndicatorQualityActivity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_IndicatorQualityActivity_Value.Id], 
            T.idHierarchyPeriod AS [ActivityOfSBP_IndicatorQualityActivity_Value.IdHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_IndicatorQualityActivity_Value.Value], 
            T.idOwner AS [ActivityOfSBP_IndicatorQualityActivity_Value.IdOwner], 
            T.idMaster AS [ActivityOfSBP_IndicatorQualityActivity_Value.IdMaster], 
            T.AdditionalValue AS [ActivityOfSBP_IndicatorQualityActivity_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_IndicatorQualityActivity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_Activity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView454()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_Activity_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_Activity_Value
        [Tests.ActivityOfSBP_Activity_Value](T1.[ActivityOfSBP_Activity_Value.Id], T1.[ActivityOfSBP_Activity_Value.IdHierarchyPeriod], T1.[ActivityOfSBP_Activity_Value.Value], T1.[ActivityOfSBP_Activity_Value.IdOwner], T1.[ActivityOfSBP_Activity_Value.IdMaster], T1.[ActivityOfSBP_Activity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_Activity_Value.Id], 
            T.idHierarchyPeriod AS [ActivityOfSBP_Activity_Value.IdHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_Activity_Value.Value], 
            T.idOwner AS [ActivityOfSBP_Activity_Value.IdOwner], 
            T.idMaster AS [ActivityOfSBP_Activity_Value.IdMaster], 
            T.AdditionalValue AS [ActivityOfSBP_Activity_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_Activity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_ActivityDemandAndCapacity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView455()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_ActivityDemandAndCapacity", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ActivityDemandAndCapacity
        [Tests.ActivityOfSBP_ActivityDemandAndCapacity](T1.[ActivityOfSBP_ActivityDemandAndCapacity.Id], T1.[ActivityOfSBP_ActivityDemandAndCapacity.IdOwner], T1.[ActivityOfSBP_ActivityDemandAndCapacity.IdActivity])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_ActivityDemandAndCapacity.Id], 
            T.idOwner AS [ActivityOfSBP_ActivityDemandAndCapacity.IdOwner], 
            T.idActivity AS [ActivityOfSBP_ActivityDemandAndCapacity.IdActivity], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_ActivityDemandAndCapacity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_ActivityDemandAndCapacity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView456()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_ActivityDemandAndCapacity_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ActivityDemandAndCapacity_Value
        [Tests.ActivityOfSBP_ActivityDemandAndCapacity_Value](T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.Id], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.IdOwner], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.IdMaster], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.IdHierarchyPeriod], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.Demand], T1.[ActivityOfSBP_ActivityDemandAndCapacity_Value.Capacity])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.Id], 
            T.idOwner AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.IdOwner], 
            T.idMaster AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.IdMaster], 
            T.idHierarchyPeriod AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.IdHierarchyPeriod], 
            T.Demand AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.Demand], 
            T.Capacity AS [ActivityOfSBP_ActivityDemandAndCapacity_Value.Capacity], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_ActivityDemandAndCapacity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView457()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_ResourceMaintenance", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ResourceMaintenance
        [Tests.ActivityOfSBP_ResourceMaintenance](T1.[ActivityOfSBP_ResourceMaintenance.Id], T1.[ActivityOfSBP_ResourceMaintenance.IdOwner], T1.[ActivityOfSBP_ResourceMaintenance.IdFinanceSource])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_ResourceMaintenance.Id], 
            T.idOwner AS [ActivityOfSBP_ResourceMaintenance.IdOwner], 
            T.idFinanceSource AS [ActivityOfSBP_ResourceMaintenance.IdFinanceSource], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_ResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ActivityOfSBP_ResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView458()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ActivityOfSBP_ResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing ActivityOfSBP_ResourceMaintenance_Value
        [Tests.ActivityOfSBP_ResourceMaintenance_Value](T1.[ActivityOfSBP_ResourceMaintenance_Value.Id], T1.[ActivityOfSBP_ResourceMaintenance_Value.IdHierarchyPeriod], T1.[ActivityOfSBP_ResourceMaintenance_Value.Value], T1.[ActivityOfSBP_ResourceMaintenance_Value.IdOwner], T1.[ActivityOfSBP_ResourceMaintenance_Value.IdMaster], T1.[ActivityOfSBP_ResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [ActivityOfSBP_ResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [ActivityOfSBP_ResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [ActivityOfSBP_ResourceMaintenance_Value.Value], 
            T.idOwner AS [ActivityOfSBP_ResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [ActivityOfSBP_ResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [ActivityOfSBP_ResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.ActivityOfSBP_ResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DirectionAndFundingOfDepartment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView459()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2237);
            viewString.Append("\r\n    SELECT VALUE -- Constructing DirectionAndFundingOfDepartment\r\n        [Tes");
            viewString.Append("ts.DirectionAndFundingOfDepartment](T1.DirectionAndFundingOfDepartment_Id, T1.Di");
            viewString.Append("rectionAndFundingOfDepartment_IsTemporary, T1.DirectionAndFundingOfDepartment_Id");
            viewString.Append("PublicLegalFormation, T1.DirectionAndFundingOfDepartment_IdBudget, T1.DirectionA");
            viewString.Append("ndFundingOfDepartment_IdVersion, T1.DirectionAndFundingOfDepartment_Caption, T1.");
            viewString.Append("DirectionAndFundingOfDepartment_IdProgram, T1.DirectionAndFundingOfDepartment_By");
            viewString.Append("Approved, T1.DirectionAndFundingOfDepartment_IsRatingAdditionalNeeds, T1.Directi");
            viewString.Append("onAndFundingOfDepartment_DateReport, T1.DirectionAndFundingOfDepartment_RepeatTa");
            viewString.Append("bleHeader, T1.DirectionAndFundingOfDepartment_IdReportProfileType, T1.DirectionA");
            viewString.Append("ndFundingOfDepartment_IdReportProfileUser, T1.DirectionAndFundingOfDepartment_Re");
            viewString.Append("portProfileCaption, T1.DirectionAndFundingOfDepartment_IdSourcesDataReports)\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.id AS DirectionAndFundingOfDepartment_I");
            viewString.Append("d, \r\n            T.isTemporary AS DirectionAndFundingOfDepartment_IsTemporary, \r");
            viewString.Append("\n            T.idPublicLegalFormation AS DirectionAndFundingOfDepartment_IdPubli");
            viewString.Append("cLegalFormation, \r\n            T.idBudget AS DirectionAndFundingOfDepartment_IdB");
            viewString.Append("udget, \r\n            T.idVersion AS DirectionAndFundingOfDepartment_IdVersion, \r");
            viewString.Append("\n            T.Caption AS DirectionAndFundingOfDepartment_Caption, \r\n           ");
            viewString.Append(" T.idProgram AS DirectionAndFundingOfDepartment_IdProgram, \r\n            T.byApp");
            viewString.Append("roved AS DirectionAndFundingOfDepartment_ByApproved, \r\n            T.isRatingAdd");
            viewString.Append("itionalNeeds AS DirectionAndFundingOfDepartment_IsRatingAdditionalNeeds, \r\n     ");
            viewString.Append("       T.DateReport AS DirectionAndFundingOfDepartment_DateReport, \r\n           ");
            viewString.Append(" T.repeatTableHeader AS DirectionAndFundingOfDepartment_RepeatTableHeader, \r\n   ");
            viewString.Append("         T.idReportProfileType AS DirectionAndFundingOfDepartment_IdReportProfil");
            viewString.Append("eType, \r\n            T.idReportProfileUser AS DirectionAndFundingOfDepartment_Id");
            viewString.Append("ReportProfileUser, \r\n            T.ReportProfileCaption AS DirectionAndFundingOf");
            viewString.Append("Department_ReportProfileCaption, \r\n            T.idSourcesDataReports AS Directi");
            viewString.Append("onAndFundingOfDepartment_IdSourcesDataReports, \r\n            True AS _from0\r\n   ");
            viewString.Append("     FROM CodeFirstDatabase.DirectionAndFundingOfDepartment AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DirectionAndFundingOfDepartment", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.AnalysisBAofDirectAndIndirectCost
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView460()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.AnalysisBAofDirectAndIndirectCost", "\r\n    SELECT VALUE -- Constructing AnalysisBAofDirectAndIndirectCost\r\n        [Te" +
                    "sts.AnalysisBAofDirectAndIndirectCost](T1.AnalysisBAofDirectAndIndirectCost_Id, " +
                    "T1.AnalysisBAofDirectAndIndirectCost_ReportProfileCaption, T1.AnalysisBAofDirect" +
                    "AndIndirectCost_IdReportProfileType, T1.AnalysisBAofDirectAndIndirectCost_IdRepo" +
                    "rtProfileUser, T1.AnalysisBAofDirectAndIndirectCost_IsTemporary, T1.AnalysisBAof" +
                    "DirectAndIndirectCost_IdBudget, T1.AnalysisBAofDirectAndIndirectCost_IdVersion, " +
                    "T1.AnalysisBAofDirectAndIndirectCost_ByApproved, T1.AnalysisBAofDirectAndIndirec" +
                    "tCost_DateReport, T1.AnalysisBAofDirectAndIndirectCost_RepeatTableHeader, T1.Ana" +
                    "lysisBAofDirectAndIndirectCost_IdUnitDimension, T1.AnalysisBAofDirectAndIndirect" +
                    "Cost_ByActivity, T1.AnalysisBAofDirectAndIndirectCost_BySBP)\r\n    FROM (\r\n      " +
                    "  SELECT \r\n            T.id AS AnalysisBAofDirectAndIndirectCost_Id, \r\n         " +
                    "   T.ReportProfileCaption AS AnalysisBAofDirectAndIndirectCost_ReportProfileCapt" +
                    "ion, \r\n            T.idReportProfileType AS AnalysisBAofDirectAndIndirectCost_Id" +
                    "ReportProfileType, \r\n            T.idReportProfileUser AS AnalysisBAofDirectAndI" +
                    "ndirectCost_IdReportProfileUser, \r\n            T.isTemporary AS AnalysisBAofDire" +
                    "ctAndIndirectCost_IsTemporary, \r\n            T.idBudget AS AnalysisBAofDirectAnd" +
                    "IndirectCost_IdBudget, \r\n            T.idVersion AS AnalysisBAofDirectAndIndirec" +
                    "tCost_IdVersion, \r\n            T.byApproved AS AnalysisBAofDirectAndIndirectCost" +
                    "_ByApproved, \r\n            T.DateReport AS AnalysisBAofDirectAndIndirectCost_Dat" +
                    "eReport, \r\n            T.repeatTableHeader AS AnalysisBAofDirectAndIndirectCost_" +
                    "RepeatTableHeader, \r\n            T.idUnitDimension AS AnalysisBAofDirectAndIndir" +
                    "ectCost_IdUnitDimension, \r\n            T.byActivity AS AnalysisBAofDirectAndIndi" +
                    "rectCost_ByActivity, \r\n            T.bySBP AS AnalysisBAofDirectAndIndirectCost_" +
                    "BySBP, \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.AnalysisBAof" +
                    "DirectAndIndirectCost AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.EditionsComparision
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView461()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EditionsComparision", @"
    SELECT VALUE -- Constructing EditionsComparision
        [Tests.EditionsComparision](T1.EditionsComparision_Id, T1.EditionsComparision_IsTemporary, T1.EditionsComparision_IdEditionA, T1.EditionsComparision_IdEditionAEntity, T1.EditionsComparision_IdEditionB, T1.EditionsComparision_IdEditionBEntity, T1.EditionsComparision_ReportProfileCaption, T1.EditionsComparision_IdReportProfileType, T1.EditionsComparision_IdReportProfileUser)
    FROM (
        SELECT 
            T.id AS EditionsComparision_Id, 
            T.isTemporary AS EditionsComparision_IsTemporary, 
            T.idEditionA AS EditionsComparision_IdEditionA, 
            T.idEditionAEntity AS EditionsComparision_IdEditionAEntity, 
            T.idEditionB AS EditionsComparision_IdEditionB, 
            T.idEditionBEntity AS EditionsComparision_IdEditionBEntity, 
            T.ReportProfileCaption AS EditionsComparision_ReportProfileCaption, 
            T.idReportProfileType AS EditionsComparision_IdReportProfileType, 
            T.idReportProfileUser AS EditionsComparision_IdReportProfileUser, 
            True AS _from0
        FROM CodeFirstDatabase.EditionsComparision AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Report1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView462()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Report1", @"
    SELECT VALUE -- Constructing Report1
        [Tests.Report1](T1.Report1_Id, T1.Report1_IsTemporary, T1.Report1_Text, T1.Report1_SBP, T1.Report1_Boolean, T1.Report1_Date, T1.Report1_ReportProfileCaption, T1.Report1_IdReportProfileType, T1.Report1_IdReportProfileUser)
    FROM (
        SELECT 
            T.id AS Report1_Id, 
            T.isTemporary AS Report1_IsTemporary, 
            T.Text AS Report1_Text, 
            T.SBP AS Report1_SBP, 
            T.Boolean AS Report1_Boolean, 
            T.Date AS Report1_Date, 
            T.ReportProfileCaption AS Report1_ReportProfileCaption, 
            T.idReportProfileType AS Report1_IdReportProfileType, 
            T.idReportProfileUser AS Report1_IdReportProfileUser, 
            True AS _from0
        FROM CodeFirstDatabase.Report1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Report1_Tp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView463()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Report1_Tp", @"
    SELECT VALUE -- Constructing Report1_Tp
        [Tests.Report1_Tp](T1.[Report1_Tp.Id], T1.[Report1_Tp.IdOwner], T1.[Report1_Tp.Name])
    FROM (
        SELECT 
            T.id AS [Report1_Tp.Id], 
            T.idOwner AS [Report1_Tp.IdOwner], 
            T.Name AS [Report1_Tp.Name], 
            True AS _from0
        FROM CodeFirstDatabase.Report1_Tp AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestAuditReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView464()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestAuditReport", @"
    SELECT VALUE -- Constructing TestAuditReport
        [Tests.TestAuditReport](T1.TestAuditReport_Id, T1.TestAuditReport_IsTemporary, T1.TestAuditReport_DateFrom, T1.TestAuditReport_DateTo, T1.TestAuditReport_IdUser, T1.TestAuditReport_ReportProfileCaption, T1.TestAuditReport_IdReportProfileType, T1.TestAuditReport_IdReportProfileUser)
    FROM (
        SELECT 
            T.id AS TestAuditReport_Id, 
            T.isTemporary AS TestAuditReport_IsTemporary, 
            T.DateFrom AS TestAuditReport_DateFrom, 
            T.DateTo AS TestAuditReport_DateTo, 
            T.idUser AS TestAuditReport_IdUser, 
            T.ReportProfileCaption AS TestAuditReport_ReportProfileCaption, 
            T.idReportProfileType AS TestAuditReport_IdReportProfileType, 
            T.idReportProfileUser AS TestAuditReport_IdReportProfileUser, 
            True AS _from0
        FROM CodeFirstDatabase.TestAuditReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView465()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure\r\n        [Tests.Consol" +
                    "idatedExpenditure](T1.ConsolidatedExpenditure_Id, T1.ConsolidatedExpenditure_Rep" +
                    "ortProfileCaption, T1.ConsolidatedExpenditure_IdReportProfileType, T1.Consolidat" +
                    "edExpenditure_IdReportProfileUser, T1.ConsolidatedExpenditure_IsTemporary, T1.Co" +
                    "nsolidatedExpenditure_IdPublicLegalFormation, T1.ConsolidatedExpenditure_IdHiera" +
                    "rchyPeriod, T1.ConsolidatedExpenditure_IdUnitDimension, T1.ConsolidatedExpenditu" +
                    "re_IdSourcesDataReports, T1.ConsolidatedExpenditure_IsApprovedOnly, T1.Consolida" +
                    "tedExpenditure_ReportDate, T1.ConsolidatedExpenditure_Caption, T1.ConsolidatedEx" +
                    "penditure_RepeatTableHeader, T1.ConsolidatedExpenditure_IdCurrentPPO)\r\n    FROM " +
                    "(\r\n        SELECT \r\n            T.id AS ConsolidatedExpenditure_Id, \r\n          " +
                    "  T.ReportProfileCaption AS ConsolidatedExpenditure_ReportProfileCaption, \r\n    " +
                    "        T.idReportProfileType AS ConsolidatedExpenditure_IdReportProfileType, \r\n" +
                    "            T.idReportProfileUser AS ConsolidatedExpenditure_IdReportProfileUser" +
                    ", \r\n            T.isTemporary AS ConsolidatedExpenditure_IsTemporary, \r\n        " +
                    "    T.idPublicLegalFormation AS ConsolidatedExpenditure_IdPublicLegalFormation, " +
                    "\r\n            T.idHierarchyPeriod AS ConsolidatedExpenditure_IdHierarchyPeriod, " +
                    "\r\n            T.idUnitDimension AS ConsolidatedExpenditure_IdUnitDimension, \r\n  " +
                    "          T.idSourcesDataReports AS ConsolidatedExpenditure_IdSourcesDataReports" +
                    ", \r\n            T.isApprovedOnly AS ConsolidatedExpenditure_IsApprovedOnly, \r\n  " +
                    "          T.ReportDate AS ConsolidatedExpenditure_ReportDate, \r\n            T.Ca" +
                    "ption AS ConsolidatedExpenditure_Caption, \r\n            T.repeatTableHeader AS C" +
                    "onsolidatedExpenditure_RepeatTableHeader, \r\n            T.idCurrentPPO AS Consol" +
                    "idatedExpenditure_IdCurrentPPO, \r\n            True AS _from0\r\n        FROM CodeF" +
                    "irstDatabase.ConsolidatedExpenditure AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_PPO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView466()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_PPO", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_PPO
        [Tests.ConsolidatedExpenditure_PPO](T1.[ConsolidatedExpenditure_PPO.Id], T1.[ConsolidatedExpenditure_PPO.IdOwner], T1.[ConsolidatedExpenditure_PPO.IdPublicLegalFormation], T1.[ConsolidatedExpenditure_PPO.IdBudget], T1.[ConsolidatedExpenditure_PPO.IdVersion])
    FROM (
        SELECT 
            T.id AS [ConsolidatedExpenditure_PPO.Id], 
            T.idOwner AS [ConsolidatedExpenditure_PPO.IdOwner], 
            T.idPublicLegalFormation AS [ConsolidatedExpenditure_PPO.IdPublicLegalFormation], 
            T.idBudget AS [ConsolidatedExpenditure_PPO.IdBudget], 
            T.idVersion AS [ConsolidatedExpenditure_PPO.IdVersion], 
            True AS _from0
        FROM CodeFirstDatabase.ConsolidatedExpenditure_PPO AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView467()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2768);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter\r\n        [");
            viewString.Append("Tests.ConsolidatedExpenditure_BaseFilter](T1.[ConsolidatedExpenditure_BaseFilter");
            viewString.Append(".Id], T1.[ConsolidatedExpenditure_BaseFilter.IdOwner], T1.[ConsolidatedExpenditu");
            viewString.Append("re_BaseFilter.IdFilterFieldType_DKR], T1.[ConsolidatedExpenditure_BaseFilter.IdF");
            viewString.Append("ilterFieldType_DFK], T1.[ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_DE");
            viewString.Append("K], T1.[ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_FinanceSource], T1.");
            viewString.Append("[ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_KVR], T1.[ConsolidatedExpe");
            viewString.Append("nditure_BaseFilter.IdFilterFieldType_KVSR], T1.[ConsolidatedExpenditure_BaseFilt");
            viewString.Append("er.IdFilterFieldType_CodeSubsidy], T1.[ConsolidatedExpenditure_BaseFilter.IdFilt");
            viewString.Append("erFieldType_KOSGU], T1.[ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_KFO");
            viewString.Append("], T1.[ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_KCSR], T1.[Consolida");
            viewString.Append("tedExpenditure_BaseFilter.IdFilterFieldType_BranchCode], T1.[ConsolidatedExpendi");
            viewString.Append("ture_BaseFilter.IdFilterFieldType_RZPR], T1.[ConsolidatedExpenditure_BaseFilter.");
            viewString.Append("IdFilterFieldType_ExpenseObligationType])\r\n    FROM (\r\n        SELECT \r\n        ");
            viewString.Append("    T.id AS [ConsolidatedExpenditure_BaseFilter.Id], \r\n            T.idOwner AS ");
            viewString.Append("[ConsolidatedExpenditure_BaseFilter.IdOwner], \r\n            T.idFilterFieldType_");
            viewString.Append("DKR AS [ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_DKR], \r\n           ");
            viewString.Append(" T.idFilterFieldType_DFK AS [ConsolidatedExpenditure_BaseFilter.IdFilterFieldTyp");
            viewString.Append("e_DFK], \r\n            T.idFilterFieldType_DEK AS [ConsolidatedExpenditure_BaseFi");
            viewString.Append("lter.IdFilterFieldType_DEK], \r\n            T.idFilterFieldType_FinanceSource AS ");
            viewString.Append("[ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_FinanceSource], \r\n        ");
            viewString.Append("    T.idFilterFieldType_KVR AS [ConsolidatedExpenditure_BaseFilter.IdFilterField");
            viewString.Append("Type_KVR], \r\n            T.idFilterFieldType_KVSR AS [ConsolidatedExpenditure_Ba");
            viewString.Append("seFilter.IdFilterFieldType_KVSR], \r\n            T.idFilterFieldType_CodeSubsidy ");
            viewString.Append("AS [ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_CodeSubsidy], \r\n       ");
            viewString.Append("     T.idFilterFieldType_KOSGU AS [ConsolidatedExpenditure_BaseFilter.IdFilterFi");
            viewString.Append("eldType_KOSGU], \r\n            T.idFilterFieldType_KFO AS [ConsolidatedExpenditur");
            viewString.Append("e_BaseFilter.IdFilterFieldType_KFO], \r\n            T.idFilterFieldType_KCSR AS [");
            viewString.Append("ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_KCSR], \r\n            T.idFi");
            viewString.Append("lterFieldType_BranchCode AS [ConsolidatedExpenditure_BaseFilter.IdFilterFieldTyp");
            viewString.Append("e_BranchCode], \r\n            T.idFilterFieldType_RZPR AS [ConsolidatedExpenditur");
            viewString.Append("e_BaseFilter.IdFilterFieldType_RZPR], \r\n            T.idFilterFieldType_ExpenseO");
            viewString.Append("bligationType AS [ConsolidatedExpenditure_BaseFilter.IdFilterFieldType_ExpenseOb");
            viewString.Append("ligationType], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.Cons");
            viewString.Append("olidatedExpenditure_BaseFilter AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView468()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType", @"
    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_ExpenseObligationType
        [Tests.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType](T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.Id], T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.IdOwner], T1.[ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.IdExpenseObligationType])
    FROM (
        SELECT 
            T.id AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.Id], 
            T.idOwner AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.IdOwner], 
            T.idExpenseObligationType AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType.IdExpenseObligationType], 
            True AS _from0
        FROM CodeFirstDatabase.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.GoalTargetsOfProgramSbp
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView469()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.GoalTargetsOfProgramSbp", "\r\n    SELECT VALUE -- Constructing GoalTargetsOfProgramSbp\r\n        [Tests.GoalTa" +
                    "rgetsOfProgramSbp](T1.GoalTargetsOfProgramSbp_Id, T1.GoalTargetsOfProgramSbp_Rep" +
                    "ortProfileCaption, T1.GoalTargetsOfProgramSbp_IdReportProfileType, T1.GoalTarget" +
                    "sOfProgramSbp_IdReportProfileUser, T1.GoalTargetsOfProgramSbp_IsTemporary, T1.Go" +
                    "alTargetsOfProgramSbp_IdPublicLegalFormation, T1.GoalTargetsOfProgramSbp_DateRep" +
                    "ort, T1.GoalTargetsOfProgramSbp_ByApproved, T1.GoalTargetsOfProgramSbp_IdVersion" +
                    ", T1.GoalTargetsOfProgramSbp_RepeatTableHeader, T1.GoalTargetsOfProgramSbp_Capti" +
                    "on, T1.GoalTargetsOfProgramSbp_IdProgram)\r\n    FROM (\r\n        SELECT \r\n        " +
                    "    T.id AS GoalTargetsOfProgramSbp_Id, \r\n            T.ReportProfileCaption AS " +
                    "GoalTargetsOfProgramSbp_ReportProfileCaption, \r\n            T.idReportProfileTyp" +
                    "e AS GoalTargetsOfProgramSbp_IdReportProfileType, \r\n            T.idReportProfil" +
                    "eUser AS GoalTargetsOfProgramSbp_IdReportProfileUser, \r\n            T.isTemporar" +
                    "y AS GoalTargetsOfProgramSbp_IsTemporary, \r\n            T.idPublicLegalFormation" +
                    " AS GoalTargetsOfProgramSbp_IdPublicLegalFormation, \r\n            T.DateReport A" +
                    "S GoalTargetsOfProgramSbp_DateReport, \r\n            T.byApproved AS GoalTargetsO" +
                    "fProgramSbp_ByApproved, \r\n            T.idVersion AS GoalTargetsOfProgramSbp_IdV" +
                    "ersion, \r\n            T.repeatTableHeader AS GoalTargetsOfProgramSbp_RepeatTable" +
                    "Header, \r\n            T.Caption AS GoalTargetsOfProgramSbp_Caption, \r\n          " +
                    "  T.idProgram AS GoalTargetsOfProgramSbp_IdProgram, \r\n            True AS _from0" +
                    "\r\n        FROM CodeFirstDatabase.GoalTargetsOfProgramSbp AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.NeedForTheProvisionOfActivitySbpWithinTheStateProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView470()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2405);
            viewString.Append("\r\n    SELECT VALUE -- Constructing NeedForTheProvisionOfActivitySbpWithinTheStat");
            viewString.Append("eProgram\r\n        [Tests.NeedForTheProvisionOfActivitySbpWithinTheStateProgram](");
            viewString.Append("T1.NeedForTheProvisionOfActivitySbpWithinTheStateProgram_Id, T1.NeedForTheProvis");
            viewString.Append("ionOfActivitySbpWithinTheStateProgram_ReportProfileCaption, T1.NeedForTheProvisi");
            viewString.Append("onOfActivitySbpWithinTheStateProgram_IdReportProfileType, T1.NeedForTheProvision");
            viewString.Append("OfActivitySbpWithinTheStateProgram_IdReportProfileUser, T1.NeedForTheProvisionOf");
            viewString.Append("ActivitySbpWithinTheStateProgram_IsTemporary, T1.NeedForTheProvisionOfActivitySb");
            viewString.Append("pWithinTheStateProgram_IdPublicLegalFormation, T1.NeedForTheProvisionOfActivityS");
            viewString.Append("bpWithinTheStateProgram_DateReport, T1.NeedForTheProvisionOfActivitySbpWithinThe");
            viewString.Append("StateProgram_ByApproved, T1.NeedForTheProvisionOfActivitySbpWithinTheStateProgra");
            viewString.Append("m_IdVersion, T1.NeedForTheProvisionOfActivitySbpWithinTheStateProgram_RepeatTabl");
            viewString.Append("eHeader, T1.NeedForTheProvisionOfActivitySbpWithinTheStateProgram_Caption, T1.Ne");
            viewString.Append("edForTheProvisionOfActivitySbpWithinTheStateProgram_IdProgram)\r\n    FROM (\r\n    ");
            viewString.Append("    SELECT \r\n            T.id AS NeedForTheProvisionOfActivitySbpWithinTheStateP");
            viewString.Append("rogram_Id, \r\n            T.ReportProfileCaption AS NeedForTheProvisionOfActivity");
            viewString.Append("SbpWithinTheStateProgram_ReportProfileCaption, \r\n            T.idReportProfileTy");
            viewString.Append("pe AS NeedForTheProvisionOfActivitySbpWithinTheStateProgram_IdReportProfileType,");
            viewString.Append(" \r\n            T.idReportProfileUser AS NeedForTheProvisionOfActivitySbpWithinTh");
            viewString.Append("eStateProgram_IdReportProfileUser, \r\n            T.isTemporary AS NeedForTheProv");
            viewString.Append("isionOfActivitySbpWithinTheStateProgram_IsTemporary, \r\n            T.idPublicLeg");
            viewString.Append("alFormation AS NeedForTheProvisionOfActivitySbpWithinTheStateProgram_IdPublicLeg");
            viewString.Append("alFormation, \r\n            T.DateReport AS NeedForTheProvisionOfActivitySbpWithi");
            viewString.Append("nTheStateProgram_DateReport, \r\n            T.byApproved AS NeedForTheProvisionOf");
            viewString.Append("ActivitySbpWithinTheStateProgram_ByApproved, \r\n            T.idVersion AS NeedFo");
            viewString.Append("rTheProvisionOfActivitySbpWithinTheStateProgram_IdVersion, \r\n            T.repea");
            viewString.Append("tTableHeader AS NeedForTheProvisionOfActivitySbpWithinTheStateProgram_RepeatTabl");
            viewString.Append("eHeader, \r\n            T.Caption AS NeedForTheProvisionOfActivitySbpWithinTheSta");
            viewString.Append("teProgram_Caption, \r\n            T.idProgram AS NeedForTheProvisionOfActivitySbp");
            viewString.Append("WithinTheStateProgram_IdProgram, \r\n            True AS _from0\r\n        FROM Code");
            viewString.Append("FirstDatabase.NeedForTheProvisionOfActivitySbpWithinTheStateProgram AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.NeedForTheProvisionOfActivitySbpWithinTheStateProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.JustificationOfBudget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView471()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.JustificationOfBudget", "\r\n    SELECT VALUE -- Constructing JustificationOfBudget\r\n        [Tests.Justific" +
                    "ationOfBudget](T1.JustificationOfBudget_Id, T1.JustificationOfBudget_ReportProfi" +
                    "leCaption, T1.JustificationOfBudget_IdReportProfileType, T1.JustificationOfBudge" +
                    "t_IdReportProfileUser, T1.JustificationOfBudget_IsTemporary, T1.JustificationOfB" +
                    "udget_IdPublicLegalFormation, T1.JustificationOfBudget_IdBudget, T1.Justificatio" +
                    "nOfBudget_DateReport, T1.JustificationOfBudget_ByApproved, T1.JustificationOfBud" +
                    "get_IdVersion, T1.JustificationOfBudget_RepeatTableHeader, T1.JustificationOfBud" +
                    "get_HasAdditionalNeed, T1.JustificationOfBudget_IdSBP)\r\n    FROM (\r\n        SELE" +
                    "CT \r\n            T.id AS JustificationOfBudget_Id, \r\n            T.ReportProfile" +
                    "Caption AS JustificationOfBudget_ReportProfileCaption, \r\n            T.idReportP" +
                    "rofileType AS JustificationOfBudget_IdReportProfileType, \r\n            T.idRepor" +
                    "tProfileUser AS JustificationOfBudget_IdReportProfileUser, \r\n            T.isTem" +
                    "porary AS JustificationOfBudget_IsTemporary, \r\n            T.idPublicLegalFormat" +
                    "ion AS JustificationOfBudget_IdPublicLegalFormation, \r\n            T.idBudget AS" +
                    " JustificationOfBudget_IdBudget, \r\n            T.DateReport AS JustificationOfBu" +
                    "dget_DateReport, \r\n            T.byApproved AS JustificationOfBudget_ByApproved," +
                    " \r\n            T.idVersion AS JustificationOfBudget_IdVersion, \r\n            T.r" +
                    "epeatTableHeader AS JustificationOfBudget_RepeatTableHeader, \r\n            T.Has" +
                    "AdditionalNeed AS JustificationOfBudget_HasAdditionalNeed, \r\n            T.idSBP" +
                    " AS JustificationOfBudget_IdSBP, \r\n            True AS _from0\r\n        FROM Code" +
                    "FirstDatabase.JustificationOfBudget AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ListRemovedFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView472()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ListRemovedFields", @"
    SELECT VALUE -- Constructing ListRemovedFields
        [Tests.ListRemovedFields](T1.ListRemovedFields_Id, T1.ListRemovedFields_Caption, T1.ListRemovedFields_Number, T1.ListRemovedFields_IdEntity)
    FROM (
        SELECT 
            T.id AS ListRemovedFields_Id, 
            T.Caption AS ListRemovedFields_Caption, 
            T.Number AS ListRemovedFields_Number, 
            T.idEntity AS ListRemovedFields_IdEntity, 
            True AS _from0
        FROM CodeFirstDatabase.ListRemovedFields AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.CostGoals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView473()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.CostGoals", @"
    SELECT VALUE -- Constructing CostGoals
        [Tests.CostGoals](T1.CostGoals_Id, T1.CostGoals_ReportProfileCaption, T1.CostGoals_IdReportProfileType, T1.CostGoals_IdReportProfileUser, T1.CostGoals_IsTemporary, T1.CostGoals_IdPublicLegalFormation, T1.CostGoals_IdBudget, T1.CostGoals_DateReport, T1.CostGoals_ByApproved, T1.CostGoals_IdVersion, T1.CostGoals_RepeatTableHeader)
    FROM (
        SELECT 
            T.id AS CostGoals_Id, 
            T.ReportProfileCaption AS CostGoals_ReportProfileCaption, 
            T.idReportProfileType AS CostGoals_IdReportProfileType, 
            T.idReportProfileUser AS CostGoals_IdReportProfileUser, 
            T.isTemporary AS CostGoals_IsTemporary, 
            T.idPublicLegalFormation AS CostGoals_IdPublicLegalFormation, 
            T.idBudget AS CostGoals_IdBudget, 
            T.DateReport AS CostGoals_DateReport, 
            T.byApproved AS CostGoals_ByApproved, 
            T.idVersion AS CostGoals_IdVersion, 
            T.repeatTableHeader AS CostGoals_RepeatTableHeader, 
            True AS _from0
        FROM CodeFirstDatabase.CostGoals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView474()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2408);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers\r\n        [Tests.Inter");
            viewString.Append("BudgetaryTransfers](T1.InterBudgetaryTransfers_Id, T1.InterBudgetaryTransfers_Re");
            viewString.Append("portProfileCaption, T1.InterBudgetaryTransfers_IdReportProfileType, T1.InterBudg");
            viewString.Append("etaryTransfers_IdReportProfileUser, T1.InterBudgetaryTransfers_IsTemporary, T1.I");
            viewString.Append("nterBudgetaryTransfers_IdPublicLegalFormation, T1.InterBudgetaryTransfers_IdBudg");
            viewString.Append("et, T1.InterBudgetaryTransfers_IdVersion, T1.InterBudgetaryTransfers_ByApproved,");
            viewString.Append(" T1.InterBudgetaryTransfers_DateReport, T1.InterBudgetaryTransfers_IdUnitDimensi");
            viewString.Append("on, T1.InterBudgetaryTransfers_IdSourcesDataReports, T1.InterBudgetaryTransfers_");
            viewString.Append("RepeatTableHeader, T1.InterBudgetaryTransfers_Caption, T1.InterBudgetaryTransfer");
            viewString.Append("s_IsShowYear, T1.InterBudgetaryTransfers_IsShowYear1, T1.InterBudgetaryTransfers");
            viewString.Append("_IsShowYear2, T1.InterBudgetaryTransfers_IsShowUnallocatedReserve, T1.InterBudge");
            viewString.Append("taryTransfers_Header)\r\n    FROM (\r\n        SELECT \r\n            T.id AS InterBud");
            viewString.Append("getaryTransfers_Id, \r\n            T.ReportProfileCaption AS InterBudgetaryTransf");
            viewString.Append("ers_ReportProfileCaption, \r\n            T.idReportProfileType AS InterBudgetaryT");
            viewString.Append("ransfers_IdReportProfileType, \r\n            T.idReportProfileUser AS InterBudget");
            viewString.Append("aryTransfers_IdReportProfileUser, \r\n            T.isTemporary AS InterBudgetaryT");
            viewString.Append("ransfers_IsTemporary, \r\n            T.idPublicLegalFormation AS InterBudgetaryTr");
            viewString.Append("ansfers_IdPublicLegalFormation, \r\n            T.idBudget AS InterBudgetaryTransf");
            viewString.Append("ers_IdBudget, \r\n            T.idVersion AS InterBudgetaryTransfers_IdVersion, \r\n");
            viewString.Append("            T.byApproved AS InterBudgetaryTransfers_ByApproved, \r\n            T.");
            viewString.Append("DateReport AS InterBudgetaryTransfers_DateReport, \r\n            T.idUnitDimensio");
            viewString.Append("n AS InterBudgetaryTransfers_IdUnitDimension, \r\n            T.idSourcesDataRepor");
            viewString.Append("ts AS InterBudgetaryTransfers_IdSourcesDataReports, \r\n            T.repeatTableH");
            viewString.Append("eader AS InterBudgetaryTransfers_RepeatTableHeader, \r\n            T.Caption AS I");
            viewString.Append("nterBudgetaryTransfers_Caption, \r\n            T.IsShowYear AS InterBudgetaryTran");
            viewString.Append("sfers_IsShowYear, \r\n            T.IsShowYear1 AS InterBudgetaryTransfers_IsShowY");
            viewString.Append("ear1, \r\n            T.IsShowYear2 AS InterBudgetaryTransfers_IsShowYear2, \r\n    ");
            viewString.Append("        T.IsShowUnallocatedReserve AS InterBudgetaryTransfers_IsShowUnallocatedR");
            viewString.Append("eserve, \r\n            T.Header AS InterBudgetaryTransfers_Header, \r\n            ");
            viewString.Append("True AS _from0\r\n        FROM CodeFirstDatabase.InterBudgetaryTransfers AS T\r\n   ");
            viewString.Append(" ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_CustomizableColumns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView475()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_CustomizableColumns", @"
    SELECT VALUE -- Constructing InterBudgetaryTransfers_CustomizableColumns
        [Tests.InterBudgetaryTransfers_CustomizableColumns](T1.[InterBudgetaryTransfers_CustomizableColumns.Id], T1.[InterBudgetaryTransfers_CustomizableColumns.IdOwner], T1.[InterBudgetaryTransfers_CustomizableColumns.Caption], T1.[InterBudgetaryTransfers_CustomizableColumns.IdParent], T1.[InterBudgetaryTransfers_CustomizableColumns.Order])
    FROM (
        SELECT 
            T.id AS [InterBudgetaryTransfers_CustomizableColumns.Id], 
            T.idOwner AS [InterBudgetaryTransfers_CustomizableColumns.IdOwner], 
            T.Caption AS [InterBudgetaryTransfers_CustomizableColumns.Caption], 
            T.idParent AS [InterBudgetaryTransfers_CustomizableColumns.IdParent], 
            T.[Order] AS [InterBudgetaryTransfers_CustomizableColumns.Order], 
            True AS _from0
        FROM CodeFirstDatabase.InterBudgetaryTransfers_CustomizableColumns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView476()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2998);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK\r\n      ");
            viewString.Append("  [Tests.InterBudgetaryTransfers_RuleFilterKBK](T1.[InterBudgetaryTransfers_Rule");
            viewString.Append("FilterKBK.Id], T1.[InterBudgetaryTransfers_RuleFilterKBK.IdOwner], T1.[InterBudg");
            viewString.Append("etaryTransfers_RuleFilterKBK.IdMaster], T1.[InterBudgetaryTransfers_RuleFilterKB");
            viewString.Append("K.IdFilterFieldType_BranchCode], T1.[InterBudgetaryTransfers_RuleFilterKBK.IdFil");
            viewString.Append("terFieldType_CodeSubsidy], T1.[InterBudgetaryTransfers_RuleFilterKBK.IdFilterFie");
            viewString.Append("ldType_DEK], T1.[InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_DFK], T");
            viewString.Append("1.[InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_DKR], T1.[InterBudget");
            viewString.Append("aryTransfers_RuleFilterKBK.IdFilterFieldType_ExpenseObligationType], T1.[InterBu");
            viewString.Append("dgetaryTransfers_RuleFilterKBK.IdFilterFieldType_FinanceSource], T1.[InterBudget");
            viewString.Append("aryTransfers_RuleFilterKBK.IdFilterFieldType_KCSR], T1.[InterBudgetaryTransfers_");
            viewString.Append("RuleFilterKBK.IdFilterFieldType_KFO], T1.[InterBudgetaryTransfers_RuleFilterKBK.");
            viewString.Append("IdFilterFieldType_KOSGU], T1.[InterBudgetaryTransfers_RuleFilterKBK.IdFilterFiel");
            viewString.Append("dType_KVR], T1.[InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_KVSR], T");
            viewString.Append("1.[InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_RZPR])\r\n    FROM (\r\n ");
            viewString.Append("       SELECT \r\n            T.id AS [InterBudgetaryTransfers_RuleFilterKBK.Id], ");
            viewString.Append("\r\n            T.idOwner AS [InterBudgetaryTransfers_RuleFilterKBK.IdOwner], \r\n  ");
            viewString.Append("          T.idMaster AS [InterBudgetaryTransfers_RuleFilterKBK.IdMaster], \r\n    ");
            viewString.Append("        T.idFilterFieldType_BranchCode AS [InterBudgetaryTransfers_RuleFilterKBK");
            viewString.Append(".IdFilterFieldType_BranchCode], \r\n            T.idFilterFieldType_CodeSubsidy AS");
            viewString.Append(" [InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_CodeSubsidy], \r\n      ");
            viewString.Append("      T.idFilterFieldType_DEK AS [InterBudgetaryTransfers_RuleFilterKBK.IdFilter");
            viewString.Append("FieldType_DEK], \r\n            T.idFilterFieldType_DFK AS [InterBudgetaryTransfer");
            viewString.Append("s_RuleFilterKBK.IdFilterFieldType_DFK], \r\n            T.idFilterFieldType_DKR AS");
            viewString.Append(" [InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_DKR], \r\n            T.");
            viewString.Append("idFilterFieldType_ExpenseObligationType AS [InterBudgetaryTransfers_RuleFilterKB");
            viewString.Append("K.IdFilterFieldType_ExpenseObligationType], \r\n            T.idFilterFieldType_Fi");
            viewString.Append("nanceSource AS [InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_FinanceS");
            viewString.Append("ource], \r\n            T.idFilterFieldType_KCSR AS [InterBudgetaryTransfers_RuleF");
            viewString.Append("ilterKBK.IdFilterFieldType_KCSR], \r\n            T.idFilterFieldType_KFO AS [Inte");
            viewString.Append("rBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_KFO], \r\n            T.idFilt");
            viewString.Append("erFieldType_KOSGU AS [InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_KO");
            viewString.Append("SGU], \r\n            T.idFilterFieldType_KVR AS [InterBudgetaryTransfers_RuleFilt");
            viewString.Append("erKBK.IdFilterFieldType_KVR], \r\n            T.idFilterFieldType_KVSR AS [InterBu");
            viewString.Append("dgetaryTransfers_RuleFilterKBK.IdFilterFieldType_KVSR], \r\n            T.idFilter");
            viewString.Append("FieldType_RZPR AS [InterBudgetaryTransfers_RuleFilterKBK.IdFilterFieldType_RZPR]");
            viewString.Append(", \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.InterBudgetaryTra");
            viewString.Append("nsfers_RuleFilterKBK AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.IBT_RuleFilterKBK_ExpenseObligationTypeT
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView477()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.IBT_RuleFilterKBK_ExpenseObligationTypeT", @"
    SELECT VALUE -- Constructing IBT_RuleFilterKBK_ExpenseObligationTypeT
        [Tests.IBT_RuleFilterKBK_ExpenseObligationTypeT](T1.[IBT_RuleFilterKBK_ExpenseObligationTypeT.Id], T1.[IBT_RuleFilterKBK_ExpenseObligationTypeT.IdOwner], T1.[IBT_RuleFilterKBK_ExpenseObligationTypeT.IdExpenseObligationType])
    FROM (
        SELECT 
            T.id AS [IBT_RuleFilterKBK_ExpenseObligationTypeT.Id], 
            T.idOwner AS [IBT_RuleFilterKBK_ExpenseObligationTypeT.IdOwner], 
            T.idExpenseObligationType AS [IBT_RuleFilterKBK_ExpenseObligationTypeT.IdExpenseObligationType], 
            True AS _from0
        FROM CodeFirstDatabase.IBT_RuleFilterKBK_ExpenseObligationTypeT AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SummaryReportOfSelectedIndicators
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView478()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2157);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SummaryReportOfSelectedIndicators\r\n        [T");
            viewString.Append("ests.SummaryReportOfSelectedIndicators](T1.SummaryReportOfSelectedIndicators_Id,");
            viewString.Append(" T1.SummaryReportOfSelectedIndicators_ReportProfileCaption, T1.SummaryReportOfSe");
            viewString.Append("lectedIndicators_IdReportProfileType, T1.SummaryReportOfSelectedIndicators_IdRep");
            viewString.Append("ortProfileUser, T1.SummaryReportOfSelectedIndicators_IsTemporary, T1.SummaryRepo");
            viewString.Append("rtOfSelectedIndicators_IdPublicLegalFormation, T1.SummaryReportOfSelectedIndicat");
            viewString.Append("ors_IdBudget, T1.SummaryReportOfSelectedIndicators_IdVersion, T1.SummaryReportOf");
            viewString.Append("SelectedIndicators_ByApproved, T1.SummaryReportOfSelectedIndicators_DateReport, ");
            viewString.Append("T1.SummaryReportOfSelectedIndicators_IdUnitDimension, T1.SummaryReportOfSelected");
            viewString.Append("Indicators_IdSourcesDataReports, T1.SummaryReportOfSelectedIndicators_RepeatTabl");
            viewString.Append("eHeader, T1.SummaryReportOfSelectedIndicators_Caption)\r\n    FROM (\r\n        SELE");
            viewString.Append("CT \r\n            T.id AS SummaryReportOfSelectedIndicators_Id, \r\n            T.R");
            viewString.Append("eportProfileCaption AS SummaryReportOfSelectedIndicators_ReportProfileCaption, \r");
            viewString.Append("\n            T.idReportProfileType AS SummaryReportOfSelectedIndicators_IdReport");
            viewString.Append("ProfileType, \r\n            T.idReportProfileUser AS SummaryReportOfSelectedIndic");
            viewString.Append("ators_IdReportProfileUser, \r\n            T.isTemporary AS SummaryReportOfSelecte");
            viewString.Append("dIndicators_IsTemporary, \r\n            T.idPublicLegalFormation AS SummaryReport");
            viewString.Append("OfSelectedIndicators_IdPublicLegalFormation, \r\n            T.idBudget AS Summary");
            viewString.Append("ReportOfSelectedIndicators_IdBudget, \r\n            T.idVersion AS SummaryReportO");
            viewString.Append("fSelectedIndicators_IdVersion, \r\n            T.byApproved AS SummaryReportOfSele");
            viewString.Append("ctedIndicators_ByApproved, \r\n            T.DateReport AS SummaryReportOfSelected");
            viewString.Append("Indicators_DateReport, \r\n            T.idUnitDimension AS SummaryReportOfSelecte");
            viewString.Append("dIndicators_IdUnitDimension, \r\n            T.idSourcesDataReports AS SummaryRepo");
            viewString.Append("rtOfSelectedIndicators_IdSourcesDataReports, \r\n            T.repeatTableHeader A");
            viewString.Append("S SummaryReportOfSelectedIndicators_RepeatTableHeader, \r\n            T.Caption A");
            viewString.Append("S SummaryReportOfSelectedIndicators_Caption, \r\n            True AS _from0\r\n     ");
            viewString.Append("   FROM CodeFirstDatabase.SummaryReportOfSelectedIndicators AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SummaryReportOfSelectedIndicators", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.WordCommonReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView479()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.WordCommonReport", @"
    SELECT VALUE -- Constructing WordCommonReport
        [Tests.WordCommonReport](T1.WordCommonReport_Id, T1.WordCommonReport_ReportProfileCaption, T1.WordCommonReport_IdReportProfileType, T1.WordCommonReport_IdReportProfileUser, T1.WordCommonReport_IsTemporary, T1.WordCommonReport_IdTemplateFile)
    FROM (
        SELECT 
            T.id AS WordCommonReport_Id, 
            T.ReportProfileCaption AS WordCommonReport_ReportProfileCaption, 
            T.idReportProfileType AS WordCommonReport_IdReportProfileType, 
            T.idReportProfileUser AS WordCommonReport_IdReportProfileUser, 
            T.isTemporary AS WordCommonReport_IsTemporary, 
            T.idTemplateFile AS WordCommonReport_IdTemplateFile, 
            True AS _from0
        FROM CodeFirstDatabase.WordCommonReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.WordCommonReportParams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView480()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.WordCommonReportParams", @"
    SELECT VALUE -- Constructing WordCommonReportParams
        [Tests.WordCommonReportParams](T1.WordCommonReportParams_Id, T1.WordCommonReportParams_Caption, T1.WordCommonReportParams_Description, T1.WordCommonReportParams_IdOutputEntity, T1.WordCommonReportParams_IdOutputEntityField, T1.WordCommonReportParams_SqlQuery)
    FROM (
        SELECT 
            T.id AS WordCommonReportParams_Id, 
            T.caption AS WordCommonReportParams_Caption, 
            T.description AS WordCommonReportParams_Description, 
            T.idOutputEntity AS WordCommonReportParams_IdOutputEntity, 
            T.idOutputEntityField AS WordCommonReportParams_IdOutputEntityField, 
            T.sqlQuery AS WordCommonReportParams_SqlQuery, 
            True AS _from0
        FROM CodeFirstDatabase.WordCommonReportParams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.WordCommonReportParams_InputParam
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView481()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.WordCommonReportParams_InputParam", @"
    SELECT VALUE -- Constructing WordCommonReportParams_InputParam
        [Tests.WordCommonReportParams_InputParam](T1.[WordCommonReportParams_InputParam.Id], T1.[WordCommonReportParams_InputParam.IdOwner], T1.[WordCommonReportParams_InputParam.Caption], T1.[WordCommonReportParams_InputParam.Description], T1.[WordCommonReportParams_InputParam.DefaultValue])
    FROM (
        SELECT 
            T.id AS [WordCommonReportParams_InputParam.Id], 
            T.idOwner AS [WordCommonReportParams_InputParam.IdOwner], 
            T.caption AS [WordCommonReportParams_InputParam.Caption], 
            T.description AS [WordCommonReportParams_InputParam.Description], 
            T.defaultValue AS [WordCommonReportParams_InputParam.DefaultValue], 
            True AS _from0
        FROM CodeFirstDatabase.WordCommonReportParams_InputParam AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.RegistryGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView482()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2595);
            viewString.Append("\r\n    SELECT VALUE -- Constructing RegistryGoal\r\n        [Tests.RegistryGoal](T1");
            viewString.Append(".RegistryGoal_Id, T1.RegistryGoal_ReportProfileCaption, T1.RegistryGoal_IdReport");
            viewString.Append("ProfileType, T1.RegistryGoal_IdReportProfileUser, T1.RegistryGoal_IsTemporary, T");
            viewString.Append("1.RegistryGoal_IdSBP, T1.RegistryGoal_DateStart, T1.RegistryGoal_DateEnd, T1.Reg");
            viewString.Append("istryGoal_OutputGoalOperatingPeriod, T1.RegistryGoal_IdPublicLegalFormation, T1.");
            viewString.Append("RegistryGoal_IdSourcesDataReports, T1.RegistryGoal_IdVersion, T1.RegistryGoal_Co");
            viewString.Append("nstructReportApprovedData, T1.RegistryGoal_DateReport, T1.RegistryGoal_DisplayRe");
            viewString.Append("portCodeS, T1.RegistryGoal_DisplayReportDataGoal, T1.RegistryGoal_DispleySelecte");
            viewString.Append("dParameterValues, T1.RegistryGoal_RepeatTableHeader, T1.RegistryGoal_GenerateVal");
            viewString.Append("uesWithDetails, T1.RegistryGoal_IdBudget, T1.RegistryGoal_DisplayResourceProvisi");
            viewString.Append("on, T1.RegistryGoal_DisplayResourceSupport, T1.RegistryGoal_DisplayDataBudgetPer");
            viewString.Append("iod)\r\n    FROM (\r\n        SELECT \r\n            T.id AS RegistryGoal_Id, \r\n      ");
            viewString.Append("      T.ReportProfileCaption AS RegistryGoal_ReportProfileCaption, \r\n           ");
            viewString.Append(" T.idReportProfileType AS RegistryGoal_IdReportProfileType, \r\n            T.idRe");
            viewString.Append("portProfileUser AS RegistryGoal_IdReportProfileUser, \r\n            T.isTemporary");
            viewString.Append(" AS RegistryGoal_IsTemporary, \r\n            T.idSBP AS RegistryGoal_IdSBP, \r\n   ");
            viewString.Append("         T.DateStart AS RegistryGoal_DateStart, \r\n            T.DateEnd AS Regis");
            viewString.Append("tryGoal_DateEnd, \r\n            T.OutputGoalOperatingPeriod AS RegistryGoal_Outpu");
            viewString.Append("tGoalOperatingPeriod, \r\n            T.idPublicLegalFormation AS RegistryGoal_IdP");
            viewString.Append("ublicLegalFormation, \r\n            T.idSourcesDataReports AS RegistryGoal_IdSour");
            viewString.Append("cesDataReports, \r\n            T.idVersion AS RegistryGoal_IdVersion, \r\n         ");
            viewString.Append("   T.ConstructReportApprovedData AS RegistryGoal_ConstructReportApprovedData, \r\n");
            viewString.Append("            T.DateReport AS RegistryGoal_DateReport, \r\n            T.DisplayRepo");
            viewString.Append("rtCodeS AS RegistryGoal_DisplayReportCodeS, \r\n            T.DisplayReportDataGoa");
            viewString.Append("l AS RegistryGoal_DisplayReportDataGoal, \r\n            T.DispleySelectedParamete");
            viewString.Append("rValues AS RegistryGoal_DispleySelectedParameterValues, \r\n            T.RepeatTa");
            viewString.Append("bleHeader AS RegistryGoal_RepeatTableHeader, \r\n            T.GenerateValuesWithD");
            viewString.Append("etails AS RegistryGoal_GenerateValuesWithDetails, \r\n            T.idBudget AS Re");
            viewString.Append("gistryGoal_IdBudget, \r\n            T.DisplayResourceProvision AS RegistryGoal_Di");
            viewString.Append("splayResourceProvision, \r\n            T.DisplayResourceSupport AS RegistryGoal_D");
            viewString.Append("isplayResourceSupport, \r\n            T.DisplayDataBudgetPeriod AS RegistryGoal_D");
            viewString.Append("isplayDataBudgetPeriod, \r\n            True AS _from0\r\n        FROM CodeFirstData");
            viewString.Append("base.RegistryGoal AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegistryGoal", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.UserActivityReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView483()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.UserActivityReport", @"
    SELECT VALUE -- Constructing UserActivityReport
        [Tests.UserActivityReport](T1.UserActivityReport_Id, T1.UserActivityReport_ReportProfileCaption, T1.UserActivityReport_IdReportProfileType, T1.UserActivityReport_IdReportProfileUser, T1.UserActivityReport_IsTemporary, T1.UserActivityReport_IdUser, T1.UserActivityReport_DateFrom, T1.UserActivityReport_DateTo, T1.UserActivityReport_IdAuditEntity, T1.UserActivityReport_IdAuditEntityEntity, T1.UserActivityReport_IdEntity, T1.UserActivityReport_IdElement)
    FROM (
        SELECT 
            T.id AS UserActivityReport_Id, 
            T.ReportProfileCaption AS UserActivityReport_ReportProfileCaption, 
            T.idReportProfileType AS UserActivityReport_IdReportProfileType, 
            T.idReportProfileUser AS UserActivityReport_IdReportProfileUser, 
            T.isTemporary AS UserActivityReport_IsTemporary, 
            T.idUser AS UserActivityReport_IdUser, 
            T.DateFrom AS UserActivityReport_DateFrom, 
            T.DateTo AS UserActivityReport_DateTo, 
            T.idAuditEntity AS UserActivityReport_IdAuditEntity, 
            T.idAuditEntityEntity AS UserActivityReport_IdAuditEntityEntity, 
            T.idEntity AS UserActivityReport_IdEntity, 
            T.idElement AS UserActivityReport_IdElement, 
            True AS _from0
        FROM CodeFirstDatabase.UserActivityReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView484()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2464);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure\r\n        [Tests.Budget");
            viewString.Append("ExpenseStructure](T1.BudgetExpenseStructure_Id, T1.BudgetExpenseStructure_Report");
            viewString.Append("ProfileCaption, T1.BudgetExpenseStructure_IdReportProfileType, T1.BudgetExpenseS");
            viewString.Append("tructure_IdReportProfileUser, T1.BudgetExpenseStructure_ReportCap, T1.BudgetExpe");
            viewString.Append("nseStructure_IsTemporary, T1.BudgetExpenseStructure_IdPublicLegalFormation, T1.B");
            viewString.Append("udgetExpenseStructure_IdBudget, T1.BudgetExpenseStructure_IdVersion, T1.BudgetEx");
            viewString.Append("penseStructure_Caption, T1.BudgetExpenseStructure_IsApprovedOnly, T1.BudgetExpen");
            viewString.Append("seStructure_ReportDate, T1.BudgetExpenseStructure_IdUnitDimension, T1.BudgetExpe");
            viewString.Append("nseStructure_IdPeriodOption, T1.BudgetExpenseStructure_IdSourcesDataReports, T1.");
            viewString.Append("BudgetExpenseStructure_RepeatTableHeader, T1.BudgetExpenseStructure_ShowGoals, T");
            viewString.Append("1.BudgetExpenseStructure_ShowProgram, T1.BudgetExpenseStructure_ShowActivities, ");
            viewString.Append("T1.BudgetExpenseStructure_IdDocType)\r\n    FROM (\r\n        SELECT \r\n            T");
            viewString.Append(".id AS BudgetExpenseStructure_Id, \r\n            T.ReportProfileCaption AS Budget");
            viewString.Append("ExpenseStructure_ReportProfileCaption, \r\n            T.idReportProfileType AS Bu");
            viewString.Append("dgetExpenseStructure_IdReportProfileType, \r\n            T.idReportProfileUser AS");
            viewString.Append(" BudgetExpenseStructure_IdReportProfileUser, \r\n            T.ReportCap AS Budget");
            viewString.Append("ExpenseStructure_ReportCap, \r\n            T.isTemporary AS BudgetExpenseStructur");
            viewString.Append("e_IsTemporary, \r\n            T.idPublicLegalFormation AS BudgetExpenseStructure_");
            viewString.Append("IdPublicLegalFormation, \r\n            T.idBudget AS BudgetExpenseStructure_IdBud");
            viewString.Append("get, \r\n            T.idVersion AS BudgetExpenseStructure_IdVersion, \r\n          ");
            viewString.Append("  T.Caption AS BudgetExpenseStructure_Caption, \r\n            T.isApprovedOnly AS");
            viewString.Append(" BudgetExpenseStructure_IsApprovedOnly, \r\n            T.ReportDate AS BudgetExpe");
            viewString.Append("nseStructure_ReportDate, \r\n            T.idUnitDimension AS BudgetExpenseStructu");
            viewString.Append("re_IdUnitDimension, \r\n            T.idPeriodOption AS BudgetExpenseStructure_IdP");
            viewString.Append("eriodOption, \r\n            T.idSourcesDataReports AS BudgetExpenseStructure_IdSo");
            viewString.Append("urcesDataReports, \r\n            T.repeatTableHeader AS BudgetExpenseStructure_Re");
            viewString.Append("peatTableHeader, \r\n            T.showGoals AS BudgetExpenseStructure_ShowGoals, ");
            viewString.Append("\r\n            T.showProgram AS BudgetExpenseStructure_ShowProgram, \r\n           ");
            viewString.Append(" T.showActivities AS BudgetExpenseStructure_ShowActivities, \r\n            T.idDo");
            viewString.Append("cType AS BudgetExpenseStructure_IdDocType, \r\n            True AS _from0\r\n       ");
            viewString.Append(" FROM CodeFirstDatabase.BudgetExpenseStructure AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_Columns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView485()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_Columns", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_Columns
        [Tests.BudgetExpenseStructure_Columns](T1.[BudgetExpenseStructure_Columns.Id], T1.[BudgetExpenseStructure_Columns.IdOwner], T1.[BudgetExpenseStructure_Columns.IdKBKEntity], T1.[BudgetExpenseStructure_Columns.Order], T1.[BudgetExpenseStructure_Columns.IsGroupResult], T1.[BudgetExpenseStructure_Columns.MinLevel], T1.[BudgetExpenseStructure_Columns.MaxLevel])
    FROM (
        SELECT 
            T.id AS [BudgetExpenseStructure_Columns.Id], 
            T.idOwner AS [BudgetExpenseStructure_Columns.IdOwner], 
            T.idKBKEntity AS [BudgetExpenseStructure_Columns.IdKBKEntity], 
            T.[Order] AS [BudgetExpenseStructure_Columns.Order], 
            T.isGroupResult AS [BudgetExpenseStructure_Columns.IsGroupResult], 
            T.minLevel AS [BudgetExpenseStructure_Columns.MinLevel], 
            T.maxLevel AS [BudgetExpenseStructure_Columns.MaxLevel], 
            True AS _from0
        FROM CodeFirstDatabase.BudgetExpenseStructure_Columns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView486()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2735);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter\r\n        [T");
            viewString.Append("ests.BudgetExpenseStructure_BaseFilter](T1.[BudgetExpenseStructure_BaseFilter.Id");
            viewString.Append("], T1.[BudgetExpenseStructure_BaseFilter.IdOwner], T1.[BudgetExpenseStructure_Ba");
            viewString.Append("seFilter.IdFilterFieldType_ExpenseObligationType], T1.[BudgetExpenseStructure_Ba");
            viewString.Append("seFilter.IdFilterFieldType_FinanceSource], T1.[BudgetExpenseStructure_BaseFilter");
            viewString.Append(".IdFilterFieldType_KFO], T1.[BudgetExpenseStructure_BaseFilter.IdFilterFieldType");
            viewString.Append("_KVSR], T1.[BudgetExpenseStructure_BaseFilter.IdFilterFieldType_RZPR], T1.[Budge");
            viewString.Append("tExpenseStructure_BaseFilter.IdFilterFieldType_KCSR], T1.[BudgetExpenseStructure");
            viewString.Append("_BaseFilter.IdFilterFieldType_KVR], T1.[BudgetExpenseStructure_BaseFilter.IdFilt");
            viewString.Append("erFieldType_KOSGU], T1.[BudgetExpenseStructure_BaseFilter.IdFilterFieldType_DFK]");
            viewString.Append(", T1.[BudgetExpenseStructure_BaseFilter.IdFilterFieldType_DKR], T1.[BudgetExpens");
            viewString.Append("eStructure_BaseFilter.IdFilterFieldType_DEK], T1.[BudgetExpenseStructure_BaseFil");
            viewString.Append("ter.IdFilterFieldType_CodeSubsidy], T1.[BudgetExpenseStructure_BaseFilter.IdFilt");
            viewString.Append("erFieldType_BranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [Budg");
            viewString.Append("etExpenseStructure_BaseFilter.Id], \r\n            T.idOwner AS [BudgetExpenseStru");
            viewString.Append("cture_BaseFilter.IdOwner], \r\n            T.idFilterFieldType_ExpenseObligationTy");
            viewString.Append("pe AS [BudgetExpenseStructure_BaseFilter.IdFilterFieldType_ExpenseObligationType");
            viewString.Append("], \r\n            T.idFilterFieldType_FinanceSource AS [BudgetExpenseStructure_Ba");
            viewString.Append("seFilter.IdFilterFieldType_FinanceSource], \r\n            T.idFilterFieldType_KFO");
            viewString.Append(" AS [BudgetExpenseStructure_BaseFilter.IdFilterFieldType_KFO], \r\n            T.i");
            viewString.Append("dFilterFieldType_KVSR AS [BudgetExpenseStructure_BaseFilter.IdFilterFieldType_KV");
            viewString.Append("SR], \r\n            T.idFilterFieldType_RZPR AS [BudgetExpenseStructure_BaseFilte");
            viewString.Append("r.IdFilterFieldType_RZPR], \r\n            T.idFilterFieldType_KCSR AS [BudgetExpe");
            viewString.Append("nseStructure_BaseFilter.IdFilterFieldType_KCSR], \r\n            T.idFilterFieldTy");
            viewString.Append("pe_KVR AS [BudgetExpenseStructure_BaseFilter.IdFilterFieldType_KVR], \r\n         ");
            viewString.Append("   T.idFilterFieldType_KOSGU AS [BudgetExpenseStructure_BaseFilter.IdFilterField");
            viewString.Append("Type_KOSGU], \r\n            T.idFilterFieldType_DFK AS [BudgetExpenseStructure_Ba");
            viewString.Append("seFilter.IdFilterFieldType_DFK], \r\n            T.idFilterFieldType_DKR AS [Budge");
            viewString.Append("tExpenseStructure_BaseFilter.IdFilterFieldType_DKR], \r\n            T.idFilterFie");
            viewString.Append("ldType_DEK AS [BudgetExpenseStructure_BaseFilter.IdFilterFieldType_DEK], \r\n     ");
            viewString.Append("       T.idFilterFieldType_CodeSubsidy AS [BudgetExpenseStructure_BaseFilter.IdF");
            viewString.Append("ilterFieldType_CodeSubsidy], \r\n            T.idFilterFieldType_BranchCode AS [Bu");
            viewString.Append("dgetExpenseStructure_BaseFilter.IdFilterFieldType_BranchCode], \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM CodeFirstDatabase.BudgetExpenseStructure_BaseFilter AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_ExpenseObligationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView487()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_ExpenseObligationType", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_ExpenseObligationType
        [Tests.BudgetExpenseStructure_BaseFilter_ExpenseObligationType](T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationType.Id], T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationType.IdOwner], T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationType.IdExpenseObligationType])
    FROM (
        SELECT 
            T.id AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationType.Id], 
            T.idOwner AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationType.IdOwner], 
            T.idExpenseObligationType AS [BudgetExpenseStructure_BaseFilter_ExpenseObligationType.IdExpenseObligationType], 
            True AS _from0
        FROM CodeFirstDatabase.BudgetExpenseStructure_BaseFilter_ExpenseObligationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomColumn
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView488()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomColumn", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomColumn
        [Tests.BudgetExpenseStructure_CustomColumn](T1.[BudgetExpenseStructure_CustomColumn.Id], T1.[BudgetExpenseStructure_CustomColumn.IdOwner], T1.[BudgetExpenseStructure_CustomColumn.Name])
    FROM (
        SELECT 
            T.id AS [BudgetExpenseStructure_CustomColumn.Id], 
            T.idOwner AS [BudgetExpenseStructure_CustomColumn.IdOwner], 
            T.Name AS [BudgetExpenseStructure_CustomColumn.Name], 
            True AS _from0
        FROM CodeFirstDatabase.BudgetExpenseStructure_CustomColumn AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView489()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2928);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter\r\n        ");
            viewString.Append("[Tests.BudgetExpenseStructure_CustomFilter](T1.[BudgetExpenseStructure_CustomFil");
            viewString.Append("ter.Id], T1.[BudgetExpenseStructure_CustomFilter.IdOwner], T1.[BudgetExpenseStru");
            viewString.Append("cture_CustomFilter.IdMaster], T1.[BudgetExpenseStructure_CustomFilter.IdFilterFi");
            viewString.Append("eldType_ExpenseObligationType], T1.[BudgetExpenseStructure_CustomFilter.IdFilter");
            viewString.Append("FieldType_FinanceSource], T1.[BudgetExpenseStructure_CustomFilter.IdFilterFieldT");
            viewString.Append("ype_KFO], T1.[BudgetExpenseStructure_CustomFilter.IdFilterFieldType_KVSR], T1.[B");
            viewString.Append("udgetExpenseStructure_CustomFilter.IdFilterFieldType_RZPR], T1.[BudgetExpenseStr");
            viewString.Append("ucture_CustomFilter.IdFilterFieldType_KCSR], T1.[BudgetExpenseStructure_CustomFi");
            viewString.Append("lter.IdFilterFieldType_KVR], T1.[BudgetExpenseStructure_CustomFilter.IdFilterFie");
            viewString.Append("ldType_KOSGU], T1.[BudgetExpenseStructure_CustomFilter.IdFilterFieldType_DFK], T");
            viewString.Append("1.[BudgetExpenseStructure_CustomFilter.IdFilterFieldType_DKR], T1.[BudgetExpense");
            viewString.Append("Structure_CustomFilter.IdFilterFieldType_DEK], T1.[BudgetExpenseStructure_Custom");
            viewString.Append("Filter.IdFilterFieldType_CodeSubsidy], T1.[BudgetExpenseStructure_CustomFilter.I");
            viewString.Append("dFilterFieldType_BranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.id AS ");
            viewString.Append("[BudgetExpenseStructure_CustomFilter.Id], \r\n            T.idOwner AS [BudgetExpe");
            viewString.Append("nseStructure_CustomFilter.IdOwner], \r\n            T.idMaster AS [BudgetExpenseSt");
            viewString.Append("ructure_CustomFilter.IdMaster], \r\n            T.idFilterFieldType_ExpenseObligat");
            viewString.Append("ionType AS [BudgetExpenseStructure_CustomFilter.IdFilterFieldType_ExpenseObligat");
            viewString.Append("ionType], \r\n            T.idFilterFieldType_FinanceSource AS [BudgetExpenseStruc");
            viewString.Append("ture_CustomFilter.IdFilterFieldType_FinanceSource], \r\n            T.idFilterFiel");
            viewString.Append("dType_KFO AS [BudgetExpenseStructure_CustomFilter.IdFilterFieldType_KFO], \r\n    ");
            viewString.Append("        T.idFilterFieldType_KVSR AS [BudgetExpenseStructure_CustomFilter.IdFilte");
            viewString.Append("rFieldType_KVSR], \r\n            T.idFilterFieldType_RZPR AS [BudgetExpenseStruct");
            viewString.Append("ure_CustomFilter.IdFilterFieldType_RZPR], \r\n            T.idFilterFieldType_KCSR");
            viewString.Append(" AS [BudgetExpenseStructure_CustomFilter.IdFilterFieldType_KCSR], \r\n            ");
            viewString.Append("T.idFilterFieldType_KVR AS [BudgetExpenseStructure_CustomFilter.IdFilterFieldTyp");
            viewString.Append("e_KVR], \r\n            T.idFilterFieldType_KOSGU AS [BudgetExpenseStructure_Custo");
            viewString.Append("mFilter.IdFilterFieldType_KOSGU], \r\n            T.idFilterFieldType_DFK AS [Budg");
            viewString.Append("etExpenseStructure_CustomFilter.IdFilterFieldType_DFK], \r\n            T.idFilter");
            viewString.Append("FieldType_DKR AS [BudgetExpenseStructure_CustomFilter.IdFilterFieldType_DKR], \r\n");
            viewString.Append("            T.idFilterFieldType_DEK AS [BudgetExpenseStructure_CustomFilter.IdFi");
            viewString.Append("lterFieldType_DEK], \r\n            T.idFilterFieldType_CodeSubsidy AS [BudgetExpe");
            viewString.Append("nseStructure_CustomFilter.IdFilterFieldType_CodeSubsidy], \r\n            T.idFilt");
            viewString.Append("erFieldType_BranchCode AS [BudgetExpenseStructure_CustomFilter.IdFilterFieldType");
            viewString.Append("_BranchCode], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.Budge");
            viewString.Append("tExpenseStructure_CustomFilter AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_ExpenseObligationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView490()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_ExpenseObligationType", @"
    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_ExpenseObligationType
        [Tests.BudgetExpenseStructure_CustomFilter_ExpenseObligationType](T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType.Id], T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType.IdOwner], T1.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType.IdExpenseObligationType])
    FROM (
        SELECT 
            T.id AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationType.Id], 
            T.idOwner AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationType.IdOwner], 
            T.idExpenseObligationType AS [BudgetExpenseStructure_CustomFilter_ExpenseObligationType.IdExpenseObligationType], 
            True AS _from0
        FROM CodeFirstDatabase.BudgetExpenseStructure_CustomFilter_ExpenseObligationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ReportBatch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView491()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ReportBatch", @"
    SELECT VALUE -- Constructing ReportBatch
        [Tests.ReportBatch](T1.ReportBatch_Id, T1.ReportBatch_IdPublicLegalFormation, T1.ReportBatch_Caption, T1.ReportBatch_Description, T1.ReportBatch_IdDocStatus) WITH 
        RELATIONSHIP(CREATEREF(DataContext.DocStatus, ROW(T1.[ReportBatch_DocStatus.ReportBatch_DocStatus_Target.Id]),[Tests.DocStatus]),[Tests.ReportBatch_DocStatus],ReportBatch_DocStatus_Source,ReportBatch_DocStatus_Target) 
    FROM (
        SELECT 
            T.id AS ReportBatch_Id, 
            T.idPublicLegalFormation AS ReportBatch_IdPublicLegalFormation, 
            T.caption AS ReportBatch_Caption, 
            T.description AS ReportBatch_Description, 
            T.IdDocStatus AS ReportBatch_IdDocStatus, 
            True AS _from0, 
            T.DocStatus_Id AS [ReportBatch_DocStatus.ReportBatch_DocStatus_Target.Id]
        FROM CodeFirstDatabase.ReportBatch AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ReportBatch_Reports
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView492()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ReportBatch_Reports", @"
    SELECT VALUE -- Constructing ReportBatch_Reports
        [Tests.ReportBatch_Reports](T1.[ReportBatch_Reports.Id], T1.[ReportBatch_Reports.IdOwner], T1.[ReportBatch_Reports.Number])
    FROM (
        SELECT 
            T.id AS [ReportBatch_Reports.Id], 
            T.idOwner AS [ReportBatch_Reports.IdOwner], 
            T.number AS [ReportBatch_Reports.Number], 
            True AS _from0
        FROM CodeFirstDatabase.ReportBatch_Reports AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ModelSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView493()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ModelSystemGoal", @"
    SELECT VALUE -- Constructing ModelSystemGoal
        [Tests.ModelSystemGoal](T1.ModelSystemGoal_Id, T1.ModelSystemGoal_IdPublicLegalFormation, T1.ModelSystemGoal_IdParent, T1.ModelSystemGoal_IdElementTypeSystemGoal, T1.ModelSystemGoal_IdRefStatus)
    FROM (
        SELECT 
            T.id AS ModelSystemGoal_Id, 
            T.idPublicLegalFormation AS ModelSystemGoal_IdPublicLegalFormation, 
            T.idParent AS ModelSystemGoal_IdParent, 
            T.idElementTypeSystemGoal AS ModelSystemGoal_IdElementTypeSystemGoal, 
            T.idRefStatus AS ModelSystemGoal_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.ModelSystemGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DocumentsOfSED_ItemsSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView494()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DocumentsOfSED_ItemsSystemGoal", @"
    SELECT VALUE -- Constructing DocumentsOfSED_ItemsSystemGoal
        [Tests.DocumentsOfSED_ItemsSystemGoal](T1.[DocumentsOfSED_ItemsSystemGoal.Id], T1.[DocumentsOfSED_ItemsSystemGoal.IdOwner], T1.[DocumentsOfSED_ItemsSystemGoal.IdSystemGoal], T1.[DocumentsOfSED_ItemsSystemGoal.Code], T1.[DocumentsOfSED_ItemsSystemGoal.IdElementTypeSystemGoal], T1.[DocumentsOfSED_ItemsSystemGoal.DateStart], T1.[DocumentsOfSED_ItemsSystemGoal.DateEnd], T1.[DocumentsOfSED_ItemsSystemGoal.IdSBP], T1.[DocumentsOfSED_ItemsSystemGoal.IsOtherDocSG], T1.[DocumentsOfSED_ItemsSystemGoal.IdParent])
    FROM (
        SELECT 
            T.id AS [DocumentsOfSED_ItemsSystemGoal.Id], 
            T.idOwner AS [DocumentsOfSED_ItemsSystemGoal.IdOwner], 
            T.idSystemGoal AS [DocumentsOfSED_ItemsSystemGoal.IdSystemGoal], 
            T.Code AS [DocumentsOfSED_ItemsSystemGoal.Code], 
            T.idElementTypeSystemGoal AS [DocumentsOfSED_ItemsSystemGoal.IdElementTypeSystemGoal], 
            T.DateStart AS [DocumentsOfSED_ItemsSystemGoal.DateStart], 
            T.DateEnd AS [DocumentsOfSED_ItemsSystemGoal.DateEnd], 
            T.idSBP AS [DocumentsOfSED_ItemsSystemGoal.IdSBP], 
            T.isOtherDocSG AS [DocumentsOfSED_ItemsSystemGoal.IsOtherDocSG], 
            T.idParent AS [DocumentsOfSED_ItemsSystemGoal.IdParent], 
            True AS _from0
        FROM CodeFirstDatabase.DocumentsOfSED_ItemsSystemGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DocumentsOfSED
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView495()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DocumentsOfSED", "\r\n    SELECT VALUE -- Constructing DocumentsOfSED\r\n        [Tests.DocumentsOfSED]" +
                    "(T1.DocumentsOfSED_Id, T1.DocumentsOfSED_IdPublicLegalFormation, T1.DocumentsOfS" +
                    "ED_IdVersion, T1.DocumentsOfSED_IdDocType, T1.DocumentsOfSED_Number, T1.Document" +
                    "sOfSED_Date, T1.DocumentsOfSED_DateStart, T1.DocumentsOfSED_DateEnd, T1.Document" +
                    "sOfSED_DateCommit, T1.DocumentsOfSED_IsApproved, T1.DocumentsOfSED_Description, " +
                    "T1.DocumentsOfSED_IdDocStatus, T1.DocumentsOfSED_ReasonCancel, T1.DocumentsOfSED" +
                    "_IsRequireClarification, T1.DocumentsOfSED_ReasonClarification, T1.DocumentsOfSE" +
                    "D_DateTerminate, T1.DocumentsOfSED_ReasonTerminate, T1.DocumentsOfSED_DateLastEd" +
                    "it, T1.DocumentsOfSED_IdParent, T1.DocumentsOfSED_Caption)\r\n    FROM (\r\n        " +
                    "SELECT \r\n            T.id AS DocumentsOfSED_Id, \r\n            T.idPublicLegalFor" +
                    "mation AS DocumentsOfSED_IdPublicLegalFormation, \r\n            T.idVersion AS Do" +
                    "cumentsOfSED_IdVersion, \r\n            T.idDocType AS DocumentsOfSED_IdDocType, \r" +
                    "\n            T.Number AS DocumentsOfSED_Number, \r\n            T.Date AS Document" +
                    "sOfSED_Date, \r\n            T.DateStart AS DocumentsOfSED_DateStart, \r\n          " +
                    "  T.DateEnd AS DocumentsOfSED_DateEnd, \r\n            T.DateCommit AS DocumentsOf" +
                    "SED_DateCommit, \r\n            T.isApproved AS DocumentsOfSED_IsApproved, \r\n     " +
                    "       T.Description AS DocumentsOfSED_Description, \r\n            T.idDocStatus " +
                    "AS DocumentsOfSED_IdDocStatus, \r\n            T.ReasonCancel AS DocumentsOfSED_Re" +
                    "asonCancel, \r\n            T.isRequireClarification AS DocumentsOfSED_IsRequireCl" +
                    "arification, \r\n            T.ReasonClarification AS DocumentsOfSED_ReasonClarifi" +
                    "cation, \r\n            T.DateTerminate AS DocumentsOfSED_DateTerminate, \r\n       " +
                    "     T.ReasonTerminate AS DocumentsOfSED_ReasonTerminate, \r\n            T.DateLa" +
                    "stEdit AS DocumentsOfSED_DateLastEdit, \r\n            T.idParent AS DocumentsOfSE" +
                    "D_IdParent, \r\n            T.Caption AS DocumentsOfSED_Caption, \r\n            Tru" +
                    "e AS _from0\r\n        FROM CodeFirstDatabase.DocumentsOfSED AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DocumentsOfSED_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView496()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DocumentsOfSED_GoalIndicator", @"
    SELECT VALUE -- Constructing DocumentsOfSED_GoalIndicator
        [Tests.DocumentsOfSED_GoalIndicator](T1.[DocumentsOfSED_GoalIndicator.Id], T1.[DocumentsOfSED_GoalIndicator.IdOwner], T1.[DocumentsOfSED_GoalIndicator.IdMaster], T1.[DocumentsOfSED_GoalIndicator.IdGoalIndicator])
    FROM (
        SELECT 
            T.id AS [DocumentsOfSED_GoalIndicator.Id], 
            T.idOwner AS [DocumentsOfSED_GoalIndicator.IdOwner], 
            T.idMaster AS [DocumentsOfSED_GoalIndicator.IdMaster], 
            T.idGoalIndicator AS [DocumentsOfSED_GoalIndicator.IdGoalIndicator], 
            True AS _from0
        FROM CodeFirstDatabase.DocumentsOfSED_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.DocumentsOfSED_GoalIndicatorValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView497()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.DocumentsOfSED_GoalIndicatorValue", @"
    SELECT VALUE -- Constructing DocumentsOfSED_GoalIndicatorValue
        [Tests.DocumentsOfSED_GoalIndicatorValue](T1.[DocumentsOfSED_GoalIndicatorValue.Id], T1.[DocumentsOfSED_GoalIndicatorValue.IdHierarchyPeriod], T1.[DocumentsOfSED_GoalIndicatorValue.Value], T1.[DocumentsOfSED_GoalIndicatorValue.IdOwner], T1.[DocumentsOfSED_GoalIndicatorValue.IdMaster])
    FROM (
        SELECT 
            T.id AS [DocumentsOfSED_GoalIndicatorValue.Id], 
            T.idHierarchyPeriod AS [DocumentsOfSED_GoalIndicatorValue.IdHierarchyPeriod], 
            T.[Value] AS [DocumentsOfSED_GoalIndicatorValue.Value], 
            T.idOwner AS [DocumentsOfSED_GoalIndicatorValue.IdOwner], 
            T.idMaster AS [DocumentsOfSED_GoalIndicatorValue.IdMaster], 
            True AS _from0
        FROM CodeFirstDatabase.DocumentsOfSED_GoalIndicatorValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.GoalTarget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView498()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.GoalTarget", "\r\n    SELECT VALUE -- Constructing GoalTarget\r\n        [Tests.GoalTarget](T1.Goal" +
                    "Target_Id, T1.GoalTarget_IdPublicLegalFormation, T1.GoalTarget_IdVersion, T1.Goa" +
                    "lTarget_IdSystemGoalElement, T1.GoalTarget_IdGoalIndicator, T1.GoalTarget_IdRegi" +
                    "strator, T1.GoalTarget_DateCommit, T1.GoalTarget_IdApproved, T1.GoalTarget_DateT" +
                    "erminate, T1.GoalTarget_IdTerminator, T1.GoalTarget_IdRegistratorEntity, T1.Goal" +
                    "Target_IdTerminatorEntity, T1.GoalTarget_IdApprovedEntity, T1.GoalTarget_DateCre" +
                    "ate, T1.GoalTarget_IdTerminateOperation, T1.GoalTarget_IdExecutedOperation)\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.id AS GoalTarget_Id, \r\n            T.idP" +
                    "ublicLegalFormation AS GoalTarget_IdPublicLegalFormation, \r\n            T.idVers" +
                    "ion AS GoalTarget_IdVersion, \r\n            T.idSystemGoalElement AS GoalTarget_I" +
                    "dSystemGoalElement, \r\n            T.idGoalIndicator AS GoalTarget_IdGoalIndicato" +
                    "r, \r\n            T.idRegistrator AS GoalTarget_IdRegistrator, \r\n            T.Da" +
                    "teCommit AS GoalTarget_DateCommit, \r\n            T.idApproved AS GoalTarget_IdAp" +
                    "proved, \r\n            T.DateTerminate AS GoalTarget_DateTerminate, \r\n           " +
                    " T.idTerminator AS GoalTarget_IdTerminator, \r\n            T.idRegistratorEntity " +
                    "AS GoalTarget_IdRegistratorEntity, \r\n            T.idTerminatorEntity AS GoalTar" +
                    "get_IdTerminatorEntity, \r\n            T.idApprovedEntity AS GoalTarget_IdApprove" +
                    "dEntity, \r\n            T.DateCreate AS GoalTarget_DateCreate, \r\n            T.Id" +
                    "TerminateOperation AS GoalTarget_IdTerminateOperation, \r\n            T.idExecute" +
                    "dOperation AS GoalTarget_IdExecutedOperation, \r\n            True AS _from0\r\n    " +
                    "    FROM CodeFirstDatabase.GoalTarget AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView499()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SystemGoalElement", "\r\n    SELECT VALUE -- Constructing SystemGoalElement\r\n        [Tests.SystemGoalEl" +
                    "ement](T1.SystemGoalElement_Id, T1.SystemGoalElement_IdRegistrator, T1.SystemGoa" +
                    "lElement_IdTerminator, T1.SystemGoalElement_IdApproved, T1.SystemGoalElement_IdA" +
                    "pprovedEntity, T1.SystemGoalElement_IdRegistratorEntity, T1.SystemGoalElement_Id" +
                    "TerminatorEntity, T1.SystemGoalElement_IdExecutedOperation, T1.SystemGoalElement" +
                    "_IdTerminateOperation, T1.SystemGoalElement_IdPublicLegalFormation, T1.SystemGoa" +
                    "lElement_IdVersion, T1.SystemGoalElement_IdSystemGoal, T1.SystemGoalElement_Date" +
                    "Commit, T1.SystemGoalElement_DateTerminate, T1.SystemGoalElement_DateCreate, T1." +
                    "SystemGoalElement_IdProgram)\r\n    FROM (\r\n        SELECT \r\n            T.id AS S" +
                    "ystemGoalElement_Id, \r\n            T.idRegistrator AS SystemGoalElement_IdRegist" +
                    "rator, \r\n            T.idTerminator AS SystemGoalElement_IdTerminator, \r\n       " +
                    "     T.idApproved AS SystemGoalElement_IdApproved, \r\n            T.idApprovedEnt" +
                    "ity AS SystemGoalElement_IdApprovedEntity, \r\n            T.idRegistratorEntity A" +
                    "S SystemGoalElement_IdRegistratorEntity, \r\n            T.idTerminatorEntity AS S" +
                    "ystemGoalElement_IdTerminatorEntity, \r\n            T.idExecutedOperation AS Syst" +
                    "emGoalElement_IdExecutedOperation, \r\n            T.idTerminateOperation AS Syste" +
                    "mGoalElement_IdTerminateOperation, \r\n            T.idPublicLegalFormation AS Sys" +
                    "temGoalElement_IdPublicLegalFormation, \r\n            T.idVersion AS SystemGoalEl" +
                    "ement_IdVersion, \r\n            T.idSystemGoal AS SystemGoalElement_IdSystemGoal," +
                    " \r\n            T.DateCommit AS SystemGoalElement_DateCommit, \r\n            T.Dat" +
                    "eTerminate AS SystemGoalElement_DateTerminate, \r\n            T.DateCreate AS Sys" +
                    "temGoalElement_DateCreate, \r\n            T.idProgram AS SystemGoalElement_IdProg" +
                    "ram, \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.SystemGoalElem" +
                    "ent AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ValuesGoalTarget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView500()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ValuesGoalTarget", "\r\n    SELECT VALUE -- Constructing ValuesGoalTarget\r\n        [Tests.ValuesGoalTar" +
                    "get](T1.ValuesGoalTarget_Id, T1.ValuesGoalTarget_IdPublicLegalFormation, T1.Valu" +
                    "esGoalTarget_IdVersion, T1.ValuesGoalTarget_IdGoalTarget, T1.ValuesGoalTarget_Id" +
                    "HierarchyPeriod, T1.ValuesGoalTarget_IdValueType, T1.ValuesGoalTarget_Value, T1." +
                    "ValuesGoalTarget_DateCommit, T1.ValuesGoalTarget_IdApproved, T1.ValuesGoalTarget" +
                    "_DateTerminate, T1.ValuesGoalTarget_IdTerminator, T1.ValuesGoalTarget_IdRegistra" +
                    "tor, T1.ValuesGoalTarget_IdRegistratorEntity, T1.ValuesGoalTarget_IdTerminatorEn" +
                    "tity, T1.ValuesGoalTarget_IdApprovedEntity, T1.ValuesGoalTarget_DateCreate, T1.V" +
                    "aluesGoalTarget_IdExecutedOperation, T1.ValuesGoalTarget_IdTerminateOperation)\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.id AS ValuesGoalTarget_Id, \r\n        " +
                    "    T.idPublicLegalFormation AS ValuesGoalTarget_IdPublicLegalFormation, \r\n     " +
                    "       T.idVersion AS ValuesGoalTarget_IdVersion, \r\n            T.idGoalTarget A" +
                    "S ValuesGoalTarget_IdGoalTarget, \r\n            T.idHierarchyPeriod AS ValuesGoal" +
                    "Target_IdHierarchyPeriod, \r\n            T.idValueType AS ValuesGoalTarget_IdValu" +
                    "eType, \r\n            T.[Value] AS ValuesGoalTarget_Value, \r\n            T.DateCo" +
                    "mmit AS ValuesGoalTarget_DateCommit, \r\n            T.idApproved AS ValuesGoalTar" +
                    "get_IdApproved, \r\n            T.DateTerminate AS ValuesGoalTarget_DateTerminate," +
                    " \r\n            T.idTerminator AS ValuesGoalTarget_IdTerminator, \r\n            T." +
                    "idRegistrator AS ValuesGoalTarget_IdRegistrator, \r\n            T.idRegistratorEn" +
                    "tity AS ValuesGoalTarget_IdRegistratorEntity, \r\n            T.idTerminatorEntity" +
                    " AS ValuesGoalTarget_IdTerminatorEntity, \r\n            T.idApprovedEntity AS Val" +
                    "uesGoalTarget_IdApprovedEntity, \r\n            T.DateCreate AS ValuesGoalTarget_D" +
                    "ateCreate, \r\n            T.idExecutedOperation AS ValuesGoalTarget_IdExecutedOpe" +
                    "ration, \r\n            T.idTerminateOperation AS ValuesGoalTarget_IdTerminateOper" +
                    "ation, \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.ValuesGoalTa" +
                    "rget AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView501()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2415);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PlanActivity\r\n        [Tests.PlanActivity](T1");
            viewString.Append(".PlanActivity_Id, T1.PlanActivity_IdPublicLegalFormation, T1.PlanActivity_IdBudg");
            viewString.Append("et, T1.PlanActivity_IdVersion, T1.PlanActivity_Number, T1.PlanActivity_Date, T1.");
            viewString.Append("PlanActivity_IsApproved, T1.PlanActivity_Description, T1.PlanActivity_IdParent, ");
            viewString.Append("T1.PlanActivity_IsRequireClarification, T1.PlanActivity_ReasonClarification, T1.");
            viewString.Append("PlanActivity_IdDocStatus, T1.PlanActivity_Caption, T1.PlanActivity_DateCommit, T");
            viewString.Append("1.PlanActivity_IdSBP, T1.PlanActivity_DateTerminate, T1.PlanActivity_ReasonTermi");
            viewString.Append("nate, T1.PlanActivity_ReasonCancel, T1.PlanActivity_DateLastEdit, T1.[PlanActivi");
            viewString.Append("ty.IdDocAUBUPeriodType_OFG], T1.[PlanActivity.IdDocAUBUPeriodType_PFG1], T1.[Pla");
            viewString.Append("nActivity.IdDocAUBUPeriodType_PFG2], T1.PlanActivity_IsAdditionalNeed, T1.[PlanA");
            viewString.Append("ctivity.IdSBP_BlankActual])\r\n    FROM (\r\n        SELECT \r\n            T.id AS Pl");
            viewString.Append("anActivity_Id, \r\n            T.idPublicLegalFormation AS PlanActivity_IdPublicLe");
            viewString.Append("galFormation, \r\n            T.idBudget AS PlanActivity_IdBudget, \r\n            T");
            viewString.Append(".idVersion AS PlanActivity_IdVersion, \r\n            T.Number AS PlanActivity_Num");
            viewString.Append("ber, \r\n            T.Date AS PlanActivity_Date, \r\n            T.isApproved AS Pl");
            viewString.Append("anActivity_IsApproved, \r\n            T.Description AS PlanActivity_Description, ");
            viewString.Append("\r\n            T.idParent AS PlanActivity_IdParent, \r\n            T.isRequireClar");
            viewString.Append("ification AS PlanActivity_IsRequireClarification, \r\n            T.ReasonClarific");
            viewString.Append("ation AS PlanActivity_ReasonClarification, \r\n            T.idDocStatus AS PlanAc");
            viewString.Append("tivity_IdDocStatus, \r\n            T.Caption AS PlanActivity_Caption, \r\n         ");
            viewString.Append("   T.DateCommit AS PlanActivity_DateCommit, \r\n            T.idSBP AS PlanActivit");
            viewString.Append("y_IdSBP, \r\n            T.DateTerminate AS PlanActivity_DateTerminate, \r\n        ");
            viewString.Append("    T.ReasonTerminate AS PlanActivity_ReasonTerminate, \r\n            T.ReasonCan");
            viewString.Append("cel AS PlanActivity_ReasonCancel, \r\n            T.DateLastEdit AS PlanActivity_D");
            viewString.Append("ateLastEdit, \r\n            T.idDocAUBUPeriodType_OFG AS [PlanActivity.IdDocAUBUP");
            viewString.Append("eriodType_OFG], \r\n            T.idDocAUBUPeriodType_PFG1 AS [PlanActivity.IdDocA");
            viewString.Append("UBUPeriodType_PFG1], \r\n            T.idDocAUBUPeriodType_PFG2 AS [PlanActivity.I");
            viewString.Append("dDocAUBUPeriodType_PFG2], \r\n            T.isAdditionalNeed AS PlanActivity_IsAdd");
            viewString.Append("itionalNeed, \r\n            T.idSBP_BlankActual AS [PlanActivity.IdSBP_BlankActua");
            viewString.Append("l], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.PlanActivity AS");
            viewString.Append(" T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView502()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_Activity", @"
    SELECT VALUE -- Constructing PlanActivity_Activity
        [Tests.PlanActivity_Activity](T1.[PlanActivity_Activity.Id], T1.[PlanActivity_Activity.IdOwner], T1.[PlanActivity_Activity.IdContingent], T1.[PlanActivity_Activity.IdIndicatorActivity], T1.[PlanActivity_Activity.IdActivity], T1.[PlanActivity_Activity.IdActivityOfSBP], T1.[PlanActivity_Activity.IdActivityOfSBP_A])
    FROM (
        SELECT 
            T.id AS [PlanActivity_Activity.Id], 
            T.idOwner AS [PlanActivity_Activity.IdOwner], 
            T.idContingent AS [PlanActivity_Activity.IdContingent], 
            T.idIndicatorActivity AS [PlanActivity_Activity.IdIndicatorActivity], 
            T.idActivity AS [PlanActivity_Activity.IdActivity], 
            T.idActivityOfSBP AS [PlanActivity_Activity.IdActivityOfSBP], 
            T.idActivityOfSBP_A AS [PlanActivity_Activity.IdActivityOfSBP_A], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_ActivityVolume
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView503()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_ActivityVolume", @"
    SELECT VALUE -- Constructing PlanActivity_ActivityVolume
        [Tests.PlanActivity_ActivityVolume](T1.[PlanActivity_ActivityVolume.Id], T1.[PlanActivity_ActivityVolume.IdOwner], T1.[PlanActivity_ActivityVolume.IdMaster], T1.[PlanActivity_ActivityVolume.IdHierarchyPeriod], T1.[PlanActivity_ActivityVolume.Volume], T1.[PlanActivity_ActivityVolume.PriceLimit], T1.[PlanActivity_ActivityVolume.AdditionalVolume])
    FROM (
        SELECT 
            T.id AS [PlanActivity_ActivityVolume.Id], 
            T.idOwner AS [PlanActivity_ActivityVolume.IdOwner], 
            T.idMaster AS [PlanActivity_ActivityVolume.IdMaster], 
            T.idHierarchyPeriod AS [PlanActivity_ActivityVolume.IdHierarchyPeriod], 
            T.Volume AS [PlanActivity_ActivityVolume.Volume], 
            T.PriceLimit AS [PlanActivity_ActivityVolume.PriceLimit], 
            T.AdditionalVolume AS [PlanActivity_ActivityVolume.AdditionalVolume], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_ActivityVolume AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_IndicatorQualityActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView504()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_IndicatorQualityActivity", @"
    SELECT VALUE -- Constructing PlanActivity_IndicatorQualityActivity
        [Tests.PlanActivity_IndicatorQualityActivity](T1.[PlanActivity_IndicatorQualityActivity.Id], T1.[PlanActivity_IndicatorQualityActivity.IdOwner], T1.[PlanActivity_IndicatorQualityActivity.IdMaster], T1.[PlanActivity_IndicatorQualityActivity.IdIndicatorActivity])
    FROM (
        SELECT 
            T.id AS [PlanActivity_IndicatorQualityActivity.Id], 
            T.idOwner AS [PlanActivity_IndicatorQualityActivity.IdOwner], 
            T.idMaster AS [PlanActivity_IndicatorQualityActivity.IdMaster], 
            T.idIndicatorActivity AS [PlanActivity_IndicatorQualityActivity.IdIndicatorActivity], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_IndicatorQualityActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_IndicatorQualityActivityValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView505()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_IndicatorQualityActivityValue", @"
    SELECT VALUE -- Constructing PlanActivity_IndicatorQualityActivityValue
        [Tests.PlanActivity_IndicatorQualityActivityValue](T1.[PlanActivity_IndicatorQualityActivityValue.Id], T1.[PlanActivity_IndicatorQualityActivityValue.IdOwner], T1.[PlanActivity_IndicatorQualityActivityValue.IdMaster], T1.[PlanActivity_IndicatorQualityActivityValue.IdHierarchyPeriod], T1.[PlanActivity_IndicatorQualityActivityValue.Value], T1.[PlanActivity_IndicatorQualityActivityValue.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [PlanActivity_IndicatorQualityActivityValue.Id], 
            T.idOwner AS [PlanActivity_IndicatorQualityActivityValue.IdOwner], 
            T.idMaster AS [PlanActivity_IndicatorQualityActivityValue.IdMaster], 
            T.idHierarchyPeriod AS [PlanActivity_IndicatorQualityActivityValue.IdHierarchyPeriod], 
            T.[Value] AS [PlanActivity_IndicatorQualityActivityValue.Value], 
            T.AdditionalValue AS [PlanActivity_IndicatorQualityActivityValue.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_IndicatorQualityActivityValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_ActivityAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView506()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_ActivityAUBU", @"
    SELECT VALUE -- Constructing PlanActivity_ActivityAUBU
        [Tests.PlanActivity_ActivityAUBU](T1.[PlanActivity_ActivityAUBU.Id], T1.[PlanActivity_ActivityAUBU.IdOwner], T1.[PlanActivity_ActivityAUBU.IdActivity], T1.[PlanActivity_ActivityAUBU.IdContingent], T1.[PlanActivity_ActivityAUBU.IdIndicatorActivity])
    FROM (
        SELECT 
            T.id AS [PlanActivity_ActivityAUBU.Id], 
            T.idOwner AS [PlanActivity_ActivityAUBU.IdOwner], 
            T.idActivity AS [PlanActivity_ActivityAUBU.IdActivity], 
            T.idContingent AS [PlanActivity_ActivityAUBU.IdContingent], 
            T.idIndicatorActivity AS [PlanActivity_ActivityAUBU.IdIndicatorActivity], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_ActivityAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_ActivityVolumeAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView507()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_ActivityVolumeAUBU", @"
    SELECT VALUE -- Constructing PlanActivity_ActivityVolumeAUBU
        [Tests.PlanActivity_ActivityVolumeAUBU](T1.[PlanActivity_ActivityVolumeAUBU.Id], T1.[PlanActivity_ActivityVolumeAUBU.IdOwner], T1.[PlanActivity_ActivityVolumeAUBU.IdMaster], T1.[PlanActivity_ActivityVolumeAUBU.IdHierarchyPeriod], T1.[PlanActivity_ActivityVolumeAUBU.Volume], T1.[PlanActivity_ActivityVolumeAUBU.AdditionalVolume])
    FROM (
        SELECT 
            T.id AS [PlanActivity_ActivityVolumeAUBU.Id], 
            T.idOwner AS [PlanActivity_ActivityVolumeAUBU.IdOwner], 
            T.idMaster AS [PlanActivity_ActivityVolumeAUBU.IdMaster], 
            T.idHierarchyPeriod AS [PlanActivity_ActivityVolumeAUBU.IdHierarchyPeriod], 
            T.Volume AS [PlanActivity_ActivityVolumeAUBU.Volume], 
            T.AdditionalVolume AS [PlanActivity_ActivityVolumeAUBU.AdditionalVolume], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_ActivityVolumeAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_KBKOfFinancialProvision
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView508()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2348);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PlanActivity_KBKOfFinancialProvision\r\n       ");
            viewString.Append(" [Tests.PlanActivity_KBKOfFinancialProvision](T1.[PlanActivity_KBKOfFinancialPro");
            viewString.Append("vision.Id], T1.[PlanActivity_KBKOfFinancialProvision.IdOwner], T1.[PlanActivity_");
            viewString.Append("KBKOfFinancialProvision.IsMeansAUBU], T1.[PlanActivity_KBKOfFinancialProvision.I");
            viewString.Append("dExpenseObligationType], T1.[PlanActivity_KBKOfFinancialProvision.IdFinanceSourc");
            viewString.Append("e], T1.[PlanActivity_KBKOfFinancialProvision.IdKFO], T1.[PlanActivity_KBKOfFinan");
            viewString.Append("cialProvision.IdKVSR], T1.[PlanActivity_KBKOfFinancialProvision.IdRZPR], T1.[Pla");
            viewString.Append("nActivity_KBKOfFinancialProvision.IdKCSR], T1.[PlanActivity_KBKOfFinancialProvis");
            viewString.Append("ion.IdKVR], T1.[PlanActivity_KBKOfFinancialProvision.IdKOSGU], T1.[PlanActivity_");
            viewString.Append("KBKOfFinancialProvision.IdDFK], T1.[PlanActivity_KBKOfFinancialProvision.IdDKR],");
            viewString.Append(" T1.[PlanActivity_KBKOfFinancialProvision.IdDEK], T1.[PlanActivity_KBKOfFinancia");
            viewString.Append("lProvision.IdCodeSubsidy], T1.[PlanActivity_KBKOfFinancialProvision.IdBranchCode");
            viewString.Append("])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [PlanActivity_KBKOfFinancia");
            viewString.Append("lProvision.Id], \r\n            T.idOwner AS [PlanActivity_KBKOfFinancialProvision");
            viewString.Append(".IdOwner], \r\n            T.isMeansAUBU AS [PlanActivity_KBKOfFinancialProvision.");
            viewString.Append("IsMeansAUBU], \r\n            T.idExpenseObligationType AS [PlanActivity_KBKOfFina");
            viewString.Append("ncialProvision.IdExpenseObligationType], \r\n            T.idFinanceSource AS [Pla");
            viewString.Append("nActivity_KBKOfFinancialProvision.IdFinanceSource], \r\n            T.idKFO AS [Pl");
            viewString.Append("anActivity_KBKOfFinancialProvision.IdKFO], \r\n            T.idKVSR AS [PlanActivi");
            viewString.Append("ty_KBKOfFinancialProvision.IdKVSR], \r\n            T.idRZPR AS [PlanActivity_KBKO");
            viewString.Append("fFinancialProvision.IdRZPR], \r\n            T.idKCSR AS [PlanActivity_KBKOfFinanc");
            viewString.Append("ialProvision.IdKCSR], \r\n            T.idKVR AS [PlanActivity_KBKOfFinancialProvi");
            viewString.Append("sion.IdKVR], \r\n            T.idKOSGU AS [PlanActivity_KBKOfFinancialProvision.Id");
            viewString.Append("KOSGU], \r\n            T.idDFK AS [PlanActivity_KBKOfFinancialProvision.IdDFK], \r");
            viewString.Append("\n            T.idDKR AS [PlanActivity_KBKOfFinancialProvision.IdDKR], \r\n        ");
            viewString.Append("    T.idDEK AS [PlanActivity_KBKOfFinancialProvision.IdDEK], \r\n            T.idC");
            viewString.Append("odeSubsidy AS [PlanActivity_KBKOfFinancialProvision.IdCodeSubsidy], \r\n          ");
            viewString.Append("  T.idBranchCode AS [PlanActivity_KBKOfFinancialProvision.IdBranchCode], \r\n     ");
            viewString.Append("       True AS _from0\r\n        FROM CodeFirstDatabase.PlanActivity_KBKOfFinancia");
            viewString.Append("lProvision AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_KBKOfFinancialProvision", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_PeriodsOfFinancialProvision
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView509()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_PeriodsOfFinancialProvision", @"
    SELECT VALUE -- Constructing PlanActivity_PeriodsOfFinancialProvision
        [Tests.PlanActivity_PeriodsOfFinancialProvision](T1.[PlanActivity_PeriodsOfFinancialProvision.Id], T1.[PlanActivity_PeriodsOfFinancialProvision.IdOwner], T1.[PlanActivity_PeriodsOfFinancialProvision.IdHierarchyPeriod], T1.[PlanActivity_PeriodsOfFinancialProvision.Value], T1.[PlanActivity_PeriodsOfFinancialProvision.IdMaster], T1.[PlanActivity_PeriodsOfFinancialProvision.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [PlanActivity_PeriodsOfFinancialProvision.Id], 
            T.idOwner AS [PlanActivity_PeriodsOfFinancialProvision.IdOwner], 
            T.idHierarchyPeriod AS [PlanActivity_PeriodsOfFinancialProvision.IdHierarchyPeriod], 
            T.[Value] AS [PlanActivity_PeriodsOfFinancialProvision.Value], 
            T.idMaster AS [PlanActivity_PeriodsOfFinancialProvision.IdMaster], 
            T.AdditionalValue AS [PlanActivity_PeriodsOfFinancialProvision.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_PeriodsOfFinancialProvision AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_RequirementsForTheTask
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView510()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_RequirementsForTheTask", "\r\n    SELECT VALUE -- Constructing PlanActivity_RequirementsForTheTask\r\n        [" +
                    "Tests.PlanActivity_RequirementsForTheTask](T1.[PlanActivity_RequirementsForTheTa" +
                    "sk.Id], T1.[PlanActivity_RequirementsForTheTask.IdOwner], T1.[PlanActivity_Requi" +
                    "rementsForTheTask.IdActivityType], T1.[PlanActivity_RequirementsForTheTask.Reaso" +
                    "nTerminationTask], T1.[PlanActivity_RequirementsForTheTask.DatesReportingOnExecu" +
                    "tionTask], T1.[PlanActivity_RequirementsForTheTask.OtherRequirementsOnExecutionT" +
                    "ask], T1.[PlanActivity_RequirementsForTheTask.AnyOtherInformationOnExecutionTask" +
                    "], T1.[PlanActivity_RequirementsForTheTask.GroundsSuspendTasks])\r\n    FROM (\r\n  " +
                    "      SELECT \r\n            T.id AS [PlanActivity_RequirementsForTheTask.Id], \r\n " +
                    "           T.idOwner AS [PlanActivity_RequirementsForTheTask.IdOwner], \r\n       " +
                    "     T.idActivityType AS [PlanActivity_RequirementsForTheTask.IdActivityType], \r" +
                    "\n            T.ReasonTerminationTask AS [PlanActivity_RequirementsForTheTask.Rea" +
                    "sonTerminationTask], \r\n            T.DatesReportingOnExecutionTask AS [PlanActiv" +
                    "ity_RequirementsForTheTask.DatesReportingOnExecutionTask], \r\n            T.Other" +
                    "RequirementsOnExecutionTask AS [PlanActivity_RequirementsForTheTask.OtherRequire" +
                    "mentsOnExecutionTask], \r\n            T.AnyOtherInformationOnExecutionTask AS [Pl" +
                    "anActivity_RequirementsForTheTask.AnyOtherInformationOnExecutionTask], \r\n       " +
                    "     T.GroundsSuspendTasks AS [PlanActivity_RequirementsForTheTask.GroundsSuspen" +
                    "dTasks], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.PlanActivi" +
                    "ty_RequirementsForTheTask AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PlanActivity_OrderOfControlTheExecutionTasks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView511()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PlanActivity_OrderOfControlTheExecutionTasks", @"
    SELECT VALUE -- Constructing PlanActivity_OrderOfControlTheExecutionTasks
        [Tests.PlanActivity_OrderOfControlTheExecutionTasks](T1.[PlanActivity_OrderOfControlTheExecutionTasks.Id], T1.[PlanActivity_OrderOfControlTheExecutionTasks.IdOwner], T1.[PlanActivity_OrderOfControlTheExecutionTasks.IdMaster], T1.[PlanActivity_OrderOfControlTheExecutionTasks.FormOfControl], T1.[PlanActivity_OrderOfControlTheExecutionTasks.Periodicity], T1.[PlanActivity_OrderOfControlTheExecutionTasks.OrgansOfExecutiveAuthoritiesInCharge])
    FROM (
        SELECT 
            T.id AS [PlanActivity_OrderOfControlTheExecutionTasks.Id], 
            T.idOwner AS [PlanActivity_OrderOfControlTheExecutionTasks.IdOwner], 
            T.idMaster AS [PlanActivity_OrderOfControlTheExecutionTasks.IdMaster], 
            T.FormOfControl AS [PlanActivity_OrderOfControlTheExecutionTasks.FormOfControl], 
            T.Periodicity AS [PlanActivity_OrderOfControlTheExecutionTasks.Periodicity], 
            T.OrgansOfExecutiveAuthoritiesInCharge AS [PlanActivity_OrderOfControlTheExecutionTasks.OrgansOfExecutiveAuthoritiesInCharge], 
            True AS _from0
        FROM CodeFirstDatabase.PlanActivity_OrderOfControlTheExecutionTasks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_Program
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView512()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3092);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalancingIFDB_Program\r\n        [Tests.Balanci");
            viewString.Append("ngIFDB_Program](T1.[BalancingIFDB_Program.Id], T1.[BalancingIFDB_Program.IdOwner");
            viewString.Append("], T1.[BalancingIFDB_Program.IdParent], T1.[BalancingIFDB_Program.OFG], T1.[Bala");
            viewString.Append("ncingIFDB_Program.AdditionalOFG], T1.[BalancingIFDB_Program.ChangeOFG], T1.[Bala");
            viewString.Append("ncingIFDB_Program.ChangeAdditionalOFG], T1.[BalancingIFDB_Program.PFG1], T1.[Bal");
            viewString.Append("ancingIFDB_Program.AdditionalPFG1], T1.[BalancingIFDB_Program.ChangePFG1], T1.[B");
            viewString.Append("alancingIFDB_Program.ChangeAdditionalPFG1], T1.[BalancingIFDB_Program.PFG2], T1.");
            viewString.Append("[BalancingIFDB_Program.AdditionalPFG2], T1.[BalancingIFDB_Program.ChangePFG2], T");
            viewString.Append("1.[BalancingIFDB_Program.ChangeAdditionalPFG2], T1.[BalancingIFDB_Program.IdProg");
            viewString.Append("ramOrActivity], T1.[BalancingIFDB_Program.IdProgramOrActivityEntity], T1.[Balanc");
            viewString.Append("ingIFDB_Program.IdType], T1.[BalancingIFDB_Program.IdTypeEntity], T1.[BalancingI");
            viewString.Append("FDB_Program.DifferenceOFG], T1.[BalancingIFDB_Program.DifferenceAdditionalOFG], ");
            viewString.Append("T1.[BalancingIFDB_Program.DifferencePFG1], T1.[BalancingIFDB_Program.DifferenceA");
            viewString.Append("dditionalPFG1], T1.[BalancingIFDB_Program.DifferencePFG2], T1.[BalancingIFDB_Pro");
            viewString.Append("gram.DifferenceAdditionalPFG2])\r\n    FROM (\r\n        SELECT \r\n            T.id A");
            viewString.Append("S [BalancingIFDB_Program.Id], \r\n            T.idOwner AS [BalancingIFDB_Program.");
            viewString.Append("IdOwner], \r\n            T.idParent AS [BalancingIFDB_Program.IdParent], \r\n      ");
            viewString.Append("      T.OFG AS [BalancingIFDB_Program.OFG], \r\n            T.AdditionalOFG AS [Ba");
            viewString.Append("lancingIFDB_Program.AdditionalOFG], \r\n            T.ChangeOFG AS [BalancingIFDB_");
            viewString.Append("Program.ChangeOFG], \r\n            T.ChangeAdditionalOFG AS [BalancingIFDB_Progra");
            viewString.Append("m.ChangeAdditionalOFG], \r\n            T.PFG1 AS [BalancingIFDB_Program.PFG1], \r\n");
            viewString.Append("            T.AdditionalPFG1 AS [BalancingIFDB_Program.AdditionalPFG1], \r\n      ");
            viewString.Append("      T.ChangePFG1 AS [BalancingIFDB_Program.ChangePFG1], \r\n            T.Change");
            viewString.Append("AdditionalPFG1 AS [BalancingIFDB_Program.ChangeAdditionalPFG1], \r\n            T.");
            viewString.Append("PFG2 AS [BalancingIFDB_Program.PFG2], \r\n            T.AdditionalPFG2 AS [Balanci");
            viewString.Append("ngIFDB_Program.AdditionalPFG2], \r\n            T.ChangePFG2 AS [BalancingIFDB_Pro");
            viewString.Append("gram.ChangePFG2], \r\n            T.ChangeAdditionalPFG2 AS [BalancingIFDB_Program");
            viewString.Append(".ChangeAdditionalPFG2], \r\n            T.idProgramOrActivity AS [BalancingIFDB_Pr");
            viewString.Append("ogram.IdProgramOrActivity], \r\n            T.idProgramOrActivityEntity AS [Balanc");
            viewString.Append("ingIFDB_Program.IdProgramOrActivityEntity], \r\n            T.idType AS [Balancing");
            viewString.Append("IFDB_Program.IdType], \r\n            T.idTypeEntity AS [BalancingIFDB_Program.IdT");
            viewString.Append("ypeEntity], \r\n            T.DifferenceOFG AS [BalancingIFDB_Program.DifferenceOF");
            viewString.Append("G], \r\n            T.DifferenceAdditionalOFG AS [BalancingIFDB_Program.Difference");
            viewString.Append("AdditionalOFG], \r\n            T.DifferencePFG1 AS [BalancingIFDB_Program.Differe");
            viewString.Append("ncePFG1], \r\n            T.DifferenceAdditionalPFG1 AS [BalancingIFDB_Program.Dif");
            viewString.Append("ferenceAdditionalPFG1], \r\n            T.DifferencePFG2 AS [BalancingIFDB_Program");
            viewString.Append(".DifferencePFG2], \r\n            T.DifferenceAdditionalPFG2 AS [BalancingIFDB_Pro");
            viewString.Append("gram.DifferenceAdditionalPFG2], \r\n            True AS _from0\r\n        FROM CodeF");
            viewString.Append("irstDatabase.BalancingIFDB_Program AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_Program", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView513()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB", "\r\n    SELECT VALUE -- Constructing BalancingIFDB\r\n        [Tests.BalancingIFDB](T" +
                    "1.BalancingIFDB_Id, T1.BalancingIFDB_IdPublicLegalFormation, T1.BalancingIFDB_Id" +
                    "Version, T1.BalancingIFDB_Number, T1.BalancingIFDB_Date, T1.BalancingIFDB_DateCo" +
                    "mmit, T1.BalancingIFDB_Description, T1.BalancingIFDB_DateLastEdit, T1.BalancingI" +
                    "FDB_Caption, T1.BalancingIFDB_IdSourcesDataTools, T1.BalancingIFDB_IdBudget, T1." +
                    "BalancingIFDB_IdDocStatus, T1.BalancingIFDB_IdBalancingIFDBType, T1.[BalancingIF" +
                    "DB.IdBalanceConfig_FilterRule], T1.BalancingIFDB_IdUser)\r\n    FROM (\r\n        SE" +
                    "LECT \r\n            T.id AS BalancingIFDB_Id, \r\n            T.idPublicLegalFormat" +
                    "ion AS BalancingIFDB_IdPublicLegalFormation, \r\n            T.idVersion AS Balanc" +
                    "ingIFDB_IdVersion, \r\n            T.Number AS BalancingIFDB_Number, \r\n           " +
                    " T.Date AS BalancingIFDB_Date, \r\n            T.DateCommit AS BalancingIFDB_DateC" +
                    "ommit, \r\n            T.Description AS BalancingIFDB_Description, \r\n            T" +
                    ".DateLastEdit AS BalancingIFDB_DateLastEdit, \r\n            T.Caption AS Balancin" +
                    "gIFDB_Caption, \r\n            T.idSourcesDataTools AS BalancingIFDB_IdSourcesData" +
                    "Tools, \r\n            T.idBudget AS BalancingIFDB_IdBudget, \r\n            T.idDoc" +
                    "Status AS BalancingIFDB_IdDocStatus, \r\n            T.idBalancingIFDBType AS Bala" +
                    "ncingIFDB_IdBalancingIFDBType, \r\n            T.idBalanceConfig_FilterRule AS [Ba" +
                    "lancingIFDB.IdBalanceConfig_FilterRule], \r\n            T.idUser AS BalancingIFDB" +
                    "_IdUser, \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.BalancingI" +
                    "FDB AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_Expense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView514()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4181);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalancingIFDB_Expense\r\n        [Tests.Balanci");
            viewString.Append("ngIFDB_Expense](T1.[BalancingIFDB_Expense.Id], T1.[BalancingIFDB_Expense.IdOwner");
            viewString.Append("], T1.[BalancingIFDB_Expense.IdMaster], T1.[BalancingIFDB_Expense.IdExpenseOblig");
            viewString.Append("ationType], T1.[BalancingIFDB_Expense.IdFinanceSource], T1.[BalancingIFDB_Expens");
            viewString.Append("e.IdKFO], T1.[BalancingIFDB_Expense.IdKVSR], T1.[BalancingIFDB_Expense.IdRZPR], ");
            viewString.Append("T1.[BalancingIFDB_Expense.IdKCSR], T1.[BalancingIFDB_Expense.IdKVR], T1.[Balanci");
            viewString.Append("ngIFDB_Expense.IdKOSGU], T1.[BalancingIFDB_Expense.IdDFK], T1.[BalancingIFDB_Exp");
            viewString.Append("ense.IdDKR], T1.[BalancingIFDB_Expense.IdDEK], T1.[BalancingIFDB_Expense.IdCodeS");
            viewString.Append("ubsidy], T1.[BalancingIFDB_Expense.IdBranchCode], T1.[BalancingIFDB_Expense.OFG]");
            viewString.Append(", T1.[BalancingIFDB_Expense.AdditionalOFG], T1.[BalancingIFDB_Expense.ChangeOFG]");
            viewString.Append(", T1.[BalancingIFDB_Expense.ChangeAdditionalOFG], T1.[BalancingIFDB_Expense.PFG1");
            viewString.Append("], T1.[BalancingIFDB_Expense.AdditionalPFG1], T1.[BalancingIFDB_Expense.ChangePF");
            viewString.Append("G1], T1.[BalancingIFDB_Expense.ChangeAdditionalPFG1], T1.[BalancingIFDB_Expense.");
            viewString.Append("PFG2], T1.[BalancingIFDB_Expense.AdditionalPFG2], T1.[BalancingIFDB_Expense.Chan");
            viewString.Append("gePFG2], T1.[BalancingIFDB_Expense.ChangeAdditionalPFG2], T1.[BalancingIFDB_Expe");
            viewString.Append("nse.DifferenceOFG], T1.[BalancingIFDB_Expense.DifferenceAdditionalOFG], T1.[Bala");
            viewString.Append("ncingIFDB_Expense.DifferencePFG1], T1.[BalancingIFDB_Expense.DifferenceAdditiona");
            viewString.Append("lPFG1], T1.[BalancingIFDB_Expense.DifferencePFG2], T1.[BalancingIFDB_Expense.Dif");
            viewString.Append("ferenceAdditionalPFG2], T1.[BalancingIFDB_Expense.IdOKATO], T1.[BalancingIFDB_Ex");
            viewString.Append("pense.IdAuthorityOfExpenseObligation])\r\n    FROM (\r\n        SELECT \r\n           ");
            viewString.Append(" T.id AS [BalancingIFDB_Expense.Id], \r\n            T.idOwner AS [BalancingIFDB_E");
            viewString.Append("xpense.IdOwner], \r\n            T.idMaster AS [BalancingIFDB_Expense.IdMaster], \r");
            viewString.Append("\n            T.idExpenseObligationType AS [BalancingIFDB_Expense.IdExpenseObliga");
            viewString.Append("tionType], \r\n            T.idFinanceSource AS [BalancingIFDB_Expense.IdFinanceSo");
            viewString.Append("urce], \r\n            T.idKFO AS [BalancingIFDB_Expense.IdKFO], \r\n            T.i");
            viewString.Append("dKVSR AS [BalancingIFDB_Expense.IdKVSR], \r\n            T.idRZPR AS [BalancingIFD");
            viewString.Append("B_Expense.IdRZPR], \r\n            T.idKCSR AS [BalancingIFDB_Expense.IdKCSR], \r\n ");
            viewString.Append("           T.idKVR AS [BalancingIFDB_Expense.IdKVR], \r\n            T.idKOSGU AS ");
            viewString.Append("[BalancingIFDB_Expense.IdKOSGU], \r\n            T.idDFK AS [BalancingIFDB_Expense");
            viewString.Append(".IdDFK], \r\n            T.idDKR AS [BalancingIFDB_Expense.IdDKR], \r\n            T");
            viewString.Append(".idDEK AS [BalancingIFDB_Expense.IdDEK], \r\n            T.idCodeSubsidy AS [Balan");
            viewString.Append("cingIFDB_Expense.IdCodeSubsidy], \r\n            T.idBranchCode AS [BalancingIFDB_");
            viewString.Append("Expense.IdBranchCode], \r\n            T.OFG AS [BalancingIFDB_Expense.OFG], \r\n   ");
            viewString.Append("         T.AdditionalOFG AS [BalancingIFDB_Expense.AdditionalOFG], \r\n           ");
            viewString.Append(" T.ChangeOFG AS [BalancingIFDB_Expense.ChangeOFG], \r\n            T.ChangeAdditio");
            viewString.Append("nalOFG AS [BalancingIFDB_Expense.ChangeAdditionalOFG], \r\n            T.PFG1 AS [");
            viewString.Append("BalancingIFDB_Expense.PFG1], \r\n            T.AdditionalPFG1 AS [BalancingIFDB_Ex");
            viewString.Append("pense.AdditionalPFG1], \r\n            T.ChangePFG1 AS [BalancingIFDB_Expense.Chan");
            viewString.Append("gePFG1], \r\n            T.ChangeAdditionalPFG1 AS [BalancingIFDB_Expense.ChangeAd");
            viewString.Append("ditionalPFG1], \r\n            T.PFG2 AS [BalancingIFDB_Expense.PFG2], \r\n         ");
            viewString.Append("   T.AdditionalPFG2 AS [BalancingIFDB_Expense.AdditionalPFG2], \r\n            T.C");
            viewString.Append("hangePFG2 AS [BalancingIFDB_Expense.ChangePFG2], \r\n            T.ChangeAdditiona");
            viewString.Append("lPFG2 AS [BalancingIFDB_Expense.ChangeAdditionalPFG2], \r\n            T.Differenc");
            viewString.Append("eOFG AS [BalancingIFDB_Expense.DifferenceOFG], \r\n            T.DifferenceAdditio");
            viewString.Append("nalOFG AS [BalancingIFDB_Expense.DifferenceAdditionalOFG], \r\n            T.Diffe");
            viewString.Append("rencePFG1 AS [BalancingIFDB_Expense.DifferencePFG1], \r\n            T.DifferenceA");
            viewString.Append("dditionalPFG1 AS [BalancingIFDB_Expense.DifferenceAdditionalPFG1], \r\n           ");
            viewString.Append(" T.DifferencePFG2 AS [BalancingIFDB_Expense.DifferencePFG2], \r\n            T.Dif");
            viewString.Append("ferenceAdditionalPFG2 AS [BalancingIFDB_Expense.DifferenceAdditionalPFG2], \r\n   ");
            viewString.Append("         T.idOKATO AS [BalancingIFDB_Expense.IdOKATO], \r\n            T.idAuthori");
            viewString.Append("tyOfExpenseObligation AS [BalancingIFDB_Expense.IdAuthorityOfExpenseObligation],");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.BalancingIFDB_Expe");
            viewString.Append("nse AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_Expense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_EstimatedLine
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView515()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_EstimatedLine", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_EstimatedLine\r\n        [Tests.Ba" +
                    "lancingIFDB_EstimatedLine](T1.[BalancingIFDB_EstimatedLine.Id], T1.[BalancingIFD" +
                    "B_EstimatedLine.IdOwner], T1.[BalancingIFDB_EstimatedLine.IdMaster], T1.[Balanci" +
                    "ngIFDB_EstimatedLine.IdEstimatedLine], T1.[BalancingIFDB_EstimatedLine.OldValue]" +
                    ", T1.[BalancingIFDB_EstimatedLine.NewValue], T1.[BalancingIFDB_EstimatedLine.IdT" +
                    "askCollection], T1.[BalancingIFDB_EstimatedLine.IdHierarchyPeriod], T1.[Balancin" +
                    "gIFDB_EstimatedLine.IsAdditionalNeed], T1.[BalancingIFDB_EstimatedLine.IdOKATO]," +
                    " T1.[BalancingIFDB_EstimatedLine.IdAuthorityOfExpenseObligation])\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.id AS [BalancingIFDB_EstimatedLine.Id], \r\n        " +
                    "    T.idOwner AS [BalancingIFDB_EstimatedLine.IdOwner], \r\n            T.idMaster" +
                    " AS [BalancingIFDB_EstimatedLine.IdMaster], \r\n            T.idEstimatedLine AS [" +
                    "BalancingIFDB_EstimatedLine.IdEstimatedLine], \r\n            T.OldValue AS [Balan" +
                    "cingIFDB_EstimatedLine.OldValue], \r\n            T.NewValue AS [BalancingIFDB_Est" +
                    "imatedLine.NewValue], \r\n            T.idTaskCollection AS [BalancingIFDB_Estimat" +
                    "edLine.IdTaskCollection], \r\n            T.idHierarchyPeriod AS [BalancingIFDB_Es" +
                    "timatedLine.IdHierarchyPeriod], \r\n            T.isAdditionalNeed AS [BalancingIF" +
                    "DB_EstimatedLine.IsAdditionalNeed], \r\n            T.idOKATO AS [BalancingIFDB_Es" +
                    "timatedLine.IdOKATO], \r\n            T.idAuthorityOfExpenseObligation AS [Balanci" +
                    "ngIFDB_EstimatedLine.IdAuthorityOfExpenseObligation], \r\n            True AS _fro" +
                    "m0\r\n        FROM CodeFirstDatabase.BalancingIFDB_EstimatedLine AS T\r\n    ) AS T1" +
                    "");
        }
        
        /// <Summary>
        /// return view for DataContext.EstimatedLine
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView516()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EstimatedLine", "\r\n    SELECT VALUE -- Constructing EstimatedLine\r\n        [Tests.EstimatedLine](T" +
                    "1.EstimatedLine_Id, T1.EstimatedLine_IdPublicLegalFormation, T1.EstimatedLine_Id" +
                    "Budget, T1.EstimatedLine_Caption, T1.EstimatedLine_IdSBP, T1.EstimatedLine_IdAct" +
                    "ivityBudgetaryType, T1.EstimatedLine_IdExpenseObligationType, T1.EstimatedLine_I" +
                    "dFinanceSource, T1.EstimatedLine_IdKFO, T1.EstimatedLine_IdKVSR, T1.EstimatedLin" +
                    "e_IdRZPR, T1.EstimatedLine_IdKCSR, T1.EstimatedLine_IdKOSGU, T1.EstimatedLine_Id" +
                    "DFK, T1.EstimatedLine_IdDKR, T1.EstimatedLine_IdDEK, T1.EstimatedLine_IdCodeSubs" +
                    "idy, T1.EstimatedLine_IdKVR, T1.EstimatedLine_IdBranchCode)\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.id AS EstimatedLine_Id, \r\n            T.idPublicLegalFor" +
                    "mation AS EstimatedLine_IdPublicLegalFormation, \r\n            T.idBudget AS Esti" +
                    "matedLine_IdBudget, \r\n            T.Caption AS EstimatedLine_Caption, \r\n        " +
                    "    T.idSBP AS EstimatedLine_IdSBP, \r\n            T.idActivityBudgetaryType AS E" +
                    "stimatedLine_IdActivityBudgetaryType, \r\n            T.idExpenseObligationType AS" +
                    " EstimatedLine_IdExpenseObligationType, \r\n            T.idFinanceSource AS Estim" +
                    "atedLine_IdFinanceSource, \r\n            T.idKFO AS EstimatedLine_IdKFO, \r\n      " +
                    "      T.idKVSR AS EstimatedLine_IdKVSR, \r\n            T.idRZPR AS EstimatedLine_" +
                    "IdRZPR, \r\n            T.idKCSR AS EstimatedLine_IdKCSR, \r\n            T.idKOSGU " +
                    "AS EstimatedLine_IdKOSGU, \r\n            T.idDFK AS EstimatedLine_IdDFK, \r\n      " +
                    "      T.idDKR AS EstimatedLine_IdDKR, \r\n            T.idDEK AS EstimatedLine_IdD" +
                    "EK, \r\n            T.idCodeSubsidy AS EstimatedLine_IdCodeSubsidy, \r\n            " +
                    "T.idKVR AS EstimatedLine_IdKVR, \r\n            T.idBranchCode AS EstimatedLine_Id" +
                    "BranchCode, \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.Estimat" +
                    "edLine AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TaskCollection
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView517()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TaskCollection", @"
    SELECT VALUE -- Constructing TaskCollection
        [Tests.TaskCollection](T1.TaskCollection_Id, T1.TaskCollection_IdPublicLegalFormation, T1.TaskCollection_IdActivity, T1.TaskCollection_IdContingent)
    FROM (
        SELECT 
            T.id AS TaskCollection_Id, 
            T.idPublicLegalFormation AS TaskCollection_IdPublicLegalFormation, 
            T.idActivity AS TaskCollection_IdActivity, 
            T.idContingent AS TaskCollection_IdContingent, 
            True AS _from0
        FROM CodeFirstDatabase.TaskCollection AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_ChangeHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView518()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_ChangeHistory", @"
    SELECT VALUE -- Constructing BalancingIFDB_ChangeHistory
        [Tests.BalancingIFDB_ChangeHistory](T1.[BalancingIFDB_ChangeHistory.Id], T1.[BalancingIFDB_ChangeHistory.IdOwner], T1.[BalancingIFDB_ChangeHistory.IdMaster], T1.[BalancingIFDB_ChangeHistory.IdBalancingIFDB_RuleIndex], T1.[BalancingIFDB_ChangeHistory.OldValue])
    FROM (
        SELECT 
            T.id AS [BalancingIFDB_ChangeHistory.Id], 
            T.idOwner AS [BalancingIFDB_ChangeHistory.IdOwner], 
            T.idMaster AS [BalancingIFDB_ChangeHistory.IdMaster], 
            T.idBalancingIFDB_RuleIndex AS [BalancingIFDB_ChangeHistory.IdBalancingIFDB_RuleIndex], 
            T.OldValue AS [BalancingIFDB_ChangeHistory.OldValue], 
            True AS _from0
        FROM CodeFirstDatabase.BalancingIFDB_ChangeHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleIndex
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView519()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleIndex", @"
    SELECT VALUE -- Constructing BalancingIFDB_RuleIndex
        [Tests.BalancingIFDB_RuleIndex](T1.[BalancingIFDB_RuleIndex.Id], T1.[BalancingIFDB_RuleIndex.IdOwner], T1.[BalancingIFDB_RuleIndex.Caption], T1.[BalancingIFDB_RuleIndex.IndexOFG], T1.[BalancingIFDB_RuleIndex.IndexPFG1], T1.[BalancingIFDB_RuleIndex.IndexPFG2], T1.[BalancingIFDB_RuleIndex.IsApplied], T1.[BalancingIFDB_RuleIndex.ChangeCount], T1.[BalancingIFDB_RuleIndex.ChangeNumber], T1.[BalancingIFDB_RuleIndex.IsIncludeAdditionalNeed])
    FROM (
        SELECT 
            T.id AS [BalancingIFDB_RuleIndex.Id], 
            T.idOwner AS [BalancingIFDB_RuleIndex.IdOwner], 
            T.Caption AS [BalancingIFDB_RuleIndex.Caption], 
            T.IndexOFG AS [BalancingIFDB_RuleIndex.IndexOFG], 
            T.IndexPFG1 AS [BalancingIFDB_RuleIndex.IndexPFG1], 
            T.IndexPFG2 AS [BalancingIFDB_RuleIndex.IndexPFG2], 
            T.isApplied AS [BalancingIFDB_RuleIndex.IsApplied], 
            T.ChangeCount AS [BalancingIFDB_RuleIndex.ChangeCount], 
            T.ChangeNumber AS [BalancingIFDB_RuleIndex.ChangeNumber], 
            T.isIncludeAdditionalNeed AS [BalancingIFDB_RuleIndex.IsIncludeAdditionalNeed], 
            True AS _from0
        FROM CodeFirstDatabase.BalancingIFDB_RuleIndex AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView520()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3029);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK\r\n        [Tests.B");
            viewString.Append("alancingIFDB_RuleFilterKBK](T1.[BalancingIFDB_RuleFilterKBK.Id], T1.[BalancingIF");
            viewString.Append("DB_RuleFilterKBK.IdOwner], T1.[BalancingIFDB_RuleFilterKBK.IdMaster], T1.[Balanc");
            viewString.Append("ingIFDB_RuleFilterKBK.IdFilterFieldType_BranchCode], T1.[BalancingIFDB_RuleFilte");
            viewString.Append("rKBK.IdFilterFieldType_CodeSubsidy], T1.[BalancingIFDB_RuleFilterKBK.IdFilterFie");
            viewString.Append("ldType_DEK], T1.[BalancingIFDB_RuleFilterKBK.IdFilterFieldType_DFK], T1.[Balanci");
            viewString.Append("ngIFDB_RuleFilterKBK.IdFilterFieldType_DKR], T1.[BalancingIFDB_RuleFilterKBK.IdF");
            viewString.Append("ilterFieldType_ExpenseObligationType], T1.[BalancingIFDB_RuleFilterKBK.IdFilterF");
            viewString.Append("ieldType_FinanceSource], T1.[BalancingIFDB_RuleFilterKBK.IdFilterFieldType_KCSR]");
            viewString.Append(", T1.[BalancingIFDB_RuleFilterKBK.IdFilterFieldType_KFO], T1.[BalancingIFDB_Rule");
            viewString.Append("FilterKBK.IdFilterFieldType_KOSGU], T1.[BalancingIFDB_RuleFilterKBK.IdFilterFiel");
            viewString.Append("dType_KVR], T1.[BalancingIFDB_RuleFilterKBK.IdFilterFieldType_KVSR], T1.[Balanci");
            viewString.Append("ngIFDB_RuleFilterKBK.IdFilterFieldType_RZPR], T1.[BalancingIFDB_RuleFilterKBK.Id");
            viewString.Append("FilterFieldType_OKATO], T1.[BalancingIFDB_RuleFilterKBK.IdFilterFieldType_Author");
            viewString.Append("ityOfExpenseObligation])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [Bala");
            viewString.Append("ncingIFDB_RuleFilterKBK.Id], \r\n            T.idOwner AS [BalancingIFDB_RuleFilte");
            viewString.Append("rKBK.IdOwner], \r\n            T.idMaster AS [BalancingIFDB_RuleFilterKBK.IdMaster");
            viewString.Append("], \r\n            T.idFilterFieldType_BranchCode AS [BalancingIFDB_RuleFilterKBK.");
            viewString.Append("IdFilterFieldType_BranchCode], \r\n            T.idFilterFieldType_CodeSubsidy AS ");
            viewString.Append("[BalancingIFDB_RuleFilterKBK.IdFilterFieldType_CodeSubsidy], \r\n            T.idF");
            viewString.Append("ilterFieldType_DEK AS [BalancingIFDB_RuleFilterKBK.IdFilterFieldType_DEK], \r\n   ");
            viewString.Append("         T.idFilterFieldType_DFK AS [BalancingIFDB_RuleFilterKBK.IdFilterFieldTy");
            viewString.Append("pe_DFK], \r\n            T.idFilterFieldType_DKR AS [BalancingIFDB_RuleFilterKBK.I");
            viewString.Append("dFilterFieldType_DKR], \r\n            T.idFilterFieldType_ExpenseObligationType A");
            viewString.Append("S [BalancingIFDB_RuleFilterKBK.IdFilterFieldType_ExpenseObligationType], \r\n     ");
            viewString.Append("       T.idFilterFieldType_FinanceSource AS [BalancingIFDB_RuleFilterKBK.IdFilte");
            viewString.Append("rFieldType_FinanceSource], \r\n            T.idFilterFieldType_KCSR AS [BalancingI");
            viewString.Append("FDB_RuleFilterKBK.IdFilterFieldType_KCSR], \r\n            T.idFilterFieldType_KFO");
            viewString.Append(" AS [BalancingIFDB_RuleFilterKBK.IdFilterFieldType_KFO], \r\n            T.idFilte");
            viewString.Append("rFieldType_KOSGU AS [BalancingIFDB_RuleFilterKBK.IdFilterFieldType_KOSGU], \r\n   ");
            viewString.Append("         T.idFilterFieldType_KVR AS [BalancingIFDB_RuleFilterKBK.IdFilterFieldTy");
            viewString.Append("pe_KVR], \r\n            T.idFilterFieldType_KVSR AS [BalancingIFDB_RuleFilterKBK.");
            viewString.Append("IdFilterFieldType_KVSR], \r\n            T.idFilterFieldType_RZPR AS [BalancingIFD");
            viewString.Append("B_RuleFilterKBK.IdFilterFieldType_RZPR], \r\n            T.idFilterFieldType_OKATO");
            viewString.Append(" AS [BalancingIFDB_RuleFilterKBK.IdFilterFieldType_OKATO], \r\n            T.idFil");
            viewString.Append("terFieldType_AuthorityOfExpenseObligation AS [BalancingIFDB_RuleFilterKBK.IdFilt");
            viewString.Append("erFieldType_AuthorityOfExpenseObligation], \r\n            True AS _from0\r\n       ");
            viewString.Append(" FROM CodeFirstDatabase.BalancingIFDB_RuleFilterKBK AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_SetShowKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView521()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_SetShowKBK", @"
    SELECT VALUE -- Constructing BalancingIFDB_SetShowKBK
        [Tests.BalancingIFDB_SetShowKBK](T1.[BalancingIFDB_SetShowKBK.Id], T1.[BalancingIFDB_SetShowKBK.IdOwner], T1.[BalancingIFDB_SetShowKBK.IdEntityField])
    FROM (
        SELECT 
            T.id AS [BalancingIFDB_SetShowKBK.Id], 
            T.idOwner AS [BalancingIFDB_SetShowKBK.IdOwner], 
            T.idEntityField AS [BalancingIFDB_SetShowKBK.IdEntityField], 
            True AS _from0
        FROM CodeFirstDatabase.BalancingIFDB_SetShowKBK AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterRule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView522()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterRule", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterRule
        [Tests.BalanceConfig_FilterRule](T1.[BalanceConfig_FilterRule.Id], T1.[BalanceConfig_FilterRule.IdOwner], T1.[BalanceConfig_FilterRule.Caption])
    FROM (
        SELECT 
            T.id AS [BalanceConfig_FilterRule.Id], 
            T.idOwner AS [BalanceConfig_FilterRule.IdOwner], 
            T.Caption AS [BalanceConfig_FilterRule.Caption], 
            True AS _from0
        FROM CodeFirstDatabase.BalanceConfig_FilterRule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView523()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig", @"
    SELECT VALUE -- Constructing BalanceConfig
        [Tests.BalanceConfig](T1.BalanceConfig_Id, T1.BalanceConfig_Caption, T1.BalanceConfig_Date, T1.BalanceConfig_IdSourcesDataTools, T1.BalanceConfig_IdParent, T1.BalanceConfig_IdDocStatus, T1.BalanceConfig_DateLastEdit, T1.BalanceConfig_IdBalancingIFDBType)
    FROM (
        SELECT 
            T.id AS BalanceConfig_Id, 
            T.Caption AS BalanceConfig_Caption, 
            T.Date AS BalanceConfig_Date, 
            T.idSourcesDataTools AS BalanceConfig_IdSourcesDataTools, 
            T.idParent AS BalanceConfig_IdParent, 
            T.idDocStatus AS BalanceConfig_IdDocStatus, 
            T.DateLastEdit AS BalanceConfig_DateLastEdit, 
            T.idBalancingIFDBType AS BalanceConfig_IdBalancingIFDBType, 
            True AS _from0
        FROM CodeFirstDatabase.BalanceConfig AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView524()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_User", @"
    SELECT VALUE -- Constructing BalanceConfig_User
        [Tests.BalanceConfig_User](T1.[BalanceConfig_User.Id], T1.[BalanceConfig_User.IdOwner], T1.[BalanceConfig_User.IdUser], T1.[BalanceConfig_User.IdMaster])
    FROM (
        SELECT 
            T.id AS [BalanceConfig_User.Id], 
            T.idOwner AS [BalanceConfig_User.IdOwner], 
            T.idUser AS [BalanceConfig_User.IdUser], 
            T.idMaster AS [BalanceConfig_User.IdMaster], 
            True AS _from0
        FROM CodeFirstDatabase.BalanceConfig_User AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView525()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2873);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK\r\n        [Tests.Balan");
            viewString.Append("ceConfig_FilterKBK](T1.[BalanceConfig_FilterKBK.Id], T1.[BalanceConfig_FilterKBK");
            viewString.Append(".IdOwner], T1.[BalanceConfig_FilterKBK.IdMaster], T1.[BalanceConfig_FilterKBK.Id");
            viewString.Append("FilterFieldType_BranchCode], T1.[BalanceConfig_FilterKBK.IdFilterFieldType_CodeS");
            viewString.Append("ubsidy], T1.[BalanceConfig_FilterKBK.IdFilterFieldType_DEK], T1.[BalanceConfig_F");
            viewString.Append("ilterKBK.IdFilterFieldType_DFK], T1.[BalanceConfig_FilterKBK.IdFilterFieldType_D");
            viewString.Append("KR], T1.[BalanceConfig_FilterKBK.IdFilterFieldType_ExpenseObligationType], T1.[B");
            viewString.Append("alanceConfig_FilterKBK.IdFilterFieldType_FinanceSource], T1.[BalanceConfig_Filte");
            viewString.Append("rKBK.IdFilterFieldType_KCSR], T1.[BalanceConfig_FilterKBK.IdFilterFieldType_KFO]");
            viewString.Append(", T1.[BalanceConfig_FilterKBK.IdFilterFieldType_KOSGU], T1.[BalanceConfig_Filter");
            viewString.Append("KBK.IdFilterFieldType_KVR], T1.[BalanceConfig_FilterKBK.IdFilterFieldType_KVSR],");
            viewString.Append(" T1.[BalanceConfig_FilterKBK.IdFilterFieldType_RZPR], T1.[BalanceConfig_FilterKB");
            viewString.Append("K.IdFilterFieldType_OKATO], T1.[BalanceConfig_FilterKBK.IdFilterFieldType_Author");
            viewString.Append("ityOfExpenseObligation])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [Bala");
            viewString.Append("nceConfig_FilterKBK.Id], \r\n            T.idOwner AS [BalanceConfig_FilterKBK.IdO");
            viewString.Append("wner], \r\n            T.idMaster AS [BalanceConfig_FilterKBK.IdMaster], \r\n       ");
            viewString.Append("     T.idFilterFieldType_BranchCode AS [BalanceConfig_FilterKBK.IdFilterFieldTyp");
            viewString.Append("e_BranchCode], \r\n            T.idFilterFieldType_CodeSubsidy AS [BalanceConfig_F");
            viewString.Append("ilterKBK.IdFilterFieldType_CodeSubsidy], \r\n            T.idFilterFieldType_DEK A");
            viewString.Append("S [BalanceConfig_FilterKBK.IdFilterFieldType_DEK], \r\n            T.idFilterField");
            viewString.Append("Type_DFK AS [BalanceConfig_FilterKBK.IdFilterFieldType_DFK], \r\n            T.idF");
            viewString.Append("ilterFieldType_DKR AS [BalanceConfig_FilterKBK.IdFilterFieldType_DKR], \r\n       ");
            viewString.Append("     T.idFilterFieldType_ExpenseObligationType AS [BalanceConfig_FilterKBK.IdFil");
            viewString.Append("terFieldType_ExpenseObligationType], \r\n            T.idFilterFieldType_FinanceSo");
            viewString.Append("urce AS [BalanceConfig_FilterKBK.IdFilterFieldType_FinanceSource], \r\n           ");
            viewString.Append(" T.idFilterFieldType_KCSR AS [BalanceConfig_FilterKBK.IdFilterFieldType_KCSR], \r");
            viewString.Append("\n            T.idFilterFieldType_KFO AS [BalanceConfig_FilterKBK.IdFilterFieldTy");
            viewString.Append("pe_KFO], \r\n            T.idFilterFieldType_KOSGU AS [BalanceConfig_FilterKBK.IdF");
            viewString.Append("ilterFieldType_KOSGU], \r\n            T.idFilterFieldType_KVR AS [BalanceConfig_F");
            viewString.Append("ilterKBK.IdFilterFieldType_KVR], \r\n            T.idFilterFieldType_KVSR AS [Bala");
            viewString.Append("nceConfig_FilterKBK.IdFilterFieldType_KVSR], \r\n            T.idFilterFieldType_R");
            viewString.Append("ZPR AS [BalanceConfig_FilterKBK.IdFilterFieldType_RZPR], \r\n            T.idFilte");
            viewString.Append("rFieldType_OKATO AS [BalanceConfig_FilterKBK.IdFilterFieldType_OKATO], \r\n       ");
            viewString.Append("     T.idFilterFieldType_AuthorityOfExpenseObligation AS [BalanceConfig_FilterKB");
            viewString.Append("K.IdFilterFieldType_AuthorityOfExpenseObligation], \r\n            True AS _from0\r");
            viewString.Append("\n        FROM CodeFirstDatabase.BalanceConfig_FilterKBK AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.ApprovalBalancingIFDB
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView526()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ApprovalBalancingIFDB", @"
    SELECT VALUE -- Constructing ApprovalBalancingIFDB
        [Tests.ApprovalBalancingIFDB](T1.ApprovalBalancingIFDB_Id, T1.ApprovalBalancingIFDB_IdPublicLegalFormation, T1.ApprovalBalancingIFDB_IdVersion, T1.ApprovalBalancingIFDB_Date, T1.ApprovalBalancingIFDB_DateCommit, T1.ApprovalBalancingIFDB_Description, T1.ApprovalBalancingIFDB_DateLastEdit, T1.ApprovalBalancingIFDB_IdBudget, T1.ApprovalBalancingIFDB_IdDocStatus, T1.ApprovalBalancingIFDB_IdSourcesDataTools, T1.ApprovalBalancingIFDB_Number)
    FROM (
        SELECT 
            T.id AS ApprovalBalancingIFDB_Id, 
            T.idPublicLegalFormation AS ApprovalBalancingIFDB_IdPublicLegalFormation, 
            T.idVersion AS ApprovalBalancingIFDB_IdVersion, 
            T.Date AS ApprovalBalancingIFDB_Date, 
            T.DateCommit AS ApprovalBalancingIFDB_DateCommit, 
            T.Description AS ApprovalBalancingIFDB_Description, 
            T.DateLastEdit AS ApprovalBalancingIFDB_DateLastEdit, 
            T.idBudget AS ApprovalBalancingIFDB_IdBudget, 
            T.idDocStatus AS ApprovalBalancingIFDB_IdDocStatus, 
            T.idSourcesDataTools AS ApprovalBalancingIFDB_IdSourcesDataTools, 
            T.Number AS ApprovalBalancingIFDB_Number, 
            True AS _from0
        FROM CodeFirstDatabase.ApprovalBalancingIFDB AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ApprovalBalancingIFDB_Blank
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView527()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2618);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ApprovalBalancingIFDB_Blank\r\n        [Tests.A");
            viewString.Append("pprovalBalancingIFDB_Blank](T1.[ApprovalBalancingIFDB_Blank.Id], T1.[ApprovalBal");
            viewString.Append("ancingIFDB_Blank.IdOwner], T1.[ApprovalBalancingIFDB_Blank.IdBlankType], T1.[App");
            viewString.Append("rovalBalancingIFDB_Blank.IdBlankValueType_ExpenseObligationType], T1.[ApprovalBa");
            viewString.Append("lancingIFDB_Blank.IdBlankValueType_FinanceSource], T1.[ApprovalBalancingIFDB_Bla");
            viewString.Append("nk.IdBlankValueType_KFO], T1.[ApprovalBalancingIFDB_Blank.IdBlankValueType_KVSR]");
            viewString.Append(", T1.[ApprovalBalancingIFDB_Blank.IdBlankValueType_RZPR], T1.[ApprovalBalancingI");
            viewString.Append("FDB_Blank.IdBlankValueType_KCSR], T1.[ApprovalBalancingIFDB_Blank.IdBlankValueTy");
            viewString.Append("pe_KVR], T1.[ApprovalBalancingIFDB_Blank.IdBlankValueType_KOSGU], T1.[ApprovalBa");
            viewString.Append("lancingIFDB_Blank.IdBlankValueType_DFK], T1.[ApprovalBalancingIFDB_Blank.IdBlank");
            viewString.Append("ValueType_DKR], T1.[ApprovalBalancingIFDB_Blank.IdBlankValueType_DEK], T1.[Appro");
            viewString.Append("valBalancingIFDB_Blank.IdBlankValueType_CodeSubsidy], T1.[ApprovalBalancingIFDB_");
            viewString.Append("Blank.IdBlankValueType_BranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.");
            viewString.Append("id AS [ApprovalBalancingIFDB_Blank.Id], \r\n            T.idOwner AS [ApprovalBala");
            viewString.Append("ncingIFDB_Blank.IdOwner], \r\n            T.idBlankType AS [ApprovalBalancingIFDB_");
            viewString.Append("Blank.IdBlankType], \r\n            T.idBlankValueType_ExpenseObligationType AS [A");
            viewString.Append("pprovalBalancingIFDB_Blank.IdBlankValueType_ExpenseObligationType], \r\n          ");
            viewString.Append("  T.idBlankValueType_FinanceSource AS [ApprovalBalancingIFDB_Blank.IdBlankValueT");
            viewString.Append("ype_FinanceSource], \r\n            T.idBlankValueType_KFO AS [ApprovalBalancingIF");
            viewString.Append("DB_Blank.IdBlankValueType_KFO], \r\n            T.idBlankValueType_KVSR AS [Approv");
            viewString.Append("alBalancingIFDB_Blank.IdBlankValueType_KVSR], \r\n            T.idBlankValueType_R");
            viewString.Append("ZPR AS [ApprovalBalancingIFDB_Blank.IdBlankValueType_RZPR], \r\n            T.idBl");
            viewString.Append("ankValueType_KCSR AS [ApprovalBalancingIFDB_Blank.IdBlankValueType_KCSR], \r\n    ");
            viewString.Append("        T.idBlankValueType_KVR AS [ApprovalBalancingIFDB_Blank.IdBlankValueType_");
            viewString.Append("KVR], \r\n            T.idBlankValueType_KOSGU AS [ApprovalBalancingIFDB_Blank.IdB");
            viewString.Append("lankValueType_KOSGU], \r\n            T.idBlankValueType_DFK AS [ApprovalBalancing");
            viewString.Append("IFDB_Blank.IdBlankValueType_DFK], \r\n            T.idBlankValueType_DKR AS [Appro");
            viewString.Append("valBalancingIFDB_Blank.IdBlankValueType_DKR], \r\n            T.idBlankValueType_D");
            viewString.Append("EK AS [ApprovalBalancingIFDB_Blank.IdBlankValueType_DEK], \r\n            T.idBlan");
            viewString.Append("kValueType_CodeSubsidy AS [ApprovalBalancingIFDB_Blank.IdBlankValueType_CodeSubs");
            viewString.Append("idy], \r\n            T.idBlankValueType_BranchCode AS [ApprovalBalancingIFDB_Blan");
            viewString.Append("k.IdBlankValueType_BranchCode], \r\n            True AS _from0\r\n        FROM CodeF");
            viewString.Append("irstDatabase.ApprovalBalancingIFDB_Blank AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ApprovalBalancingIFDB_Blank", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LimitBudgetAllocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView528()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2378);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations\r\n        [Tests.LimitB");
            viewString.Append("udgetAllocations](T1.LimitBudgetAllocations_Id, T1.LimitBudgetAllocations_IsAddi");
            viewString.Append("tionalNeed, T1.LimitBudgetAllocations_IdCompareWithDocument, T1.[LimitBudgetAllo");
            viewString.Append("cations.IdSBP_BlankActual], T1.LimitBudgetAllocations_IdPublicLegalFormation, T1");
            viewString.Append(".LimitBudgetAllocations_IdBudget, T1.LimitBudgetAllocations_IdVersion, T1.LimitB");
            viewString.Append("udgetAllocations_Number, T1.LimitBudgetAllocations_Date, T1.LimitBudgetAllocatio");
            viewString.Append("ns_DateCommit, T1.LimitBudgetAllocations_IsApproved, T1.LimitBudgetAllocations_I");
            viewString.Append("dSBP, T1.LimitBudgetAllocations_IdSBPType, T1.LimitBudgetAllocations_DateLastEdi");
            viewString.Append("t, T1.LimitBudgetAllocations_Description, T1.LimitBudgetAllocations_IdParent, T1");
            viewString.Append(".LimitBudgetAllocations_IsRequireClarification, T1.LimitBudgetAllocations_Reason");
            viewString.Append("Clarification, T1.LimitBudgetAllocations_IdDocStatus, T1.LimitBudgetAllocations_");
            viewString.Append("Caption)\r\n    FROM (\r\n        SELECT \r\n            T.id AS LimitBudgetAllocation");
            viewString.Append("s_Id, \r\n            T.isAdditionalNeed AS LimitBudgetAllocations_IsAdditionalNee");
            viewString.Append("d, \r\n            T.IdCompareWithDocument AS LimitBudgetAllocations_IdCompareWith");
            viewString.Append("Document, \r\n            T.idSBP_BlankActual AS [LimitBudgetAllocations.IdSBP_Bla");
            viewString.Append("nkActual], \r\n            T.idPublicLegalFormation AS LimitBudgetAllocations_IdPu");
            viewString.Append("blicLegalFormation, \r\n            T.idBudget AS LimitBudgetAllocations_IdBudget,");
            viewString.Append(" \r\n            T.idVersion AS LimitBudgetAllocations_IdVersion, \r\n            T.");
            viewString.Append("Number AS LimitBudgetAllocations_Number, \r\n            T.Date AS LimitBudgetAllo");
            viewString.Append("cations_Date, \r\n            T.DateCommit AS LimitBudgetAllocations_DateCommit, \r");
            viewString.Append("\n            T.isApproved AS LimitBudgetAllocations_IsApproved, \r\n            T.");
            viewString.Append("idSBP AS LimitBudgetAllocations_IdSBP, \r\n            T.idSBPType AS LimitBudgetA");
            viewString.Append("llocations_IdSBPType, \r\n            T.DateLastEdit AS LimitBudgetAllocations_Dat");
            viewString.Append("eLastEdit, \r\n            T.Description AS LimitBudgetAllocations_Description, \r\n");
            viewString.Append("            T.idParent AS LimitBudgetAllocations_IdParent, \r\n            T.isReq");
            viewString.Append("uireClarification AS LimitBudgetAllocations_IsRequireClarification, \r\n          ");
            viewString.Append("  T.ReasonClarification AS LimitBudgetAllocations_ReasonClarification, \r\n       ");
            viewString.Append("     T.idDocStatus AS LimitBudgetAllocations_IdDocStatus, \r\n            T.Captio");
            viewString.Append("n AS LimitBudgetAllocations_Caption, \r\n            True AS _from0\r\n        FROM ");
            viewString.Append("CodeFirstDatabase.LimitBudgetAllocations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LimitBudgetAllocations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LimitBudgetAllocations_LimitAllocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView529()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3305);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations_LimitAllocations\r\n    ");
            viewString.Append("    [Tests.LimitBudgetAllocations_LimitAllocations](T1.[LimitBudgetAllocations_L");
            viewString.Append("imitAllocations.Id], T1.[LimitBudgetAllocations_LimitAllocations.AdditionalNeedO");
            viewString.Append("FG], T1.[LimitBudgetAllocations_LimitAllocations.AdditionalNeedPFG1], T1.[LimitB");
            viewString.Append("udgetAllocations_LimitAllocations.AdditionalNeedPFG2], T1.[LimitBudgetAllocation");
            viewString.Append("s_LimitAllocations.IdOwner], T1.[LimitBudgetAllocations_LimitAllocations.IdExpen");
            viewString.Append("seObligationType], T1.[LimitBudgetAllocations_LimitAllocations.IdFinanceSource],");
            viewString.Append(" T1.[LimitBudgetAllocations_LimitAllocations.IdKFO], T1.[LimitBudgetAllocations_");
            viewString.Append("LimitAllocations.IdKVSR], T1.[LimitBudgetAllocations_LimitAllocations.IdRZPR], T");
            viewString.Append("1.[LimitBudgetAllocations_LimitAllocations.IdKCSR], T1.[LimitBudgetAllocations_L");
            viewString.Append("imitAllocations.IdKVR], T1.[LimitBudgetAllocations_LimitAllocations.IdKOSGU], T1");
            viewString.Append(".[LimitBudgetAllocations_LimitAllocations.IdDFK], T1.[LimitBudgetAllocations_Lim");
            viewString.Append("itAllocations.IdDKR], T1.[LimitBudgetAllocations_LimitAllocations.IdDEK], T1.[Li");
            viewString.Append("mitBudgetAllocations_LimitAllocations.IdCodeSubsidy], T1.[LimitBudgetAllocations");
            viewString.Append("_LimitAllocations.PFG1], T1.[LimitBudgetAllocations_LimitAllocations.OFG], T1.[L");
            viewString.Append("imitBudgetAllocations_LimitAllocations.PFG2], T1.[LimitBudgetAllocations_LimitAl");
            viewString.Append("locations.OwnerDate], T1.[LimitBudgetAllocations_LimitAllocations.IdBranchCode])");
            viewString.Append("\r\n    FROM (\r\n        SELECT \r\n            T.id AS [LimitBudgetAllocations_Limit");
            viewString.Append("Allocations.Id], \r\n            T.AdditionalNeedOFG AS [LimitBudgetAllocations_Li");
            viewString.Append("mitAllocations.AdditionalNeedOFG], \r\n            T.AdditionalNeedPFG1 AS [LimitB");
            viewString.Append("udgetAllocations_LimitAllocations.AdditionalNeedPFG1], \r\n            T.Additiona");
            viewString.Append("lNeedPFG2 AS [LimitBudgetAllocations_LimitAllocations.AdditionalNeedPFG2], \r\n   ");
            viewString.Append("         T.idOwner AS [LimitBudgetAllocations_LimitAllocations.IdOwner], \r\n     ");
            viewString.Append("       T.idExpenseObligationType AS [LimitBudgetAllocations_LimitAllocations.IdE");
            viewString.Append("xpenseObligationType], \r\n            T.idFinanceSource AS [LimitBudgetAllocation");
            viewString.Append("s_LimitAllocations.IdFinanceSource], \r\n            T.idKFO AS [LimitBudgetAlloca");
            viewString.Append("tions_LimitAllocations.IdKFO], \r\n            T.idKVSR AS [LimitBudgetAllocations");
            viewString.Append("_LimitAllocations.IdKVSR], \r\n            T.idRZPR AS [LimitBudgetAllocations_Lim");
            viewString.Append("itAllocations.IdRZPR], \r\n            T.idKCSR AS [LimitBudgetAllocations_LimitAl");
            viewString.Append("locations.IdKCSR], \r\n            T.idKVR AS [LimitBudgetAllocations_LimitAllocat");
            viewString.Append("ions.IdKVR], \r\n            T.idKOSGU AS [LimitBudgetAllocations_LimitAllocations");
            viewString.Append(".IdKOSGU], \r\n            T.idDFK AS [LimitBudgetAllocations_LimitAllocations.IdD");
            viewString.Append("FK], \r\n            T.idDKR AS [LimitBudgetAllocations_LimitAllocations.IdDKR], \r");
            viewString.Append("\n            T.idDEK AS [LimitBudgetAllocations_LimitAllocations.IdDEK], \r\n     ");
            viewString.Append("       T.idCodeSubsidy AS [LimitBudgetAllocations_LimitAllocations.IdCodeSubsidy");
            viewString.Append("], \r\n            T.PFG1 AS [LimitBudgetAllocations_LimitAllocations.PFG1], \r\n   ");
            viewString.Append("         T.OFG AS [LimitBudgetAllocations_LimitAllocations.OFG], \r\n            T");
            viewString.Append(".PFG2 AS [LimitBudgetAllocations_LimitAllocations.PFG2], \r\n            T.OwnerDa");
            viewString.Append("te AS [LimitBudgetAllocations_LimitAllocations.OwnerDate], \r\n            T.idBra");
            viewString.Append("nchCode AS [LimitBudgetAllocations_LimitAllocations.IdBranchCode], \r\n           ");
            viewString.Append(" True AS _from0\r\n        FROM CodeFirstDatabase.LimitBudgetAllocations_LimitAllo");
            viewString.Append("cations AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LimitBudgetAllocations_LimitAllocations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LimitBudgetAllocations_ControlRelation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView530()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3417);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations_ControlRelation\r\n     ");
            viewString.Append("   [Tests.LimitBudgetAllocations_ControlRelation](T1.[LimitBudgetAllocations_Con");
            viewString.Append("trolRelation.Id], T1.[LimitBudgetAllocations_ControlRelation.IdBranchCode], T1.[");
            viewString.Append("LimitBudgetAllocations_ControlRelation.IdOwner], T1.[LimitBudgetAllocations_Cont");
            viewString.Append("rolRelation.IdExpenseObligationType], T1.[LimitBudgetAllocations_ControlRelation");
            viewString.Append(".IdFinanceSource], T1.[LimitBudgetAllocations_ControlRelation.IdKVSR], T1.[Limit");
            viewString.Append("BudgetAllocations_ControlRelation.IdKFO], T1.[LimitBudgetAllocations_ControlRela");
            viewString.Append("tion.IdRZPR], T1.[LimitBudgetAllocations_ControlRelation.IdKCSR], T1.[LimitBudge");
            viewString.Append("tAllocations_ControlRelation.IdKVR], T1.[LimitBudgetAllocations_ControlRelation.");
            viewString.Append("IdKOSGU], T1.[LimitBudgetAllocations_ControlRelation.IdDFK], T1.[LimitBudgetAllo");
            viewString.Append("cations_ControlRelation.IdDKR], T1.[LimitBudgetAllocations_ControlRelation.IdDEK");
            viewString.Append("], T1.[LimitBudgetAllocations_ControlRelation.IdCodeSubsidy], T1.[LimitBudgetAll");
            viewString.Append("ocations_ControlRelation.Year], T1.[LimitBudgetAllocations_ControlRelation.DiffA");
            viewString.Append("llocations], T1.[LimitBudgetAllocations_ControlRelation.UnallocatedAllocations],");
            viewString.Append(" T1.[LimitBudgetAllocations_ControlRelation.TotalDocumentAllocations], T1.[Limit");
            viewString.Append("BudgetAllocations_ControlRelation.AllocatedAllocations], T1.[LimitBudgetAllocati");
            viewString.Append("ons_ControlRelation.WithCompanyAllocations], T1.[LimitBudgetAllocations_ControlR");
            viewString.Append("elation.PlanGRBSAllocations])\r\n    FROM (\r\n        SELECT \r\n            T.id AS ");
            viewString.Append("[LimitBudgetAllocations_ControlRelation.Id], \r\n            T.idBranchCode AS [Li");
            viewString.Append("mitBudgetAllocations_ControlRelation.IdBranchCode], \r\n            T.idOwner AS [");
            viewString.Append("LimitBudgetAllocations_ControlRelation.IdOwner], \r\n            T.idExpenseObliga");
            viewString.Append("tionType AS [LimitBudgetAllocations_ControlRelation.IdExpenseObligationType], \r\n");
            viewString.Append("            T.idFinanceSource AS [LimitBudgetAllocations_ControlRelation.IdFinan");
            viewString.Append("ceSource], \r\n            T.idKVSR AS [LimitBudgetAllocations_ControlRelation.IdK");
            viewString.Append("VSR], \r\n            T.idKFO AS [LimitBudgetAllocations_ControlRelation.IdKFO], \r");
            viewString.Append("\n            T.idRZPR AS [LimitBudgetAllocations_ControlRelation.IdRZPR], \r\n    ");
            viewString.Append("        T.idKCSR AS [LimitBudgetAllocations_ControlRelation.IdKCSR], \r\n         ");
            viewString.Append("   T.idKVR AS [LimitBudgetAllocations_ControlRelation.IdKVR], \r\n            T.id");
            viewString.Append("KOSGU AS [LimitBudgetAllocations_ControlRelation.IdKOSGU], \r\n            T.idDFK");
            viewString.Append(" AS [LimitBudgetAllocations_ControlRelation.IdDFK], \r\n            T.idDKR AS [Li");
            viewString.Append("mitBudgetAllocations_ControlRelation.IdDKR], \r\n            T.idDEK AS [LimitBudg");
            viewString.Append("etAllocations_ControlRelation.IdDEK], \r\n            T.idCodeSubsidy AS [LimitBud");
            viewString.Append("getAllocations_ControlRelation.IdCodeSubsidy], \r\n            T.Year AS [LimitBud");
            viewString.Append("getAllocations_ControlRelation.Year], \r\n            T.DiffAllocations AS [LimitB");
            viewString.Append("udgetAllocations_ControlRelation.DiffAllocations], \r\n            T.UnallocatedAl");
            viewString.Append("locations AS [LimitBudgetAllocations_ControlRelation.UnallocatedAllocations], \r\n");
            viewString.Append("            T.TotalDocumentAllocations AS [LimitBudgetAllocations_ControlRelatio");
            viewString.Append("n.TotalDocumentAllocations], \r\n            T.AllocatedAllocations AS [LimitBudge");
            viewString.Append("tAllocations_ControlRelation.AllocatedAllocations], \r\n            T.WithCompanyA");
            viewString.Append("llocations AS [LimitBudgetAllocations_ControlRelation.WithCompanyAllocations], \r");
            viewString.Append("\n            T.PlanGRBSAllocations AS [LimitBudgetAllocations_ControlRelation.Pl");
            viewString.Append("anGRBSAllocations], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase");
            viewString.Append(".LimitBudgetAllocations_ControlRelation AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LimitBudgetAllocations_ControlRelation", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LimitBudgetAllocations_ShowChanges
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView531()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2412);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitBudgetAllocations_ShowChanges\r\n        [");
            viewString.Append("Tests.LimitBudgetAllocations_ShowChanges](T1.[LimitBudgetAllocations_ShowChanges");
            viewString.Append(".Id], T1.[LimitBudgetAllocations_ShowChanges.IdBranchCode], T1.[LimitBudgetAlloc");
            viewString.Append("ations_ShowChanges.IdOwner], T1.[LimitBudgetAllocations_ShowChanges.IdExpenseObl");
            viewString.Append("igationType], T1.[LimitBudgetAllocations_ShowChanges.IdFinanceSource], T1.[Limit");
            viewString.Append("BudgetAllocations_ShowChanges.IdKFO], T1.[LimitBudgetAllocations_ShowChanges.IdK");
            viewString.Append("VSR], T1.[LimitBudgetAllocations_ShowChanges.IdRZPR], T1.[LimitBudgetAllocations");
            viewString.Append("_ShowChanges.IdKCSR], T1.[LimitBudgetAllocations_ShowChanges.IdKVR], T1.[LimitBu");
            viewString.Append("dgetAllocations_ShowChanges.IdKOSGU], T1.[LimitBudgetAllocations_ShowChanges.IdD");
            viewString.Append("FK], T1.[LimitBudgetAllocations_ShowChanges.IdDKR], T1.[LimitBudgetAllocations_S");
            viewString.Append("howChanges.IdDEK], T1.[LimitBudgetAllocations_ShowChanges.IdCodeSubsidy], T1.[Li");
            viewString.Append("mitBudgetAllocations_ShowChanges.Year], T1.[LimitBudgetAllocations_ShowChanges.C");
            viewString.Append("hangedAllocations])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [LimitBudg");
            viewString.Append("etAllocations_ShowChanges.Id], \r\n            T.idBranchCode AS [LimitBudgetAlloc");
            viewString.Append("ations_ShowChanges.IdBranchCode], \r\n            T.idOwner AS [LimitBudgetAllocat");
            viewString.Append("ions_ShowChanges.IdOwner], \r\n            T.idExpenseObligationType AS [LimitBudg");
            viewString.Append("etAllocations_ShowChanges.IdExpenseObligationType], \r\n            T.idFinanceSou");
            viewString.Append("rce AS [LimitBudgetAllocations_ShowChanges.IdFinanceSource], \r\n            T.idK");
            viewString.Append("FO AS [LimitBudgetAllocations_ShowChanges.IdKFO], \r\n            T.idKVSR AS [Lim");
            viewString.Append("itBudgetAllocations_ShowChanges.IdKVSR], \r\n            T.idRZPR AS [LimitBudgetA");
            viewString.Append("llocations_ShowChanges.IdRZPR], \r\n            T.idKCSR AS [LimitBudgetAllocation");
            viewString.Append("s_ShowChanges.IdKCSR], \r\n            T.idKVR AS [LimitBudgetAllocations_ShowChan");
            viewString.Append("ges.IdKVR], \r\n            T.idKOSGU AS [LimitBudgetAllocations_ShowChanges.IdKOS");
            viewString.Append("GU], \r\n            T.idDFK AS [LimitBudgetAllocations_ShowChanges.IdDFK], \r\n    ");
            viewString.Append("        T.idDKR AS [LimitBudgetAllocations_ShowChanges.IdDKR], \r\n            T.i");
            viewString.Append("dDEK AS [LimitBudgetAllocations_ShowChanges.IdDEK], \r\n            T.idCodeSubsid");
            viewString.Append("y AS [LimitBudgetAllocations_ShowChanges.IdCodeSubsidy], \r\n            T.Year AS");
            viewString.Append(" [LimitBudgetAllocations_ShowChanges.Year], \r\n            T.ChangedAllocations A");
            viewString.Append("S [LimitBudgetAllocations_ShowChanges.ChangedAllocations], \r\n            True AS");
            viewString.Append(" _from0\r\n        FROM CodeFirstDatabase.LimitBudgetAllocations_ShowChanges AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LimitBudgetAllocations_ShowChanges", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.FinancialAndBusinessActivities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView532()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3121);
            viewString.Append("\r\n    SELECT VALUE -- Constructing FinancialAndBusinessActivities\r\n        [Test");
            viewString.Append("s.FinancialAndBusinessActivities](T1.FinancialAndBusinessActivities_Id, T1.Finan");
            viewString.Append("cialAndBusinessActivities_IdPublicLegalFormation, T1.FinancialAndBusinessActivit");
            viewString.Append("ies_IdBudget, T1.FinancialAndBusinessActivities_IdVersion, T1.FinancialAndBusine");
            viewString.Append("ssActivities_Number, T1.FinancialAndBusinessActivities_Date, T1.FinancialAndBusi");
            viewString.Append("nessActivities_DateCommit, T1.FinancialAndBusinessActivities_IsApproved, T1.Fina");
            viewString.Append("ncialAndBusinessActivities_DateLastEdit, T1.FinancialAndBusinessActivities_IdSBP");
            viewString.Append(", T1.FinancialAndBusinessActivities_IsRequireClarification, T1.FinancialAndBusin");
            viewString.Append("essActivities_ReasonClarification, T1.FinancialAndBusinessActivities_ReasonCance");
            viewString.Append("l, T1.FinancialAndBusinessActivities_Description, T1.FinancialAndBusinessActivit");
            viewString.Append("ies_IdParent, T1.FinancialAndBusinessActivities_DateTerminate, T1.FinancialAndBu");
            viewString.Append("sinessActivities_ReasonTerminate, T1.FinancialAndBusinessActivities_IsExtraNeed,");
            viewString.Append(" T1.FinancialAndBusinessActivities_VolumePublicObligations, T1.FinancialAndBusin");
            viewString.Append("essActivities_OtherInformation, T1.FinancialAndBusinessActivities_IdDocStatus, T");
            viewString.Append("1.FinancialAndBusinessActivities_Caption, T1.[FinancialAndBusinessActivities.IdS");
            viewString.Append("BP_BlankActual])\r\n    FROM (\r\n        SELECT \r\n            T.id AS FinancialAndB");
            viewString.Append("usinessActivities_Id, \r\n            T.idPublicLegalFormation AS FinancialAndBusi");
            viewString.Append("nessActivities_IdPublicLegalFormation, \r\n            T.idBudget AS FinancialAndB");
            viewString.Append("usinessActivities_IdBudget, \r\n            T.idVersion AS FinancialAndBusinessAct");
            viewString.Append("ivities_IdVersion, \r\n            T.Number AS FinancialAndBusinessActivities_Numb");
            viewString.Append("er, \r\n            T.Date AS FinancialAndBusinessActivities_Date, \r\n            T");
            viewString.Append(".DateCommit AS FinancialAndBusinessActivities_DateCommit, \r\n            T.isAppr");
            viewString.Append("oved AS FinancialAndBusinessActivities_IsApproved, \r\n            T.DateLastEdit ");
            viewString.Append("AS FinancialAndBusinessActivities_DateLastEdit, \r\n            T.idSBP AS Financi");
            viewString.Append("alAndBusinessActivities_IdSBP, \r\n            T.isRequireClarification AS Financi");
            viewString.Append("alAndBusinessActivities_IsRequireClarification, \r\n            T.ReasonClarificat");
            viewString.Append("ion AS FinancialAndBusinessActivities_ReasonClarification, \r\n            T.Reaso");
            viewString.Append("nCancel AS FinancialAndBusinessActivities_ReasonCancel, \r\n            T.Descript");
            viewString.Append("ion AS FinancialAndBusinessActivities_Description, \r\n            T.idParent AS F");
            viewString.Append("inancialAndBusinessActivities_IdParent, \r\n            T.DateTerminate AS Financi");
            viewString.Append("alAndBusinessActivities_DateTerminate, \r\n            T.ReasonTerminate AS Financ");
            viewString.Append("ialAndBusinessActivities_ReasonTerminate, \r\n            T.isExtraNeed AS Financi");
            viewString.Append("alAndBusinessActivities_IsExtraNeed, \r\n            T.VolumePublicObligations AS ");
            viewString.Append("FinancialAndBusinessActivities_VolumePublicObligations, \r\n            T.OtherInf");
            viewString.Append("ormation AS FinancialAndBusinessActivities_OtherInformation, \r\n            T.idD");
            viewString.Append("ocStatus AS FinancialAndBusinessActivities_IdDocStatus, \r\n            T.Caption ");
            viewString.Append("AS FinancialAndBusinessActivities_Caption, \r\n            T.idSBP_BlankActual AS ");
            viewString.Append("[FinancialAndBusinessActivities.IdSBP_BlankActual], \r\n            True AS _from0");
            viewString.Append("\r\n        FROM CodeFirstDatabase.FinancialAndBusinessActivities AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FinancialAndBusinessActivities", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView533()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_Activity", @"
    SELECT VALUE -- Constructing FBA_Activity
        [Tests.FBA_Activity](T1.[FBA_Activity.Id], T1.[FBA_Activity.IdOwner], T1.[FBA_Activity.IsOwnActivity], T1.[FBA_Activity.IdActivity], T1.[FBA_Activity.IdContingent])
    FROM (
        SELECT 
            T.id AS [FBA_Activity.Id], 
            T.idOwner AS [FBA_Activity.IdOwner], 
            T.isOwnActivity AS [FBA_Activity.IsOwnActivity], 
            T.idActivity AS [FBA_Activity.IdActivity], 
            T.idContingent AS [FBA_Activity.IdContingent], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_PlannedVolumeIncome
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView534()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_PlannedVolumeIncome", @"
    SELECT VALUE -- Constructing FBA_PlannedVolumeIncome
        [Tests.FBA_PlannedVolumeIncome](T1.[FBA_PlannedVolumeIncome.Id], T1.[FBA_PlannedVolumeIncome.IdOwner], T1.[FBA_PlannedVolumeIncome.IdFBA_Activity], T1.[FBA_PlannedVolumeIncome.IdFinanceSource], T1.[FBA_PlannedVolumeIncome.IdKFO], T1.[FBA_PlannedVolumeIncome.IdCodeSubsidy])
    FROM (
        SELECT 
            T.id AS [FBA_PlannedVolumeIncome.Id], 
            T.idOwner AS [FBA_PlannedVolumeIncome.IdOwner], 
            T.idFBA_Activity AS [FBA_PlannedVolumeIncome.IdFBA_Activity], 
            T.idFinanceSource AS [FBA_PlannedVolumeIncome.IdFinanceSource], 
            T.idKFO AS [FBA_PlannedVolumeIncome.IdKFO], 
            T.idCodeSubsidy AS [FBA_PlannedVolumeIncome.IdCodeSubsidy], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_PlannedVolumeIncome AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_PlannedVolumeIncome_value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView535()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_PlannedVolumeIncome_value", @"
    SELECT VALUE -- Constructing FBA_PlannedVolumeIncome_value
        [Tests.FBA_PlannedVolumeIncome_value](T1.[FBA_PlannedVolumeIncome_value.Id], T1.[FBA_PlannedVolumeIncome_value.IdOwner], T1.[FBA_PlannedVolumeIncome_value.IdMaster], T1.[FBA_PlannedVolumeIncome_value.IdHierarchyPeriod], T1.[FBA_PlannedVolumeIncome_value.Value])
    FROM (
        SELECT 
            T.id AS [FBA_PlannedVolumeIncome_value.Id], 
            T.idOwner AS [FBA_PlannedVolumeIncome_value.IdOwner], 
            T.idMaster AS [FBA_PlannedVolumeIncome_value.IdMaster], 
            T.idHierarchyPeriod AS [FBA_PlannedVolumeIncome_value.IdHierarchyPeriod], 
            T.[Value] AS [FBA_PlannedVolumeIncome_value.Value], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_PlannedVolumeIncome_value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_CostActivities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView536()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_CostActivities", "\r\n    SELECT VALUE -- Constructing FBA_CostActivities\r\n        [Tests.FBA_CostAct" +
                    "ivities](T1.[FBA_CostActivities.Id], T1.[FBA_CostActivities.IdOwner], T1.[FBA_Co" +
                    "stActivities.IdMaster], T1.[FBA_CostActivities.IsIndirectCosts], T1.[FBA_CostAct" +
                    "ivities.IdExpenseObligationType], T1.[FBA_CostActivities.IdFinanceSource], T1.[F" +
                    "BA_CostActivities.IdKFO], T1.[FBA_CostActivities.IdKVSR], T1.[FBA_CostActivities" +
                    ".IdRZPR], T1.[FBA_CostActivities.IdKCSR], T1.[FBA_CostActivities.IdKVR], T1.[FBA" +
                    "_CostActivities.IdKOSGU], T1.[FBA_CostActivities.IdDFK], T1.[FBA_CostActivities." +
                    "IdDKR], T1.[FBA_CostActivities.IdDEK], T1.[FBA_CostActivities.IdCodeSubsidy], T1" +
                    ".[FBA_CostActivities.IdBranchCode], T1.[FBA_CostActivities.IdFBA_DistributionMet" +
                    "hods])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [FBA_CostActivities.Id]" +
                    ", \r\n            T.idOwner AS [FBA_CostActivities.IdOwner], \r\n            T.idMas" +
                    "ter AS [FBA_CostActivities.IdMaster], \r\n            T.isIndirectCosts AS [FBA_Co" +
                    "stActivities.IsIndirectCosts], \r\n            T.idExpenseObligationType AS [FBA_C" +
                    "ostActivities.IdExpenseObligationType], \r\n            T.idFinanceSource AS [FBA_" +
                    "CostActivities.IdFinanceSource], \r\n            T.idKFO AS [FBA_CostActivities.Id" +
                    "KFO], \r\n            T.idKVSR AS [FBA_CostActivities.IdKVSR], \r\n            T.idR" +
                    "ZPR AS [FBA_CostActivities.IdRZPR], \r\n            T.idKCSR AS [FBA_CostActivitie" +
                    "s.IdKCSR], \r\n            T.idKVR AS [FBA_CostActivities.IdKVR], \r\n            T." +
                    "idKOSGU AS [FBA_CostActivities.IdKOSGU], \r\n            T.idDFK AS [FBA_CostActiv" +
                    "ities.IdDFK], \r\n            T.idDKR AS [FBA_CostActivities.IdDKR], \r\n           " +
                    " T.idDEK AS [FBA_CostActivities.IdDEK], \r\n            T.idCodeSubsidy AS [FBA_Co" +
                    "stActivities.IdCodeSubsidy], \r\n            T.idBranchCode AS [FBA_CostActivities" +
                    ".IdBranchCode], \r\n            T.idFBA_DistributionMethods AS [FBA_CostActivities" +
                    ".IdFBA_DistributionMethods], \r\n            True AS _from0\r\n        FROM CodeFirs" +
                    "tDatabase.FBA_CostActivities AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_DistributionMethods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView537()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_DistributionMethods", @"
    SELECT VALUE -- Constructing FBA_DistributionMethods
        [Tests.FBA_DistributionMethods](T1.[FBA_DistributionMethods.Id], T1.[FBA_DistributionMethods.IdOwner], T1.[FBA_DistributionMethods.IdIndirectCostsDistributionMethod])
    FROM (
        SELECT 
            T.id AS [FBA_DistributionMethods.Id], 
            T.idOwner AS [FBA_DistributionMethods.IdOwner], 
            T.idIndirectCostsDistributionMethod AS [FBA_DistributionMethods.IdIndirectCostsDistributionMethod], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_DistributionMethods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_DistributionAdditionalParameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView538()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_DistributionAdditionalParameter", @"
    SELECT VALUE -- Constructing FBA_DistributionAdditionalParameter
        [Tests.FBA_DistributionAdditionalParameter](T1.[FBA_DistributionAdditionalParameter.Id], T1.[FBA_DistributionAdditionalParameter.IdOwner], T1.[FBA_DistributionAdditionalParameter.IdMaster], T1.[FBA_DistributionAdditionalParameter.IdKOSGU])
    FROM (
        SELECT 
            T.id AS [FBA_DistributionAdditionalParameter.Id], 
            T.idOwner AS [FBA_DistributionAdditionalParameter.IdOwner], 
            T.idMaster AS [FBA_DistributionAdditionalParameter.IdMaster], 
            T.idKOSGU AS [FBA_DistributionAdditionalParameter.IdKOSGU], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_DistributionAdditionalParameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_ActivitiesDistribution
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView539()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_ActivitiesDistribution", "\r\n    SELECT VALUE -- Constructing FBA_ActivitiesDistribution\r\n        [Tests.FBA" +
                    "_ActivitiesDistribution](T1.[FBA_ActivitiesDistribution.Id], T1.[FBA_ActivitiesD" +
                    "istribution.IdOwner], T1.[FBA_ActivitiesDistribution.IdMaster], T1.[FBA_Activiti" +
                    "esDistribution.IdFBA_Activity], T1.[FBA_ActivitiesDistribution.OFG_Direct], T1.[" +
                    "FBA_ActivitiesDistribution.PFG1_Direct], T1.[FBA_ActivitiesDistribution.PFG2_Dir" +
                    "ect], T1.[FBA_ActivitiesDistribution.OFG_Activity], T1.[FBA_ActivitiesDistributi" +
                    "on.PFG1_Activity], T1.[FBA_ActivitiesDistribution.PFG2_Activity], T1.[FBA_Activi" +
                    "tiesDistribution.FactorOFG], T1.[FBA_ActivitiesDistribution.FactorPFG1], T1.[FBA" +
                    "_ActivitiesDistribution.FactorPFG2])\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".id AS [FBA_ActivitiesDistribution.Id], \r\n            T.idOwner AS [FBA_Activiti" +
                    "esDistribution.IdOwner], \r\n            T.idMaster AS [FBA_ActivitiesDistribution" +
                    ".IdMaster], \r\n            T.idFBA_Activity AS [FBA_ActivitiesDistribution.IdFBA_" +
                    "Activity], \r\n            T.OFG_Direct AS [FBA_ActivitiesDistribution.OFG_Direct]" +
                    ", \r\n            T.PFG1_Direct AS [FBA_ActivitiesDistribution.PFG1_Direct], \r\n   " +
                    "         T.PFG2_Direct AS [FBA_ActivitiesDistribution.PFG2_Direct], \r\n          " +
                    "  T.OFG_Activity AS [FBA_ActivitiesDistribution.OFG_Activity], \r\n            T.P" +
                    "FG1_Activity AS [FBA_ActivitiesDistribution.PFG1_Activity], \r\n            T.PFG2" +
                    "_Activity AS [FBA_ActivitiesDistribution.PFG2_Activity], \r\n            T.FactorO" +
                    "FG AS [FBA_ActivitiesDistribution.FactorOFG], \r\n            T.FactorPFG1 AS [FBA" +
                    "_ActivitiesDistribution.FactorPFG1], \r\n            T.FactorPFG2 AS [FBA_Activiti" +
                    "esDistribution.FactorPFG2], \r\n            True AS _from0\r\n        FROM CodeFirst" +
                    "Database.FBA_ActivitiesDistribution AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_IndirectCosts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView540()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_IndirectCosts", "\r\n    SELECT VALUE -- Constructing FBA_IndirectCosts\r\n        [Tests.FBA_Indirect" +
                    "Costs](T1.[FBA_IndirectCosts.Id], T1.[FBA_IndirectCosts.IdOwner], T1.[FBA_Indire" +
                    "ctCosts.IdMaster], T1.[FBA_IndirectCosts.IdExpenseObligationType], T1.[FBA_Indir" +
                    "ectCosts.IdFinanceSource], T1.[FBA_IndirectCosts.IdKFO], T1.[FBA_IndirectCosts.I" +
                    "dKVSR], T1.[FBA_IndirectCosts.IdRZPR], T1.[FBA_IndirectCosts.IdKCSR], T1.[FBA_In" +
                    "directCosts.IdKVR], T1.[FBA_IndirectCosts.IdKOSGU], T1.[FBA_IndirectCosts.IdDFK]" +
                    ", T1.[FBA_IndirectCosts.IdDKR], T1.[FBA_IndirectCosts.IdDEK], T1.[FBA_IndirectCo" +
                    "sts.IdCodeSubsidy], T1.[FBA_IndirectCosts.IdBranchCode])\r\n    FROM (\r\n        SE" +
                    "LECT \r\n            T.id AS [FBA_IndirectCosts.Id], \r\n            T.idOwner AS [F" +
                    "BA_IndirectCosts.IdOwner], \r\n            T.idMaster AS [FBA_IndirectCosts.IdMast" +
                    "er], \r\n            T.idExpenseObligationType AS [FBA_IndirectCosts.IdExpenseObli" +
                    "gationType], \r\n            T.idFinanceSource AS [FBA_IndirectCosts.IdFinanceSour" +
                    "ce], \r\n            T.idKFO AS [FBA_IndirectCosts.IdKFO], \r\n            T.idKVSR " +
                    "AS [FBA_IndirectCosts.IdKVSR], \r\n            T.idRZPR AS [FBA_IndirectCosts.IdRZ" +
                    "PR], \r\n            T.idKCSR AS [FBA_IndirectCosts.IdKCSR], \r\n            T.idKVR" +
                    " AS [FBA_IndirectCosts.IdKVR], \r\n            T.idKOSGU AS [FBA_IndirectCosts.IdK" +
                    "OSGU], \r\n            T.idDFK AS [FBA_IndirectCosts.IdDFK], \r\n            T.idDKR" +
                    " AS [FBA_IndirectCosts.IdDKR], \r\n            T.idDEK AS [FBA_IndirectCosts.IdDEK" +
                    "], \r\n            T.idCodeSubsidy AS [FBA_IndirectCosts.IdCodeSubsidy], \r\n       " +
                    "     T.idBranchCode AS [FBA_IndirectCosts.IdBranchCode], \r\n            True AS _" +
                    "from0\r\n        FROM CodeFirstDatabase.FBA_IndirectCosts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_IndirectCosts_value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView541()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_IndirectCosts_value", @"
    SELECT VALUE -- Constructing FBA_IndirectCosts_value
        [Tests.FBA_IndirectCosts_value](T1.[FBA_IndirectCosts_value.Id], T1.[FBA_IndirectCosts_value.IdOwner], T1.[FBA_IndirectCosts_value.IdMaster], T1.[FBA_IndirectCosts_value.IdHierarchyPeriod], T1.[FBA_IndirectCosts_value.Value])
    FROM (
        SELECT 
            T.id AS [FBA_IndirectCosts_value.Id], 
            T.idOwner AS [FBA_IndirectCosts_value.IdOwner], 
            T.idMaster AS [FBA_IndirectCosts_value.IdMaster], 
            T.idHierarchyPeriod AS [FBA_IndirectCosts_value.IdHierarchyPeriod], 
            T.[Value] AS [FBA_IndirectCosts_value.Value], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_IndirectCosts_value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_CostActivities_value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView542()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_CostActivities_value", @"
    SELECT VALUE -- Constructing FBA_CostActivities_value
        [Tests.FBA_CostActivities_value](T1.[FBA_CostActivities_value.Id], T1.[FBA_CostActivities_value.IdOwner], T1.[FBA_CostActivities_value.IdMaster], T1.[FBA_CostActivities_value.IdHierarchyPeriod], T1.[FBA_CostActivities_value.Value], T1.[FBA_CostActivities_value.Value2])
    FROM (
        SELECT 
            T.id AS [FBA_CostActivities_value.Id], 
            T.idOwner AS [FBA_CostActivities_value.IdOwner], 
            T.idMaster AS [FBA_CostActivities_value.IdMaster], 
            T.idHierarchyPeriod AS [FBA_CostActivities_value.IdHierarchyPeriod], 
            T.[Value] AS [FBA_CostActivities_value.Value], 
            T.Value2 AS [FBA_CostActivities_value.Value2], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_CostActivities_value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_DepartmentActivityGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView543()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_DepartmentActivityGoal", @"
    SELECT VALUE -- Constructing FBA_DepartmentActivityGoal
        [Tests.FBA_DepartmentActivityGoal](T1.[FBA_DepartmentActivityGoal.Id], T1.[FBA_DepartmentActivityGoal.IdOwner], T1.[FBA_DepartmentActivityGoal.DepartmentGoal])
    FROM (
        SELECT 
            T.id AS [FBA_DepartmentActivityGoal.Id], 
            T.idOwner AS [FBA_DepartmentActivityGoal.IdOwner], 
            T.DepartmentGoal AS [FBA_DepartmentActivityGoal.DepartmentGoal], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_DepartmentActivityGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FBA_FinancialIndicatorsInstitutions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView544()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FBA_FinancialIndicatorsInstitutions", @"
    SELECT VALUE -- Constructing FBA_FinancialIndicatorsInstitutions
        [Tests.FBA_FinancialIndicatorsInstitutions](T1.[FBA_FinancialIndicatorsInstitutions.Id], T1.[FBA_FinancialIndicatorsInstitutions.IdOwner], T1.[FBA_FinancialIndicatorsInstitutions.IdFinancialIndicator], T1.[FBA_FinancialIndicatorsInstitutions.IdFinancialIndicatorCaption], T1.[FBA_FinancialIndicatorsInstitutions.Value])
    FROM (
        SELECT 
            T.id AS [FBA_FinancialIndicatorsInstitutions.Id], 
            T.idOwner AS [FBA_FinancialIndicatorsInstitutions.IdOwner], 
            T.idFinancialIndicator AS [FBA_FinancialIndicatorsInstitutions.IdFinancialIndicator], 
            T.idFinancialIndicatorCaption AS [FBA_FinancialIndicatorsInstitutions.IdFinancialIndicatorCaption], 
            T.[Value] AS [FBA_FinancialIndicatorsInstitutions.Value], 
            True AS _from0
        FROM CodeFirstDatabase.FBA_FinancialIndicatorsInstitutions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FinancialIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView545()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FinancialIndicator", @"
    SELECT VALUE -- Constructing FinancialIndicator
        [Tests.FinancialIndicator](T1.FinancialIndicator_Id, T1.FinancialIndicator_IdPublicLegalFormation, T1.FinancialIndicator_IdParent, T1.FinancialIndicator_RowCode, T1.FinancialIndicator_Caption, T1.FinancialIndicator_IdRefStatus)
    FROM (
        SELECT 
            T.id AS FinancialIndicator_Id, 
            T.idPublicLegalFormation AS FinancialIndicator_IdPublicLegalFormation, 
            T.idParent AS FinancialIndicator_IdParent, 
            T.RowCode AS FinancialIndicator_RowCode, 
            T.Caption AS FinancialIndicator_Caption, 
            T.idRefStatus AS FinancialIndicator_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.FinancialIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateJustification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView546()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateJustification", @"
    SELECT VALUE -- Constructing TemplateJustification
        [Tests.TemplateJustification](T1.TemplateJustification_Id, T1.TemplateJustification_IdPublicLegalFormation, T1.TemplateJustification_IdBudget, T1.TemplateJustification_Caption, T1.TemplateJustification_IdSBP, T1.TemplateJustification_IdActivity, T1.TemplateJustification_IdRefStatus)
    FROM (
        SELECT 
            T.id AS TemplateJustification_Id, 
            T.idPublicLegalFormation AS TemplateJustification_IdPublicLegalFormation, 
            T.idBudget AS TemplateJustification_IdBudget, 
            T.Caption AS TemplateJustification_Caption, 
            T.idSBP AS TemplateJustification_IdSBP, 
            T.idActivity AS TemplateJustification_IdActivity, 
            T.idRefStatus AS TemplateJustification_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.TemplateJustification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView547()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestDocument", @"
    SELECT VALUE -- Constructing TestDocument
        [Tests.TestDocument](T1.TestDocument_Id, T1.TestDocument_Number, T1.TestDocument_Date, T1.TestDocument_IdDocStatus, T1.TestDocument_Zumma, T1.TestDocument_IdPublicLegalFormation, T1.TestDocument_IdSbp, T1.TestDocument_IdOther, T1.TestDocument_IdThis, T1.TestDocument_AAA)
    FROM (
        SELECT 
            T.id AS TestDocument_Id, 
            T.Number AS TestDocument_Number, 
            T.Date AS TestDocument_Date, 
            T.idDocStatus AS TestDocument_IdDocStatus, 
            T.Zumma AS TestDocument_Zumma, 
            T.idPublicLegalFormation AS TestDocument_IdPublicLegalFormation, 
            T.idSbp AS TestDocument_IdSbp, 
            T.idOther AS TestDocument_IdOther, 
            T.idThis AS TestDocument_IdThis, 
            T.AAA AS TestDocument_AAA, 
            True AS _from0
        FROM CodeFirstDatabase.TestDocument AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PublicLegalFormationModule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView548()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicLegalFormationModule", @"
    SELECT VALUE -- Constructing PublicLegalFormationModule
        [Tests.PublicLegalFormationModule](T1.PublicLegalFormationModule_Id, T1.PublicLegalFormationModule_IdPublicLegalFormation, T1.PublicLegalFormationModule_IdRefStatus)
    FROM (
        SELECT 
            T.id AS PublicLegalFormationModule_Id, 
            T.idPublicLegalFormation AS PublicLegalFormationModule_IdPublicLegalFormation, 
            T.idRefStatus AS PublicLegalFormationModule_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.PublicLegalFormationModule AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Module
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView549()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Module", @"
    SELECT VALUE -- Constructing Module
        [Tests.Module](T1.Module_Id, T1.Module_Caption, T1.Module_Code, T1.Module_On)
    FROM (
        SELECT 
            T.id AS Module_Id, 
            T.Caption AS Module_Caption, 
            T.Code AS Module_Code, 
            T.[On] AS Module_On, 
            True AS _from0
        FROM CodeFirstDatabase.Module AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestDocumentTP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView550()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestDocumentTP", @"
    SELECT VALUE -- Constructing TestDocumentTP
        [Tests.TestDocumentTP](T1.TestDocumentTP_Id, T1.TestDocumentTP_IdOwner, T1.TestDocumentTP_Value)
    FROM (
        SELECT 
            T.id AS TestDocumentTP_Id, 
            T.idOwner AS TestDocumentTP_IdOwner, 
            T.[Value] AS TestDocumentTP_Value, 
            True AS _from0
        FROM CodeFirstDatabase.TestDocumentTP AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestDocumentTP2
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView551()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestDocumentTP2", @"
    SELECT VALUE -- Constructing TestDocumentTP2
        [Tests.TestDocumentTP2](T1.TestDocumentTP2_Id, T1.TestDocumentTP2_IdOwner, T1.TestDocumentTP2_Amount, T1.TestDocumentTP2_IdValue)
    FROM (
        SELECT 
            T.id AS TestDocumentTP2_Id, 
            T.idOwner AS TestDocumentTP2_IdOwner, 
            T.Amount AS TestDocumentTP2_Amount, 
            T.idValue AS TestDocumentTP2_IdValue, 
            True AS _from0
        FROM CodeFirstDatabase.TestDocumentTP2 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestObject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView552()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestObject", @"
    SELECT VALUE -- Constructing TestObject
        [Tests.TestObject](T1.TestObject_Id, T1.TestObject_Value)
    FROM (
        SELECT 
            T.id AS TestObject_Id, 
            T.[Value] AS TestObject_Value, 
            True AS _from0
        FROM CodeFirstDatabase.TestObject AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestDocument2
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView553()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestDocument2", @"
    SELECT VALUE -- Constructing TestDocument2
        [Tests.TestDocument2](T1.TestDocument2_Id, T1.TestDocument2_Number, T1.TestDocument2_Date, T1.TestDocument2_IdDocStatus, T1.TestDocument2_IdParent, T1.TestDocument2_SSS)
    FROM (
        SELECT 
            T.id AS TestDocument2_Id, 
            T.Number AS TestDocument2_Number, 
            T.Date AS TestDocument2_Date, 
            T.idDocStatus AS TestDocument2_IdDocStatus, 
            T.idParent AS TestDocument2_IdParent, 
            T.SSS AS TestDocument2_SSS, 
            True AS _from0
        FROM CodeFirstDatabase.TestDocument2 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestReg1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView554()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestReg1", @"
    SELECT VALUE -- Constructing TestReg1
        [Tests.TestReg1](T1.TestReg1_Id, T1.TestReg1_IdRegistrator, T1.TestReg1_IdExecutedOperation, T1.TestReg1_Text, T1.TestReg1_IdTerminator, T1.TestReg1_IdTerminatorEntity, T1.TestReg1_IdTerminateOperation, T1.TestReg1_DateTerminate)
    FROM (
        SELECT 
            T.id AS TestReg1_Id, 
            T.idRegistrator AS TestReg1_IdRegistrator, 
            T.idExecutedOperation AS TestReg1_IdExecutedOperation, 
            T.Text AS TestReg1_Text, 
            T.idTerminator AS TestReg1_IdTerminator, 
            T.idTerminatorEntity AS TestReg1_IdTerminatorEntity, 
            T.idTerminateOperation AS TestReg1_IdTerminateOperation, 
            T.DateTerminate AS TestReg1_DateTerminate, 
            True AS _from0
        FROM CodeFirstDatabase.TestReg1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestReg2
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView555()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestReg2", @"
    SELECT VALUE -- Constructing TestReg2
        [Tests.TestReg2](T1.TestReg2_Id, T1.TestReg2_IdRegistrator, T1.TestReg2_IdRegistratorEntity)
    FROM (
        SELECT 
            T.id AS TestReg2_Id, 
            T.idRegistrator AS TestReg2_IdRegistrator, 
            T.idRegistratorEntity AS TestReg2_IdRegistratorEntity, 
            True AS _from0
        FROM CodeFirstDatabase.TestReg2 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestDocument3
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView556()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestDocument3", @"
    SELECT VALUE -- Constructing TestDocument3
        [Tests.TestDocument3](T1.TestDocument3_Id, T1.TestDocument3_IdDocStatus, T1.TestDocument3_Date, T1.TestDocument3_Number, T1.TestDocument3_Zumma)
    FROM (
        SELECT 
            T.id AS TestDocument3_Id, 
            T.idDocStatus AS TestDocument3_IdDocStatus, 
            T.Date AS TestDocument3_Date, 
            T.Number AS TestDocument3_Number, 
            T.Zumma AS TestDocument3_Zumma, 
            True AS _from0
        FROM CodeFirstDatabase.TestDocument3 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.AttributeOfSystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView557()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2795);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AttributeOfSystemGoalElement\r\n        [Tests.");
            viewString.Append("AttributeOfSystemGoalElement](T1.AttributeOfSystemGoalElement_Id, T1.AttributeOf");
            viewString.Append("SystemGoalElement_IdRegistrator, T1.AttributeOfSystemGoalElement_IdTerminator, T");
            viewString.Append("1.AttributeOfSystemGoalElement_IdApproved, T1.AttributeOfSystemGoalElement_IdApp");
            viewString.Append("rovedEntity, T1.AttributeOfSystemGoalElement_IdRegistratorEntity, T1.AttributeOf");
            viewString.Append("SystemGoalElement_IdTerminatorEntity, T1.AttributeOfSystemGoalElement_IdExecuted");
            viewString.Append("Operation, T1.AttributeOfSystemGoalElement_IdTerminateOperation, T1.AttributeOfS");
            viewString.Append("ystemGoalElement_IdPublicLegalFormation, T1.AttributeOfSystemGoalElement_IdVersi");
            viewString.Append("on, T1.AttributeOfSystemGoalElement_IdSystemGoalElement, T1.[AttributeOfSystemGo");
            viewString.Append("alElement.IdSystemGoalElement_Parent], T1.AttributeOfSystemGoalElement_IdSBP, T1");
            viewString.Append(".AttributeOfSystemGoalElement_IdElementTypeSystemGoal, T1.AttributeOfSystemGoalE");
            viewString.Append("lement_DateStart, T1.AttributeOfSystemGoalElement_DateEnd, T1.AttributeOfSystemG");
            viewString.Append("oalElement_DateCommit, T1.AttributeOfSystemGoalElement_DateTerminate, T1.Attribu");
            viewString.Append("teOfSystemGoalElement_DateCreate)\r\n    FROM (\r\n        SELECT \r\n            T.id");
            viewString.Append(" AS AttributeOfSystemGoalElement_Id, \r\n            T.idRegistrator AS AttributeO");
            viewString.Append("fSystemGoalElement_IdRegistrator, \r\n            T.idTerminator AS AttributeOfSys");
            viewString.Append("temGoalElement_IdTerminator, \r\n            T.idApproved AS AttributeOfSystemGoal");
            viewString.Append("Element_IdApproved, \r\n            T.idApprovedEntity AS AttributeOfSystemGoalEle");
            viewString.Append("ment_IdApprovedEntity, \r\n            T.idRegistratorEntity AS AttributeOfSystemG");
            viewString.Append("oalElement_IdRegistratorEntity, \r\n            T.idTerminatorEntity AS AttributeO");
            viewString.Append("fSystemGoalElement_IdTerminatorEntity, \r\n            T.idExecutedOperation AS At");
            viewString.Append("tributeOfSystemGoalElement_IdExecutedOperation, \r\n            T.idTerminateOpera");
            viewString.Append("tion AS AttributeOfSystemGoalElement_IdTerminateOperation, \r\n            T.idPub");
            viewString.Append("licLegalFormation AS AttributeOfSystemGoalElement_IdPublicLegalFormation, \r\n    ");
            viewString.Append("        T.idVersion AS AttributeOfSystemGoalElement_IdVersion, \r\n            T.i");
            viewString.Append("dSystemGoalElement AS AttributeOfSystemGoalElement_IdSystemGoalElement, \r\n      ");
            viewString.Append("      T.idSystemGoalElement_Parent AS [AttributeOfSystemGoalElement.IdSystemGoal");
            viewString.Append("Element_Parent], \r\n            T.idSBP AS AttributeOfSystemGoalElement_IdSBP, \r\n");
            viewString.Append("            T.idElementTypeSystemGoal AS AttributeOfSystemGoalElement_IdElementT");
            viewString.Append("ypeSystemGoal, \r\n            T.DateStart AS AttributeOfSystemGoalElement_DateSta");
            viewString.Append("rt, \r\n            T.DateEnd AS AttributeOfSystemGoalElement_DateEnd, \r\n         ");
            viewString.Append("   T.DateCommit AS AttributeOfSystemGoalElement_DateCommit, \r\n            T.Date");
            viewString.Append("Terminate AS AttributeOfSystemGoalElement_DateTerminate, \r\n            T.DateCre");
            viewString.Append("ate AS AttributeOfSystemGoalElement_DateCreate, \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM CodeFirstDatabase.AttributeOfSystemGoalElement AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.AttributeOfSystemGoalElement", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LimitVolumeAppropriations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView558()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2743);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LimitVolumeAppropriations\r\n        [Tests.Lim");
            viewString.Append("itVolumeAppropriations](T1.LimitVolumeAppropriations_Id, T1.LimitVolumeAppropria");
            viewString.Append("tions_IdExecutedOperation, T1.LimitVolumeAppropriations_IdPublicLegalFormation, ");
            viewString.Append("T1.LimitVolumeAppropriations_IdVersion, T1.LimitVolumeAppropriations_IdBudget, T");
            viewString.Append("1.LimitVolumeAppropriations_IdEstimatedLine, T1.LimitVolumeAppropriations_IdAuth");
            viewString.Append("orityOfExpenseObligation, T1.LimitVolumeAppropriations_IdTaskCollection, T1.Limi");
            viewString.Append("tVolumeAppropriations_IsIndirectCosts, T1.LimitVolumeAppropriations_IdHierarchyP");
            viewString.Append("eriod, T1.LimitVolumeAppropriations_IdValueType, T1.LimitVolumeAppropriations_Va");
            viewString.Append("lue, T1.LimitVolumeAppropriations_IdOKATO, T1.LimitVolumeAppropriations_IsMeansA");
            viewString.Append("UBU, T1.LimitVolumeAppropriations_IdRegistrator, T1.LimitVolumeAppropriations_Id");
            viewString.Append("RegistratorEntity, T1.LimitVolumeAppropriations_DateCommit, T1.LimitVolumeApprop");
            viewString.Append("riations_IdApproved, T1.LimitVolumeAppropriations_IdApprovedEntity, T1.LimitVolu");
            viewString.Append("meAppropriations_DateCreate, T1.LimitVolumeAppropriations_HasAdditionalNeed)\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.id AS LimitVolumeAppropriations_Id, \r\n ");
            viewString.Append("           T.idExecutedOperation AS LimitVolumeAppropriations_IdExecutedOperatio");
            viewString.Append("n, \r\n            T.idPublicLegalFormation AS LimitVolumeAppropriations_IdPublicL");
            viewString.Append("egalFormation, \r\n            T.idVersion AS LimitVolumeAppropriations_IdVersion,");
            viewString.Append(" \r\n            T.idBudget AS LimitVolumeAppropriations_IdBudget, \r\n            T");
            viewString.Append(".idEstimatedLine AS LimitVolumeAppropriations_IdEstimatedLine, \r\n            T.i");
            viewString.Append("dAuthorityOfExpenseObligation AS LimitVolumeAppropriations_IdAuthorityOfExpenseO");
            viewString.Append("bligation, \r\n            T.idTaskCollection AS LimitVolumeAppropriations_IdTaskC");
            viewString.Append("ollection, \r\n            T.isIndirectCosts AS LimitVolumeAppropriations_IsIndire");
            viewString.Append("ctCosts, \r\n            T.idHierarchyPeriod AS LimitVolumeAppropriations_IdHierar");
            viewString.Append("chyPeriod, \r\n            T.idValueType AS LimitVolumeAppropriations_IdValueType,");
            viewString.Append(" \r\n            T.[Value] AS LimitVolumeAppropriations_Value, \r\n            T.idO");
            viewString.Append("KATO AS LimitVolumeAppropriations_IdOKATO, \r\n            T.isMeansAUBU AS LimitV");
            viewString.Append("olumeAppropriations_IsMeansAUBU, \r\n            T.idRegistrator AS LimitVolumeApp");
            viewString.Append("ropriations_IdRegistrator, \r\n            T.idRegistratorEntity AS LimitVolumeApp");
            viewString.Append("ropriations_IdRegistratorEntity, \r\n            T.DateCommit AS LimitVolumeApprop");
            viewString.Append("riations_DateCommit, \r\n            T.idApproved AS LimitVolumeAppropriations_IdA");
            viewString.Append("pproved, \r\n            T.idApprovedEntity AS LimitVolumeAppropriations_IdApprove");
            viewString.Append("dEntity, \r\n            T.DateCreate AS LimitVolumeAppropriations_DateCreate, \r\n ");
            viewString.Append("           T.HasAdditionalNeed AS LimitVolumeAppropriations_HasAdditionalNeed, \r");
            viewString.Append("\n            True AS _from0\r\n        FROM CodeFirstDatabase.LimitVolumeAppropria");
            viewString.Append("tions AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LimitVolumeAppropriations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.RegisterActivity_IndicatorActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView559()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegisterActivity_IndicatorActivity", @"
    SELECT VALUE -- Constructing RegisterActivity_IndicatorActivity
        [Tests.RegisterActivity_IndicatorActivity](T1.[RegisterActivity_IndicatorActivity.Id], T1.[RegisterActivity_IndicatorActivity.IdOwner], T1.[RegisterActivity_IndicatorActivity.IdMaster], T1.[RegisterActivity_IndicatorActivity.IndicatorActivity])
    FROM (
        SELECT 
            T.id AS [RegisterActivity_IndicatorActivity.Id], 
            T.idOwner AS [RegisterActivity_IndicatorActivity.IdOwner], 
            T.IdMaster AS [RegisterActivity_IndicatorActivity.IdMaster], 
            T.IndicatorActivity AS [RegisterActivity_IndicatorActivity.IndicatorActivity], 
            True AS _from0
        FROM CodeFirstDatabase.RegisterActivity_IndicatorActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.RegisterActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView560()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegisterActivity", @"
    SELECT VALUE -- Constructing RegisterActivity
        [Tests.RegisterActivity](T1.RegisterActivity_Id, T1.RegisterActivity_Header, T1.RegisterActivity_IdDocStatus, T1.RegisterActivity_IdPublicLegalFormation, T1.RegisterActivity_IdDocType, T1.RegisterActivity_Number, T1.RegisterActivity_Date, T1.RegisterActivity_IsApproved, T1.RegisterActivity_DateCommit, T1.RegisterActivity_IdSBP, T1.RegisterActivity_DateLastEdit, T1.RegisterActivity_Description, T1.RegisterActivity_IdParent, T1.RegisterActivity_ReasonCancel)
    FROM (
        SELECT 
            T.id AS RegisterActivity_Id, 
            T.Header AS RegisterActivity_Header, 
            T.IdDocStatus AS RegisterActivity_IdDocStatus, 
            T.idPublicLegalFormation AS RegisterActivity_IdPublicLegalFormation, 
            T.idDocType AS RegisterActivity_IdDocType, 
            T.Number AS RegisterActivity_Number, 
            T.Date AS RegisterActivity_Date, 
            T.isApproved AS RegisterActivity_IsApproved, 
            T.DateCommit AS RegisterActivity_DateCommit, 
            T.idSBP AS RegisterActivity_IdSBP, 
            T.DateLastEdit AS RegisterActivity_DateLastEdit, 
            T.Description AS RegisterActivity_Description, 
            T.idParent AS RegisterActivity_IdParent, 
            T.ReasonCancel AS RegisterActivity_ReasonCancel, 
            True AS _from0
        FROM CodeFirstDatabase.RegisterActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.RegisterActivity_Performers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView561()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegisterActivity_Performers", @"
    SELECT VALUE -- Constructing RegisterActivity_Performers
        [Tests.RegisterActivity_Performers](T1.[RegisterActivity_Performers.Id], T1.[RegisterActivity_Performers.IdOwner], T1.[RegisterActivity_Performers.IdMaster], T1.[RegisterActivity_Performers.Performers])
    FROM (
        SELECT 
            T.id AS [RegisterActivity_Performers.Id], 
            T.idOwner AS [RegisterActivity_Performers.IdOwner], 
            T.IdMaster AS [RegisterActivity_Performers.IdMaster], 
            T.Performers AS [RegisterActivity_Performers.Performers], 
            True AS _from0
        FROM CodeFirstDatabase.RegisterActivity_Performers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.RegisterActivity_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView562()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegisterActivity_Activity", @"
    SELECT VALUE -- Constructing RegisterActivity_Activity
        [Tests.RegisterActivity_Activity](T1.[RegisterActivity_Activity.Id], T1.[RegisterActivity_Activity.IdOwner], T1.[RegisterActivity_Activity.IdActivity], T1.[RegisterActivity_Activity.IdIndicatorActivity_Volume], T1.[RegisterActivity_Activity.IdContingent], T1.[RegisterActivity_Activity.IdRegistryKeyActivity], T1.[RegisterActivity_Activity.IdRegystryActivity_ActivityMain])
    FROM (
        SELECT 
            T.id AS [RegisterActivity_Activity.Id], 
            T.idOwner AS [RegisterActivity_Activity.IdOwner], 
            T.idActivity AS [RegisterActivity_Activity.IdActivity], 
            T.idIndicatorActivity_Volume AS [RegisterActivity_Activity.IdIndicatorActivity_Volume], 
            T.idContingent AS [RegisterActivity_Activity.IdContingent], 
            T.idRegistryKeyActivity AS [RegisterActivity_Activity.IdRegistryKeyActivity], 
            T.idRegystryActivity_ActivityMain AS [RegisterActivity_Activity.IdRegystryActivity_ActivityMain], 
            True AS _from0
        FROM CodeFirstDatabase.RegisterActivity_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PermissionsInputAdditionalRequirements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView563()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PermissionsInputAdditionalRequirements", @"
    SELECT VALUE -- Constructing PermissionsInputAdditionalRequirements
        [Tests.PermissionsInputAdditionalRequirements](T1.PermissionsInputAdditionalRequirements_Id, T1.PermissionsInputAdditionalRequirements_IdPublicLegalFormation, T1.PermissionsInputAdditionalRequirements_IdRefStatus, T1.PermissionsInputAdditionalRequirements_IdSBP, T1.PermissionsInputAdditionalRequirements_EnterAdditionalRequirements)
    FROM (
        SELECT 
            T.id AS PermissionsInputAdditionalRequirements_Id, 
            T.idPublicLegalFormation AS PermissionsInputAdditionalRequirements_IdPublicLegalFormation, 
            T.idRefStatus AS PermissionsInputAdditionalRequirements_IdRefStatus, 
            T.idSBP AS PermissionsInputAdditionalRequirements_IdSBP, 
            T.EnterAdditionalRequirements AS PermissionsInputAdditionalRequirements_EnterAdditionalRequirements, 
            True AS _from0
        FROM CodeFirstDatabase.PermissionsInputAdditionalRequirements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.AttributeOfProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView564()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2420);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AttributeOfProgram\r\n        [Tests.AttributeO");
            viewString.Append("fProgram](T1.AttributeOfProgram_Id, T1.AttributeOfProgram_IdApproved, T1.Attribu");
            viewString.Append("teOfProgram_IdApprovedEntity, T1.AttributeOfProgram_IdRegistrator, T1.AttributeO");
            viewString.Append("fProgram_IdRegistratorEntity, T1.AttributeOfProgram_IdTerminator, T1.AttributeOf");
            viewString.Append("Program_IdTerminatorEntity, T1.AttributeOfProgram_IdExecutedOperation, T1.Attrib");
            viewString.Append("uteOfProgram_IdTerminateOperation, T1.AttributeOfProgram_IdPublicLegalFormation,");
            viewString.Append(" T1.AttributeOfProgram_IdVersion, T1.AttributeOfProgram_DateCommit, T1.Attribute");
            viewString.Append("OfProgram_DateTerminate, T1.AttributeOfProgram_DateCreate, T1.AttributeOfProgram");
            viewString.Append("_IdProgram, T1.AttributeOfProgram_IdAnalyticalCodeStateProgram, T1.AttributeOfPr");
            viewString.Append("ogram_Caption, T1.AttributeOfProgram_DateStart, T1.AttributeOfProgram_DateEnd, T");
            viewString.Append("1.AttributeOfProgram_IdGoalSystemElement, T1.AttributeOfProgram_IdParent)\r\n    F");
            viewString.Append("ROM (\r\n        SELECT \r\n            T.id AS AttributeOfProgram_Id, \r\n           ");
            viewString.Append(" T.idApproved AS AttributeOfProgram_IdApproved, \r\n            T.idApprovedEntity");
            viewString.Append(" AS AttributeOfProgram_IdApprovedEntity, \r\n            T.idRegistrator AS Attrib");
            viewString.Append("uteOfProgram_IdRegistrator, \r\n            T.idRegistratorEntity AS AttributeOfPr");
            viewString.Append("ogram_IdRegistratorEntity, \r\n            T.idTerminator AS AttributeOfProgram_Id");
            viewString.Append("Terminator, \r\n            T.idTerminatorEntity AS AttributeOfProgram_IdTerminato");
            viewString.Append("rEntity, \r\n            T.idExecutedOperation AS AttributeOfProgram_IdExecutedOpe");
            viewString.Append("ration, \r\n            T.idTerminateOperation AS AttributeOfProgram_IdTerminateOp");
            viewString.Append("eration, \r\n            T.idPublicLegalFormation AS AttributeOfProgram_IdPublicLe");
            viewString.Append("galFormation, \r\n            T.idVersion AS AttributeOfProgram_IdVersion, \r\n     ");
            viewString.Append("       T.DateCommit AS AttributeOfProgram_DateCommit, \r\n            T.DateTermin");
            viewString.Append("ate AS AttributeOfProgram_DateTerminate, \r\n            T.DateCreate AS Attribute");
            viewString.Append("OfProgram_DateCreate, \r\n            T.idProgram AS AttributeOfProgram_IdProgram,");
            viewString.Append(" \r\n            T.idAnalyticalCodeStateProgram AS AttributeOfProgram_IdAnalytical");
            viewString.Append("CodeStateProgram, \r\n            T.Caption AS AttributeOfProgram_Caption, \r\n     ");
            viewString.Append("       T.DateStart AS AttributeOfProgram_DateStart, \r\n            T.DateEnd AS A");
            viewString.Append("ttributeOfProgram_DateEnd, \r\n            T.idGoalSystemElement AS AttributeOfPro");
            viewString.Append("gram_IdGoalSystemElement, \r\n            T.idParent AS AttributeOfProgram_IdParen");
            viewString.Append("t, \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.AttributeOfProgr");
            viewString.Append("am AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.AttributeOfProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.Program_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView565()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2917);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Program_ResourceMaintenance\r\n        [Tests.P");
            viewString.Append("rogram_ResourceMaintenance](T1.[Program_ResourceMaintenance.Id], T1.[Program_Res");
            viewString.Append("ourceMaintenance.IdTerminator], T1.[Program_ResourceMaintenance.IdTerminatorEnti");
            viewString.Append("ty], T1.[Program_ResourceMaintenance.IdApproved], T1.[Program_ResourceMaintenanc");
            viewString.Append("e.IdApprovedEntity], T1.[Program_ResourceMaintenance.IdRegistrator], T1.[Program");
            viewString.Append("_ResourceMaintenance.IdRegistratorEntity], T1.[Program_ResourceMaintenance.IdExe");
            viewString.Append("cutedOperation], T1.[Program_ResourceMaintenance.IdTerminateOperation], T1.[Prog");
            viewString.Append("ram_ResourceMaintenance.IdPublicLegalFormation], T1.[Program_ResourceMaintenance");
            viewString.Append(".IdVersion], T1.[Program_ResourceMaintenance.DateCommit], T1.[Program_ResourceMa");
            viewString.Append("intenance.DateTerminate], T1.[Program_ResourceMaintenance.DateCreate], T1.[Progr");
            viewString.Append("am_ResourceMaintenance.IdFinanceSource], T1.[Program_ResourceMaintenance.IdHiera");
            viewString.Append("rchyPeriod], T1.[Program_ResourceMaintenance.Value], T1.[Program_ResourceMainten");
            viewString.Append("ance.IdValueType], T1.[Program_ResourceMaintenance.IdProgram], T1.[Program_Resou");
            viewString.Append("rceMaintenance.IdTaskCollection], T1.[Program_ResourceMaintenance.IsAdditionalNe");
            viewString.Append("ed])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [Program_ResourceMaintena");
            viewString.Append("nce.Id], \r\n            T.idTerminator AS [Program_ResourceMaintenance.IdTerminat");
            viewString.Append("or], \r\n            T.idTerminatorEntity AS [Program_ResourceMaintenance.IdTermin");
            viewString.Append("atorEntity], \r\n            T.idApproved AS [Program_ResourceMaintenance.IdApprov");
            viewString.Append("ed], \r\n            T.idApprovedEntity AS [Program_ResourceMaintenance.IdApproved");
            viewString.Append("Entity], \r\n            T.idRegistrator AS [Program_ResourceMaintenance.IdRegistr");
            viewString.Append("ator], \r\n            T.idRegistratorEntity AS [Program_ResourceMaintenance.IdReg");
            viewString.Append("istratorEntity], \r\n            T.idExecutedOperation AS [Program_ResourceMainten");
            viewString.Append("ance.IdExecutedOperation], \r\n            T.idTerminateOperation AS [Program_Reso");
            viewString.Append("urceMaintenance.IdTerminateOperation], \r\n            T.idPublicLegalFormation AS");
            viewString.Append(" [Program_ResourceMaintenance.IdPublicLegalFormation], \r\n            T.idVersion");
            viewString.Append(" AS [Program_ResourceMaintenance.IdVersion], \r\n            T.DateCommit AS [Prog");
            viewString.Append("ram_ResourceMaintenance.DateCommit], \r\n            T.DateTerminate AS [Program_R");
            viewString.Append("esourceMaintenance.DateTerminate], \r\n            T.DateCreate AS [Program_Resour");
            viewString.Append("ceMaintenance.DateCreate], \r\n            T.idFinanceSource AS [Program_ResourceM");
            viewString.Append("aintenance.IdFinanceSource], \r\n            T.idHierarchyPeriod AS [Program_Resou");
            viewString.Append("rceMaintenance.IdHierarchyPeriod], \r\n            T.[Value] AS [Program_ResourceM");
            viewString.Append("aintenance.Value], \r\n            T.idValueType AS [Program_ResourceMaintenance.I");
            viewString.Append("dValueType], \r\n            T.idProgram AS [Program_ResourceMaintenance.IdProgram");
            viewString.Append("], \r\n            T.idTaskCollection AS [Program_ResourceMaintenance.IdTaskCollec");
            viewString.Append("tion], \r\n            T.IsAdditionalNeed AS [Program_ResourceMaintenance.IsAdditi");
            viewString.Append("onalNeed], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.Program_");
            viewString.Append("ResourceMaintenance AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Program_ResourceMaintenance", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView566()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3171);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LongTermGoalProgram\r\n        [Tests.LongTermG");
            viewString.Append("oalProgram](T1.LongTermGoalProgram_Id, T1.LongTermGoalProgram_DateLastEdit, T1.L");
            viewString.Append("ongTermGoalProgram_IdDocStatus, T1.LongTermGoalProgram_IdPublicLegalFormation, T");
            viewString.Append("1.LongTermGoalProgram_IdDocType, T1.LongTermGoalProgram_IdVersion, T1.LongTermGo");
            viewString.Append("alProgram_Number, T1.LongTermGoalProgram_Date, T1.LongTermGoalProgram_IdAnalytic");
            viewString.Append("alCodeStateProgram, T1.LongTermGoalProgram_DateStart, T1.LongTermGoalProgram_Dat");
            viewString.Append("eEnd, T1.LongTermGoalProgram_DateCommit, T1.LongTermGoalProgram_IsApproved, T1.L");
            viewString.Append("ongTermGoalProgram_Caption, T1.LongTermGoalProgram_IdResponsibleExecutantType, T");
            viewString.Append("1.LongTermGoalProgram_IdSBP, T1.LongTermGoalProgram_HasMasterDoc, T1.LongTermGoa");
            viewString.Append("lProgram_IdMasterStateProgram, T1.LongTermGoalProgram_Description, T1.LongTermGo");
            viewString.Append("alProgram_IsRequireClarification, T1.LongTermGoalProgram_ReasonClarification, T1");
            viewString.Append(".LongTermGoalProgram_DateTerminate, T1.LongTermGoalProgram_ReasonTerminate, T1.L");
            viewString.Append("ongTermGoalProgram_IdParent, T1.LongTermGoalProgram_ReasonCancel, T1.LongTermGoa");
            viewString.Append("lProgram_IdMasterLongTermGoalProgram, T1.LongTermGoalProgram_Header, T1.LongTerm");
            viewString.Append("GoalProgram_HasAdditionalNeed)\r\n    FROM (\r\n        SELECT \r\n            T.id AS");
            viewString.Append(" LongTermGoalProgram_Id, \r\n            T.DateLastEdit AS LongTermGoalProgram_Dat");
            viewString.Append("eLastEdit, \r\n            T.idDocStatus AS LongTermGoalProgram_IdDocStatus, \r\n   ");
            viewString.Append("         T.idPublicLegalFormation AS LongTermGoalProgram_IdPublicLegalFormation,");
            viewString.Append(" \r\n            T.idDocType AS LongTermGoalProgram_IdDocType, \r\n            T.idV");
            viewString.Append("ersion AS LongTermGoalProgram_IdVersion, \r\n            T.Number AS LongTermGoalP");
            viewString.Append("rogram_Number, \r\n            T.Date AS LongTermGoalProgram_Date, \r\n            T");
            viewString.Append(".idAnalyticalCodeStateProgram AS LongTermGoalProgram_IdAnalyticalCodeStateProgra");
            viewString.Append("m, \r\n            T.DateStart AS LongTermGoalProgram_DateStart, \r\n            T.D");
            viewString.Append("ateEnd AS LongTermGoalProgram_DateEnd, \r\n            T.DateCommit AS LongTermGoa");
            viewString.Append("lProgram_DateCommit, \r\n            T.isApproved AS LongTermGoalProgram_IsApprove");
            viewString.Append("d, \r\n            T.Caption AS LongTermGoalProgram_Caption, \r\n            T.idRes");
            viewString.Append("ponsibleExecutantType AS LongTermGoalProgram_IdResponsibleExecutantType, \r\n     ");
            viewString.Append("       T.idSBP AS LongTermGoalProgram_IdSBP, \r\n            T.HasMasterDoc AS Lon");
            viewString.Append("gTermGoalProgram_HasMasterDoc, \r\n            T.idMasterStateProgram AS LongTermG");
            viewString.Append("oalProgram_IdMasterStateProgram, \r\n            T.Description AS LongTermGoalProg");
            viewString.Append("ram_Description, \r\n            T.isRequireClarification AS LongTermGoalProgram_I");
            viewString.Append("sRequireClarification, \r\n            T.ReasonClarification AS LongTermGoalProgra");
            viewString.Append("m_ReasonClarification, \r\n            T.DateTerminate AS LongTermGoalProgram_Date");
            viewString.Append("Terminate, \r\n            T.ReasonTerminate AS LongTermGoalProgram_ReasonTerminat");
            viewString.Append("e, \r\n            T.idParent AS LongTermGoalProgram_IdParent, \r\n            T.Rea");
            viewString.Append("sonCancel AS LongTermGoalProgram_ReasonCancel, \r\n            T.idMasterLongTermG");
            viewString.Append("oalProgram AS LongTermGoalProgram_IdMasterLongTermGoalProgram, \r\n            T.H");
            viewString.Append("eader AS LongTermGoalProgram_Header, \r\n            T.HasAdditionalNeed AS LongTe");
            viewString.Append("rmGoalProgram_HasAdditionalNeed, \r\n            True AS _from0\r\n        FROM Code");
            viewString.Append("FirstDatabase.LongTermGoalProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_SystemGoalElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView567()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_SystemGoalElement", "\r\n    SELECT VALUE -- Constructing LongTermGoalProgram_SystemGoalElement\r\n       " +
                    " [Tests.LongTermGoalProgram_SystemGoalElement](T1.[LongTermGoalProgram_SystemGoa" +
                    "lElement.Id], T1.[LongTermGoalProgram_SystemGoalElement.IdOwner], T1.[LongTermGo" +
                    "alProgram_SystemGoalElement.FromAnotherDocumentSE], T1.[LongTermGoalProgram_Syst" +
                    "emGoalElement.IdSystemGoal], T1.[LongTermGoalProgram_SystemGoalElement.IsMainGoa" +
                    "l], T1.[LongTermGoalProgram_SystemGoalElement.Code], T1.[LongTermGoalProgram_Sys" +
                    "temGoalElement.IdElementTypeSystemGoal], T1.[LongTermGoalProgram_SystemGoalEleme" +
                    "nt.DateStart], T1.[LongTermGoalProgram_SystemGoalElement.DateEnd], T1.[LongTermG" +
                    "oalProgram_SystemGoalElement.IdSBP], T1.[LongTermGoalProgram_SystemGoalElement.I" +
                    "dParent])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [LongTermGoalProgram" +
                    "_SystemGoalElement.Id], \r\n            T.idOwner AS [LongTermGoalProgram_SystemGo" +
                    "alElement.IdOwner], \r\n            T.FromAnotherDocumentSE AS [LongTermGoalProgra" +
                    "m_SystemGoalElement.FromAnotherDocumentSE], \r\n            T.idSystemGoal AS [Lon" +
                    "gTermGoalProgram_SystemGoalElement.IdSystemGoal], \r\n            T.IsMainGoal AS " +
                    "[LongTermGoalProgram_SystemGoalElement.IsMainGoal], \r\n            T.Code AS [Lon" +
                    "gTermGoalProgram_SystemGoalElement.Code], \r\n            T.idElementTypeSystemGoa" +
                    "l AS [LongTermGoalProgram_SystemGoalElement.IdElementTypeSystemGoal], \r\n        " +
                    "    T.DateStart AS [LongTermGoalProgram_SystemGoalElement.DateStart], \r\n        " +
                    "    T.DateEnd AS [LongTermGoalProgram_SystemGoalElement.DateEnd], \r\n            " +
                    "T.idSBP AS [LongTermGoalProgram_SystemGoalElement.IdSBP], \r\n            T.idPare" +
                    "nt AS [LongTermGoalProgram_SystemGoalElement.IdParent], \r\n            True AS _f" +
                    "rom0\r\n        FROM CodeFirstDatabase.LongTermGoalProgram_SystemGoalElement AS T\r" +
                    "\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_GoalIndicator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView568()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_GoalIndicator", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_GoalIndicator
        [Tests.LongTermGoalProgram_GoalIndicator](T1.[LongTermGoalProgram_GoalIndicator.Id], T1.[LongTermGoalProgram_GoalIndicator.IdOwner], T1.[LongTermGoalProgram_GoalIndicator.IdMaster], T1.[LongTermGoalProgram_GoalIndicator.IdGoalIndicator])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_GoalIndicator.Id], 
            T.idOwner AS [LongTermGoalProgram_GoalIndicator.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_GoalIndicator.IdMaster], 
            T.idGoalIndicator AS [LongTermGoalProgram_GoalIndicator.IdGoalIndicator], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_GoalIndicator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_GoalIndicator_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView569()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_GoalIndicator_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_GoalIndicator_Value
        [Tests.LongTermGoalProgram_GoalIndicator_Value](T1.[LongTermGoalProgram_GoalIndicator_Value.Id], T1.[LongTermGoalProgram_GoalIndicator_Value.IdHierarchyPeriod], T1.[LongTermGoalProgram_GoalIndicator_Value.Value], T1.[LongTermGoalProgram_GoalIndicator_Value.IdOwner], T1.[LongTermGoalProgram_GoalIndicator_Value.IdMaster])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_GoalIndicator_Value.Id], 
            T.idHierarchyPeriod AS [LongTermGoalProgram_GoalIndicator_Value.IdHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_GoalIndicator_Value.Value], 
            T.idOwner AS [LongTermGoalProgram_GoalIndicator_Value.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_GoalIndicator_Value.IdMaster], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_GoalIndicator_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView570()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_Activity", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_Activity
        [Tests.LongTermGoalProgram_Activity](T1.[LongTermGoalProgram_Activity.Id], T1.[LongTermGoalProgram_Activity.IdOwner], T1.[LongTermGoalProgram_Activity.IdMaster], T1.[LongTermGoalProgram_Activity.IdSBP], T1.[LongTermGoalProgram_Activity.IdContingent], T1.[LongTermGoalProgram_Activity.IdIndicatorActivity_Volume], T1.[LongTermGoalProgram_Activity.IdActivity])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_Activity.Id], 
            T.idOwner AS [LongTermGoalProgram_Activity.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_Activity.IdMaster], 
            T.idSBP AS [LongTermGoalProgram_Activity.IdSBP], 
            T.idContingent AS [LongTermGoalProgram_Activity.IdContingent], 
            T.idIndicatorActivity_Volume AS [LongTermGoalProgram_Activity.IdIndicatorActivity_Volume], 
            T.idActivity AS [LongTermGoalProgram_Activity.IdActivity], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_ActivityResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView571()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_ActivityResourceMaintenance", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ActivityResourceMaintenance
        [Tests.LongTermGoalProgram_ActivityResourceMaintenance](T1.[LongTermGoalProgram_ActivityResourceMaintenance.Id], T1.[LongTermGoalProgram_ActivityResourceMaintenance.IdOwner], T1.[LongTermGoalProgram_ActivityResourceMaintenance.IdMaster], T1.[LongTermGoalProgram_ActivityResourceMaintenance.IdFinanceSource])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_ActivityResourceMaintenance.Id], 
            T.idOwner AS [LongTermGoalProgram_ActivityResourceMaintenance.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_ActivityResourceMaintenance.IdMaster], 
            T.idFinanceSource AS [LongTermGoalProgram_ActivityResourceMaintenance.IdFinanceSource], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_ActivityResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_ActivityResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView572()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_ActivityResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ActivityResourceMaintenance_Value
        [Tests.LongTermGoalProgram_ActivityResourceMaintenance_Value](T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.Id], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.IdHierarchyPeriod], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.Value], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.IdOwner], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.IdMaster], T1.[LongTermGoalProgram_ActivityResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.Value], 
            T.idOwner AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_ActivityResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_ActivityResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_IndicatorActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView573()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_IndicatorActivity", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_IndicatorActivity
        [Tests.LongTermGoalProgram_IndicatorActivity](T1.[LongTermGoalProgram_IndicatorActivity.Id], T1.[LongTermGoalProgram_IndicatorActivity.IdOwner], T1.[LongTermGoalProgram_IndicatorActivity.IdMaster], T1.[LongTermGoalProgram_IndicatorActivity.IdIndicatorActivity])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_IndicatorActivity.Id], 
            T.idOwner AS [LongTermGoalProgram_IndicatorActivity.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_IndicatorActivity.IdMaster], 
            T.idIndicatorActivity AS [LongTermGoalProgram_IndicatorActivity.IdIndicatorActivity], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_IndicatorActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_IndicatorActivity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView574()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_IndicatorActivity_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_IndicatorActivity_Value
        [Tests.LongTermGoalProgram_IndicatorActivity_Value](T1.[LongTermGoalProgram_IndicatorActivity_Value.Id], T1.[LongTermGoalProgram_IndicatorActivity_Value.IdHierarchyPeriod], T1.[LongTermGoalProgram_IndicatorActivity_Value.Value], T1.[LongTermGoalProgram_IndicatorActivity_Value.IdOwner], T1.[LongTermGoalProgram_IndicatorActivity_Value.IdMaster], T1.[LongTermGoalProgram_IndicatorActivity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_IndicatorActivity_Value.Id], 
            T.idHierarchyPeriod AS [LongTermGoalProgram_IndicatorActivity_Value.IdHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_IndicatorActivity_Value.Value], 
            T.idOwner AS [LongTermGoalProgram_IndicatorActivity_Value.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_IndicatorActivity_Value.IdMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_IndicatorActivity_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_IndicatorActivity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_Activity_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView575()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_Activity_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_Activity_Value
        [Tests.LongTermGoalProgram_Activity_Value](T1.[LongTermGoalProgram_Activity_Value.Id], T1.[LongTermGoalProgram_Activity_Value.IdHierarchyPeriod], T1.[LongTermGoalProgram_Activity_Value.Value], T1.[LongTermGoalProgram_Activity_Value.IdOwner], T1.[LongTermGoalProgram_Activity_Value.IdMaster], T1.[LongTermGoalProgram_Activity_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_Activity_Value.Id], 
            T.idHierarchyPeriod AS [LongTermGoalProgram_Activity_Value.IdHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_Activity_Value.Value], 
            T.idOwner AS [LongTermGoalProgram_Activity_Value.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_Activity_Value.IdMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_Activity_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_Activity_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_CoExecutor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView576()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_CoExecutor", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_CoExecutor
        [Tests.LongTermGoalProgram_CoExecutor](T1.[LongTermGoalProgram_CoExecutor.Id], T1.[LongTermGoalProgram_CoExecutor.IdOwner], T1.[LongTermGoalProgram_CoExecutor.IdSBP], T1.[LongTermGoalProgram_CoExecutor.IdResponsibleExecutantType])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_CoExecutor.Id], 
            T.idOwner AS [LongTermGoalProgram_CoExecutor.IdOwner], 
            T.idSBP AS [LongTermGoalProgram_CoExecutor.IdSBP], 
            T.idResponsibleExecutantType AS [LongTermGoalProgram_CoExecutor.IdResponsibleExecutantType], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_CoExecutor AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_ResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView577()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_ResourceMaintenance", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ResourceMaintenance
        [Tests.LongTermGoalProgram_ResourceMaintenance](T1.[LongTermGoalProgram_ResourceMaintenance.Id], T1.[LongTermGoalProgram_ResourceMaintenance.IdOwner], T1.[LongTermGoalProgram_ResourceMaintenance.IdFinanceSource])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_ResourceMaintenance.Id], 
            T.idOwner AS [LongTermGoalProgram_ResourceMaintenance.IdOwner], 
            T.idFinanceSource AS [LongTermGoalProgram_ResourceMaintenance.IdFinanceSource], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_ResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_ResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView578()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_ResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_ResourceMaintenance_Value
        [Tests.LongTermGoalProgram_ResourceMaintenance_Value](T1.[LongTermGoalProgram_ResourceMaintenance_Value.Id], T1.[LongTermGoalProgram_ResourceMaintenance_Value.IdHierarchyPeriod], T1.[LongTermGoalProgram_ResourceMaintenance_Value.Value], T1.[LongTermGoalProgram_ResourceMaintenance_Value.IdOwner], T1.[LongTermGoalProgram_ResourceMaintenance_Value.IdMaster], T1.[LongTermGoalProgram_ResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_ResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [LongTermGoalProgram_ResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_ResourceMaintenance_Value.Value], 
            T.idOwner AS [LongTermGoalProgram_ResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_ResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_ResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_ResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_ListSubProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView579()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2062);
            viewString.Append("\r\n    SELECT VALUE -- Constructing LongTermGoalProgram_ListSubProgram\r\n        [");
            viewString.Append("Tests.LongTermGoalProgram_ListSubProgram](T1.[LongTermGoalProgram_ListSubProgram");
            viewString.Append(".Id], T1.[LongTermGoalProgram_ListSubProgram.IdActualDocStatus], T1.[LongTermGoa");
            viewString.Append("lProgram_ListSubProgram.IdActualDocument], T1.[LongTermGoalProgram_ListSubProgra");
            viewString.Append("m.IdOwner], T1.[LongTermGoalProgram_ListSubProgram.IdAnalyticalCodeStateProgram]");
            viewString.Append(", T1.[LongTermGoalProgram_ListSubProgram.IdSBP], T1.[LongTermGoalProgram_ListSub");
            viewString.Append("Program.IdResponsibleExecutantType], T1.[LongTermGoalProgram_ListSubProgram.IdSy");
            viewString.Append("stemGoal], T1.[LongTermGoalProgram_ListSubProgram.DateStart], T1.[LongTermGoalPr");
            viewString.Append("ogram_ListSubProgram.DateEnd], T1.[LongTermGoalProgram_ListSubProgram.Caption], ");
            viewString.Append("T1.[LongTermGoalProgram_ListSubProgram.IdDocument], T1.[LongTermGoalProgram_List");
            viewString.Append("SubProgram.IdDocumentEntity])\r\n    FROM (\r\n        SELECT \r\n            T.id AS ");
            viewString.Append("[LongTermGoalProgram_ListSubProgram.Id], \r\n            T.idActualDocStatus AS [L");
            viewString.Append("ongTermGoalProgram_ListSubProgram.IdActualDocStatus], \r\n            T.idActualDo");
            viewString.Append("cument AS [LongTermGoalProgram_ListSubProgram.IdActualDocument], \r\n            T");
            viewString.Append(".idOwner AS [LongTermGoalProgram_ListSubProgram.IdOwner], \r\n            T.idAnal");
            viewString.Append("yticalCodeStateProgram AS [LongTermGoalProgram_ListSubProgram.IdAnalyticalCodeSt");
            viewString.Append("ateProgram], \r\n            T.idSBP AS [LongTermGoalProgram_ListSubProgram.IdSBP]");
            viewString.Append(", \r\n            T.idResponsibleExecutantType AS [LongTermGoalProgram_ListSubProg");
            viewString.Append("ram.IdResponsibleExecutantType], \r\n            T.idSystemGoal AS [LongTermGoalPr");
            viewString.Append("ogram_ListSubProgram.IdSystemGoal], \r\n            T.DateStart AS [LongTermGoalPr");
            viewString.Append("ogram_ListSubProgram.DateStart], \r\n            T.DateEnd AS [LongTermGoalProgram");
            viewString.Append("_ListSubProgram.DateEnd], \r\n            T.Caption AS [LongTermGoalProgram_ListSu");
            viewString.Append("bProgram.Caption], \r\n            T.idDocument AS [LongTermGoalProgram_ListSubPro");
            viewString.Append("gram.IdDocument], \r\n            T.idDocumentEntity AS [LongTermGoalProgram_ListS");
            viewString.Append("ubProgram.IdDocumentEntity], \r\n            True AS _from0\r\n        FROM CodeFirs");
            viewString.Append("tDatabase.LongTermGoalProgram_ListSubProgram AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_ListSubProgram", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_SubProgramResourceMaintenance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView580()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_SubProgramResourceMaintenance", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_SubProgramResourceMaintenance
        [Tests.LongTermGoalProgram_SubProgramResourceMaintenance](T1.[LongTermGoalProgram_SubProgramResourceMaintenance.Id], T1.[LongTermGoalProgram_SubProgramResourceMaintenance.IdOwner], T1.[LongTermGoalProgram_SubProgramResourceMaintenance.IdMaster], T1.[LongTermGoalProgram_SubProgramResourceMaintenance.IdFinanceSource])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_SubProgramResourceMaintenance.Id], 
            T.idOwner AS [LongTermGoalProgram_SubProgramResourceMaintenance.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_SubProgramResourceMaintenance.IdMaster], 
            T.idFinanceSource AS [LongTermGoalProgram_SubProgramResourceMaintenance.IdFinanceSource], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_SubProgramResourceMaintenance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.LongTermGoalProgram_SubProgramResourceMaintenance_Value
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView581()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.LongTermGoalProgram_SubProgramResourceMaintenance_Value", @"
    SELECT VALUE -- Constructing LongTermGoalProgram_SubProgramResourceMaintenance_Value
        [Tests.LongTermGoalProgram_SubProgramResourceMaintenance_Value](T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.Id], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.IdHierarchyPeriod], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.Value], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.IdOwner], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.IdMaster], T1.[LongTermGoalProgram_SubProgramResourceMaintenance_Value.AdditionalValue])
    FROM (
        SELECT 
            T.id AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.Id], 
            T.idHierarchyPeriod AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.IdHierarchyPeriod], 
            T.[Value] AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.Value], 
            T.idOwner AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.IdOwner], 
            T.idMaster AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.IdMaster], 
            T.AdditionalValue AS [LongTermGoalProgram_SubProgramResourceMaintenance_Value.AdditionalValue], 
            True AS _from0
        FROM CodeFirstDatabase.LongTermGoalProgram_SubProgramResourceMaintenance_Value AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TaskVolume
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView582()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2433);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TaskVolume\r\n        [Tests.TaskVolume](T1.Tas");
            viewString.Append("kVolume_Id, T1.TaskVolume_IdExecutedOperation, T1.TaskVolume_IdTerminateOperatio");
            viewString.Append("n, T1.TaskVolume_IdPublicLegalFormation, T1.TaskVolume_IdVersion, T1.TaskVolume_");
            viewString.Append("IdBudget, T1.TaskVolume_IdSBP, T1.TaskVolume_IdProgram, T1.TaskVolume_IdSystemGo");
            viewString.Append("alElement, T1.TaskVolume_IdTaskCollection, T1.[TaskVolume.IdIndicatorActivity_Vo");
            viewString.Append("lume], T1.TaskVolume_IdHierarchyPeriod, T1.TaskVolume_IdValueType, T1.TaskVolume");
            viewString.Append("_Value, T1.TaskVolume_IdRegistrator, T1.TaskVolume_DateCommit, T1.TaskVolume_IdA");
            viewString.Append("pproved, T1.TaskVolume_DateTerminate, T1.TaskVolume_IdTerminator, T1.TaskVolume_");
            viewString.Append("IdRegistratorEntity, T1.TaskVolume_IdApprovedEntity, T1.TaskVolume_IdTerminatorE");
            viewString.Append("ntity, T1.TaskVolume_IsAdditionalNeed, T1.TaskVolume_ActivityAUBU, T1.TaskVolume");
            viewString.Append("_DateCreate)\r\n    FROM (\r\n        SELECT \r\n            T.id AS TaskVolume_Id, \r\n");
            viewString.Append("            T.idExecutedOperation AS TaskVolume_IdExecutedOperation, \r\n         ");
            viewString.Append("   T.idTerminateOperation AS TaskVolume_IdTerminateOperation, \r\n            T.id");
            viewString.Append("PublicLegalFormation AS TaskVolume_IdPublicLegalFormation, \r\n            T.idVer");
            viewString.Append("sion AS TaskVolume_IdVersion, \r\n            T.idBudget AS TaskVolume_IdBudget, \r");
            viewString.Append("\n            T.idSBP AS TaskVolume_IdSBP, \r\n            T.idProgram AS TaskVolum");
            viewString.Append("e_IdProgram, \r\n            T.idSystemGoalElement AS TaskVolume_IdSystemGoalEleme");
            viewString.Append("nt, \r\n            T.idTaskCollection AS TaskVolume_IdTaskCollection, \r\n         ");
            viewString.Append("   T.idIndicatorActivity_Volume AS [TaskVolume.IdIndicatorActivity_Volume], \r\n  ");
            viewString.Append("          T.idHierarchyPeriod AS TaskVolume_IdHierarchyPeriod, \r\n            T.i");
            viewString.Append("dValueType AS TaskVolume_IdValueType, \r\n            T.[Value] AS TaskVolume_Valu");
            viewString.Append("e, \r\n            T.idRegistrator AS TaskVolume_IdRegistrator, \r\n            T.Da");
            viewString.Append("teCommit AS TaskVolume_DateCommit, \r\n            T.idApproved AS TaskVolume_IdAp");
            viewString.Append("proved, \r\n            T.DateTerminate AS TaskVolume_DateTerminate, \r\n           ");
            viewString.Append(" T.idTerminator AS TaskVolume_IdTerminator, \r\n            T.idRegistratorEntity ");
            viewString.Append("AS TaskVolume_IdRegistratorEntity, \r\n            T.idApprovedEntity AS TaskVolum");
            viewString.Append("e_IdApprovedEntity, \r\n            T.idTerminatorEntity AS TaskVolume_IdTerminato");
            viewString.Append("rEntity, \r\n            T.IsAdditionalNeed AS TaskVolume_IsAdditionalNeed, \r\n    ");
            viewString.Append("        T.ActivityAUBU AS TaskVolume_ActivityAUBU, \r\n            T.DateCreate AS");
            viewString.Append(" TaskVolume_DateCreate, \r\n            True AS _from0\r\n        FROM CodeFirstData");
            viewString.Append("base.TaskVolume AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TaskVolume", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.TaskIndicatorQuality
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView583()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2840);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TaskIndicatorQuality\r\n        [Tests.TaskIndi");
            viewString.Append("catorQuality](T1.TaskIndicatorQuality_Id, T1.TaskIndicatorQuality_IdExecutedOper");
            viewString.Append("ation, T1.TaskIndicatorQuality_IdTerminateOperation, T1.TaskIndicatorQuality_IdP");
            viewString.Append("ublicLegalFormation, T1.TaskIndicatorQuality_IdVersion, T1.TaskIndicatorQuality_");
            viewString.Append("IdBudget, T1.TaskIndicatorQuality_IdSBP, T1.TaskIndicatorQuality_IdProgram, T1.T");
            viewString.Append("askIndicatorQuality_IdTaskCollection, T1.[TaskIndicatorQuality.IdIndicatorActivi");
            viewString.Append("ty_Quality], T1.TaskIndicatorQuality_IdHierarchyPeriod, T1.TaskIndicatorQuality_");
            viewString.Append("IdValueType, T1.TaskIndicatorQuality_Value, T1.TaskIndicatorQuality_IdRegistrato");
            viewString.Append("r, T1.TaskIndicatorQuality_DateCommit, T1.TaskIndicatorQuality_IdApproved, T1.Ta");
            viewString.Append("skIndicatorQuality_DateTerminate, T1.TaskIndicatorQuality_IdTerminator, T1.TaskI");
            viewString.Append("ndicatorQuality_IdRegistratorEntity, T1.TaskIndicatorQuality_IdApprovedEntity, T");
            viewString.Append("1.TaskIndicatorQuality_IdTerminatorEntity, T1.TaskIndicatorQuality_IsAdditionalN");
            viewString.Append("eed, T1.TaskIndicatorQuality_DateCreate, T1.TaskIndicatorQuality_ActivityAUBU)\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.id AS TaskIndicatorQuality_Id, \r\n    ");
            viewString.Append("        T.idExecutedOperation AS TaskIndicatorQuality_IdExecutedOperation, \r\n   ");
            viewString.Append("         T.idTerminateOperation AS TaskIndicatorQuality_IdTerminateOperation, \r\n");
            viewString.Append("            T.idPublicLegalFormation AS TaskIndicatorQuality_IdPublicLegalFormat");
            viewString.Append("ion, \r\n            T.idVersion AS TaskIndicatorQuality_IdVersion, \r\n            ");
            viewString.Append("T.idBudget AS TaskIndicatorQuality_IdBudget, \r\n            T.idSBP AS TaskIndica");
            viewString.Append("torQuality_IdSBP, \r\n            T.idProgram AS TaskIndicatorQuality_IdProgram, \r");
            viewString.Append("\n            T.idTaskCollection AS TaskIndicatorQuality_IdTaskCollection, \r\n    ");
            viewString.Append("        T.idIndicatorActivity_Quality AS [TaskIndicatorQuality.IdIndicatorActivi");
            viewString.Append("ty_Quality], \r\n            T.idHierarchyPeriod AS TaskIndicatorQuality_IdHierarc");
            viewString.Append("hyPeriod, \r\n            T.idValueType AS TaskIndicatorQuality_IdValueType, \r\n   ");
            viewString.Append("         T.[Value] AS TaskIndicatorQuality_Value, \r\n            T.idRegistrator ");
            viewString.Append("AS TaskIndicatorQuality_IdRegistrator, \r\n            T.DateCommit AS TaskIndicat");
            viewString.Append("orQuality_DateCommit, \r\n            T.idApproved AS TaskIndicatorQuality_IdAppro");
            viewString.Append("ved, \r\n            T.DateTerminate AS TaskIndicatorQuality_DateTerminate, \r\n    ");
            viewString.Append("        T.idTerminator AS TaskIndicatorQuality_IdTerminator, \r\n            T.idR");
            viewString.Append("egistratorEntity AS TaskIndicatorQuality_IdRegistratorEntity, \r\n            T.id");
            viewString.Append("ApprovedEntity AS TaskIndicatorQuality_IdApprovedEntity, \r\n            T.idTermi");
            viewString.Append("natorEntity AS TaskIndicatorQuality_IdTerminatorEntity, \r\n            T.IsAdditi");
            viewString.Append("onalNeed AS TaskIndicatorQuality_IsAdditionalNeed, \r\n            T.DateCreate AS");
            viewString.Append(" TaskIndicatorQuality_DateCreate, \r\n            T.ActivityAUBU AS TaskIndicatorQ");
            viewString.Append("uality_ActivityAUBU, \r\n            True AS _from0\r\n        FROM CodeFirstDatabas");
            viewString.Append("e.TaskIndicatorQuality AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TaskIndicatorQuality", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.RuleReferExpenceAsRoByKOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView584()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RuleReferExpenceAsRoByKOSGU", @"
    SELECT VALUE -- Constructing RuleReferExpenceAsRoByKOSGU
        [Tests.RuleReferExpenceAsRoByKOSGU](T1.RuleReferExpenceAsRoByKOSGU_Id, T1.RuleReferExpenceAsRoByKOSGU_IdAuthorityOfExpenseObligation, T1.RuleReferExpenceAsRoByKOSGU_IdKOSGU, T1.RuleReferExpenceAsRoByKOSGU_IdRefStatus)
    FROM (
        SELECT 
            T.id AS RuleReferExpenceAsRoByKOSGU_Id, 
            T.idAuthorityOfExpenseObligation AS RuleReferExpenceAsRoByKOSGU_IdAuthorityOfExpenseObligation, 
            T.idKOSGU AS RuleReferExpenceAsRoByKOSGU_IdKOSGU, 
            T.idRefStatus AS RuleReferExpenceAsRoByKOSGU_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.RuleReferExpenceAsRoByKOSGU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView585()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2765);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate\r\n        [Tests.Pub");
            viewString.Append("licInstitutionEstimate](T1.PublicInstitutionEstimate_Id, T1.[PublicInstitutionEs");
            viewString.Append("timate.IdSBP_BlankActual], T1.[PublicInstitutionEstimate.IdSBP_BlankActualAuBu],");
            viewString.Append(" T1.PublicInstitutionEstimate_Caption, T1.PublicInstitutionEstimate_IdPublicLega");
            viewString.Append("lFormation, T1.PublicInstitutionEstimate_IdBudget, T1.PublicInstitutionEstimate_");
            viewString.Append("IdVersion, T1.PublicInstitutionEstimate_Number, T1.PublicInstitutionEstimate_Dat");
            viewString.Append("e, T1.PublicInstitutionEstimate_IdSBP, T1.PublicInstitutionEstimate_Description,");
            viewString.Append(" T1.PublicInstitutionEstimate_IdParent, T1.PublicInstitutionEstimate_ReasonCance");
            viewString.Append("l, T1.PublicInstitutionEstimate_IsRequireClarification, T1.PublicInstitutionEsti");
            viewString.Append("mate_ReasonClarification, T1.PublicInstitutionEstimate_DateTerminate, T1.PublicI");
            viewString.Append("nstitutionEstimate_ReasonTerminate, T1.PublicInstitutionEstimate_DateCommit, T1.");
            viewString.Append("PublicInstitutionEstimate_DateLastEdit, T1.PublicInstitutionEstimate_IsApproved,");
            viewString.Append(" T1.PublicInstitutionEstimate_IdDocStatus, T1.PublicInstitutionEstimate_HasAddit");
            viewString.Append("ionalNeed)\r\n    FROM (\r\n        SELECT \r\n            T.id AS PublicInstitutionEs");
            viewString.Append("timate_Id, \r\n            T.idSBP_BlankActual AS [PublicInstitutionEstimate.IdSBP");
            viewString.Append("_BlankActual], \r\n            T.idSBP_BlankActualAuBu AS [PublicInstitutionEstima");
            viewString.Append("te.IdSBP_BlankActualAuBu], \r\n            T.Caption AS PublicInstitutionEstimate_");
            viewString.Append("Caption, \r\n            T.idPublicLegalFormation AS PublicInstitutionEstimate_IdP");
            viewString.Append("ublicLegalFormation, \r\n            T.idBudget AS PublicInstitutionEstimate_IdBud");
            viewString.Append("get, \r\n            T.idVersion AS PublicInstitutionEstimate_IdVersion, \r\n       ");
            viewString.Append("     T.Number AS PublicInstitutionEstimate_Number, \r\n            T.Date AS Publi");
            viewString.Append("cInstitutionEstimate_Date, \r\n            T.idSBP AS PublicInstitutionEstimate_Id");
            viewString.Append("SBP, \r\n            T.Description AS PublicInstitutionEstimate_Description, \r\n   ");
            viewString.Append("         T.idParent AS PublicInstitutionEstimate_IdParent, \r\n            T.Reaso");
            viewString.Append("nCancel AS PublicInstitutionEstimate_ReasonCancel, \r\n            T.isRequireClar");
            viewString.Append("ification AS PublicInstitutionEstimate_IsRequireClarification, \r\n            T.R");
            viewString.Append("easonClarification AS PublicInstitutionEstimate_ReasonClarification, \r\n         ");
            viewString.Append("   T.DateTerminate AS PublicInstitutionEstimate_DateTerminate, \r\n            T.R");
            viewString.Append("easonTerminate AS PublicInstitutionEstimate_ReasonTerminate, \r\n            T.Dat");
            viewString.Append("eCommit AS PublicInstitutionEstimate_DateCommit, \r\n            T.DateLastEdit AS");
            viewString.Append(" PublicInstitutionEstimate_DateLastEdit, \r\n            T.isApproved AS PublicIns");
            viewString.Append("titutionEstimate_IsApproved, \r\n            T.idDocStatus AS PublicInstitutionEst");
            viewString.Append("imate_IdDocStatus, \r\n            T.HasAdditionalNeed AS PublicInstitutionEstimat");
            viewString.Append("e_HasAdditionalNeed, \r\n            True AS _from0\r\n        FROM CodeFirstDatabas");
            viewString.Append("e.PublicInstitutionEstimate AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView586()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_Activity", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_Activity
        [Tests.PublicInstitutionEstimate_Activity](T1.[PublicInstitutionEstimate_Activity.Id], T1.[PublicInstitutionEstimate_Activity.IdOwner], T1.[PublicInstitutionEstimate_Activity.IdActivity], T1.[PublicInstitutionEstimate_Activity.IdContingent], T1.[PublicInstitutionEstimate_Activity.IdIndicatorActivity], T1.[PublicInstitutionEstimate_Activity.IdUnitDimension])
    FROM (
        SELECT 
            T.id AS [PublicInstitutionEstimate_Activity.Id], 
            T.idOwner AS [PublicInstitutionEstimate_Activity.IdOwner], 
            T.idActivity AS [PublicInstitutionEstimate_Activity.IdActivity], 
            T.idContingent AS [PublicInstitutionEstimate_Activity.IdContingent], 
            T.idIndicatorActivity AS [PublicInstitutionEstimate_Activity.IdIndicatorActivity], 
            T.idUnitDimension AS [PublicInstitutionEstimate_Activity.IdUnitDimension], 
            True AS _from0
        FROM CodeFirstDatabase.PublicInstitutionEstimate_Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_Expense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView587()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3635);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_Expense\r\n        [T");
            viewString.Append("ests.PublicInstitutionEstimate_Expense](T1.[PublicInstitutionEstimate_Expense.Id");
            viewString.Append("], T1.[PublicInstitutionEstimate_Expense.IdOwner], T1.[PublicInstitutionEstimate");
            viewString.Append("_Expense.IdMaster], T1.[PublicInstitutionEstimate_Expense.IsIndirectCosts], T1.[");
            viewString.Append("PublicInstitutionEstimate_Expense.IdExpenseObligationType], T1.[PublicInstitutio");
            viewString.Append("nEstimate_Expense.IdKFO], T1.[PublicInstitutionEstimate_Expense.IdKVSR], T1.[Pub");
            viewString.Append("licInstitutionEstimate_Expense.IdRZPR], T1.[PublicInstitutionEstimate_Expense.Id");
            viewString.Append("KCSR], T1.[PublicInstitutionEstimate_Expense.IdKVR], T1.[PublicInstitutionEstima");
            viewString.Append("te_Expense.IdKOSGU], T1.[PublicInstitutionEstimate_Expense.IdDFK], T1.[PublicIns");
            viewString.Append("titutionEstimate_Expense.IdDKR], T1.[PublicInstitutionEstimate_Expense.IdDEK], T");
            viewString.Append("1.[PublicInstitutionEstimate_Expense.IdOKATO], T1.[PublicInstitutionEstimate_Exp");
            viewString.Append("ense.OFG], T1.[PublicInstitutionEstimate_Expense.PFG1], T1.[PublicInstitutionEst");
            viewString.Append("imate_Expense.PFG2], T1.[PublicInstitutionEstimate_Expense.IdAuthorityOfExpenseO");
            viewString.Append("bligation], T1.[PublicInstitutionEstimate_Expense.IdIndirectCostsDistributionMet");
            viewString.Append("hod], T1.[PublicInstitutionEstimate_Expense.IdFinanceSource], T1.[PublicInstitut");
            viewString.Append("ionEstimate_Expense.AdditionalOFG], T1.[PublicInstitutionEstimate_Expense.Additi");
            viewString.Append("onalPFG1], T1.[PublicInstitutionEstimate_Expense.AdditionalPFG2], T1.[PublicInst");
            viewString.Append("itutionEstimate_Expense.IdCodeSubsidy], T1.[PublicInstitutionEstimate_Expense.Id");
            viewString.Append("BranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [PublicInstitutio");
            viewString.Append("nEstimate_Expense.Id], \r\n            T.idOwner AS [PublicInstitutionEstimate_Exp");
            viewString.Append("ense.IdOwner], \r\n            T.idMaster AS [PublicInstitutionEstimate_Expense.Id");
            viewString.Append("Master], \r\n            T.isIndirectCosts AS [PublicInstitutionEstimate_Expense.I");
            viewString.Append("sIndirectCosts], \r\n            T.idExpenseObligationType AS [PublicInstitutionEs");
            viewString.Append("timate_Expense.IdExpenseObligationType], \r\n            T.idKFO AS [PublicInstitu");
            viewString.Append("tionEstimate_Expense.IdKFO], \r\n            T.idKVSR AS [PublicInstitutionEstimat");
            viewString.Append("e_Expense.IdKVSR], \r\n            T.idRZPR AS [PublicInstitutionEstimate_Expense.");
            viewString.Append("IdRZPR], \r\n            T.idKCSR AS [PublicInstitutionEstimate_Expense.IdKCSR], \r");
            viewString.Append("\n            T.idKVR AS [PublicInstitutionEstimate_Expense.IdKVR], \r\n           ");
            viewString.Append(" T.idKOSGU AS [PublicInstitutionEstimate_Expense.IdKOSGU], \r\n            T.idDFK");
            viewString.Append(" AS [PublicInstitutionEstimate_Expense.IdDFK], \r\n            T.idDKR AS [PublicI");
            viewString.Append("nstitutionEstimate_Expense.IdDKR], \r\n            T.idDEK AS [PublicInstitutionEs");
            viewString.Append("timate_Expense.IdDEK], \r\n            T.idOKATO AS [PublicInstitutionEstimate_Exp");
            viewString.Append("ense.IdOKATO], \r\n            T.OFG AS [PublicInstitutionEstimate_Expense.OFG], \r");
            viewString.Append("\n            T.PFG1 AS [PublicInstitutionEstimate_Expense.PFG1], \r\n            T");
            viewString.Append(".PFG2 AS [PublicInstitutionEstimate_Expense.PFG2], \r\n            T.idAuthorityOf");
            viewString.Append("ExpenseObligation AS [PublicInstitutionEstimate_Expense.IdAuthorityOfExpenseObli");
            viewString.Append("gation], \r\n            T.idIndirectCostsDistributionMethod AS [PublicInstitution");
            viewString.Append("Estimate_Expense.IdIndirectCostsDistributionMethod], \r\n            T.idFinanceSo");
            viewString.Append("urce AS [PublicInstitutionEstimate_Expense.IdFinanceSource], \r\n            T.Add");
            viewString.Append("itionalOFG AS [PublicInstitutionEstimate_Expense.AdditionalOFG], \r\n            T");
            viewString.Append(".AdditionalPFG1 AS [PublicInstitutionEstimate_Expense.AdditionalPFG1], \r\n       ");
            viewString.Append("     T.AdditionalPFG2 AS [PublicInstitutionEstimate_Expense.AdditionalPFG2], \r\n ");
            viewString.Append("           T.idCodeSubsidy AS [PublicInstitutionEstimate_Expense.IdCodeSubsidy],");
            viewString.Append(" \r\n            T.idBranchCode AS [PublicInstitutionEstimate_Expense.IdBranchCode");
            viewString.Append("], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.PublicInstitutio");
            viewString.Append("nEstimate_Expense AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_Expense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_DistributionActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView588()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2344);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_DistributionActivit");
            viewString.Append("y\r\n        [Tests.PublicInstitutionEstimate_DistributionActivity](T1.[PublicInst");
            viewString.Append("itutionEstimate_DistributionActivity.Id], T1.[PublicInstitutionEstimate_Distribu");
            viewString.Append("tionActivity.IdOwner], T1.[PublicInstitutionEstimate_DistributionActivity.IdMast");
            viewString.Append("er], T1.[PublicInstitutionEstimate_DistributionActivity.IdPublicInstitutionEstim");
            viewString.Append("ate_Activity], T1.[PublicInstitutionEstimate_DistributionActivity.DirectOFG], T1");
            viewString.Append(".[PublicInstitutionEstimate_DistributionActivity.DirectPFG1], T1.[PublicInstitut");
            viewString.Append("ionEstimate_DistributionActivity.DirectPFG2], T1.[PublicInstitutionEstimate_Dist");
            viewString.Append("ributionActivity.VolumeOFG], T1.[PublicInstitutionEstimate_DistributionActivity.");
            viewString.Append("VolumePFG1], T1.[PublicInstitutionEstimate_DistributionActivity.VolumePFG2], T1.");
            viewString.Append("[PublicInstitutionEstimate_DistributionActivity.FactorOFG], T1.[PublicInstitutio");
            viewString.Append("nEstimate_DistributionActivity.FactorPFG1], T1.[PublicInstitutionEstimate_Distri");
            viewString.Append("butionActivity.FactorPFG2])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [P");
            viewString.Append("ublicInstitutionEstimate_DistributionActivity.Id], \r\n            T.idOwner AS [P");
            viewString.Append("ublicInstitutionEstimate_DistributionActivity.IdOwner], \r\n            T.idMaster");
            viewString.Append(" AS [PublicInstitutionEstimate_DistributionActivity.IdMaster], \r\n            T.i");
            viewString.Append("dPublicInstitutionEstimate_Activity AS [PublicInstitutionEstimate_DistributionAc");
            viewString.Append("tivity.IdPublicInstitutionEstimate_Activity], \r\n            T.DirectOFG AS [Publ");
            viewString.Append("icInstitutionEstimate_DistributionActivity.DirectOFG], \r\n            T.DirectPFG");
            viewString.Append("1 AS [PublicInstitutionEstimate_DistributionActivity.DirectPFG1], \r\n            ");
            viewString.Append("T.DirectPFG2 AS [PublicInstitutionEstimate_DistributionActivity.DirectPFG2], \r\n ");
            viewString.Append("           T.VolumeOFG AS [PublicInstitutionEstimate_DistributionActivity.Volume");
            viewString.Append("OFG], \r\n            T.VolumePFG1 AS [PublicInstitutionEstimate_DistributionActiv");
            viewString.Append("ity.VolumePFG1], \r\n            T.VolumePFG2 AS [PublicInstitutionEstimate_Distri");
            viewString.Append("butionActivity.VolumePFG2], \r\n            T.FactorOFG AS [PublicInstitutionEstim");
            viewString.Append("ate_DistributionActivity.FactorOFG], \r\n            T.FactorPFG1 AS [PublicInstit");
            viewString.Append("utionEstimate_DistributionActivity.FactorPFG1], \r\n            T.FactorPFG2 AS [P");
            viewString.Append("ublicInstitutionEstimate_DistributionActivity.FactorPFG2], \r\n            True AS");
            viewString.Append(" _from0\r\n        FROM CodeFirstDatabase.PublicInstitutionEstimate_DistributionAc");
            viewString.Append("tivity AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_DistributionActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_DistributionMethod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView589()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_DistributionMethod", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_DistributionMethod
        [Tests.PublicInstitutionEstimate_DistributionMethod](T1.[PublicInstitutionEstimate_DistributionMethod.Id], T1.[PublicInstitutionEstimate_DistributionMethod.IdOwner], T1.[PublicInstitutionEstimate_DistributionMethod.IdIndirectCostsDistributionMethod])
    FROM (
        SELECT 
            T.id AS [PublicInstitutionEstimate_DistributionMethod.Id], 
            T.idOwner AS [PublicInstitutionEstimate_DistributionMethod.IdOwner], 
            T.idIndirectCostsDistributionMethod AS [PublicInstitutionEstimate_DistributionMethod.IdIndirectCostsDistributionMethod], 
            True AS _from0
        FROM CodeFirstDatabase.PublicInstitutionEstimate_DistributionMethod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_DistributionAdditionalParam
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView590()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_DistributionAdditionalParam", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_DistributionAdditionalParam
        [Tests.PublicInstitutionEstimate_DistributionAdditionalParam](T1.[PublicInstitutionEstimate_DistributionAdditionalParam.Id], T1.[PublicInstitutionEstimate_DistributionAdditionalParam.IdOwner], T1.[PublicInstitutionEstimate_DistributionAdditionalParam.IdMaster], T1.[PublicInstitutionEstimate_DistributionAdditionalParam.IdKOSGU])
    FROM (
        SELECT 
            T.id AS [PublicInstitutionEstimate_DistributionAdditionalParam.Id], 
            T.idOwner AS [PublicInstitutionEstimate_DistributionAdditionalParam.IdOwner], 
            T.idMaster AS [PublicInstitutionEstimate_DistributionAdditionalParam.IdMaster], 
            T.idKOSGU AS [PublicInstitutionEstimate_DistributionAdditionalParam.IdKOSGU], 
            True AS _from0
        FROM CodeFirstDatabase.PublicInstitutionEstimate_DistributionAdditionalParam AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_IndirectExpenses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView591()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2933);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_IndirectExpenses\r\n ");
            viewString.Append("       [Tests.PublicInstitutionEstimate_IndirectExpenses](T1.[PublicInstitutionE");
            viewString.Append("stimate_IndirectExpenses.Id], T1.[PublicInstitutionEstimate_IndirectExpenses.IdO");
            viewString.Append("wner], T1.[PublicInstitutionEstimate_IndirectExpenses.IdMaster], T1.[PublicInsti");
            viewString.Append("tutionEstimate_IndirectExpenses.IdExpenseObligationType], T1.[PublicInstitutionE");
            viewString.Append("stimate_IndirectExpenses.IdFinanceSource], T1.[PublicInstitutionEstimate_Indirec");
            viewString.Append("tExpenses.IdKFO], T1.[PublicInstitutionEstimate_IndirectExpenses.IdKVSR], T1.[Pu");
            viewString.Append("blicInstitutionEstimate_IndirectExpenses.IdRZPR], T1.[PublicInstitutionEstimate_");
            viewString.Append("IndirectExpenses.IdKCSR], T1.[PublicInstitutionEstimate_IndirectExpenses.IdKVR],");
            viewString.Append(" T1.[PublicInstitutionEstimate_IndirectExpenses.IdKOSGU], T1.[PublicInstitutionE");
            viewString.Append("stimate_IndirectExpenses.IdDFK], T1.[PublicInstitutionEstimate_IndirectExpenses.");
            viewString.Append("IdDKR], T1.[PublicInstitutionEstimate_IndirectExpenses.IdDEK], T1.[PublicInstitu");
            viewString.Append("tionEstimate_IndirectExpenses.OFG], T1.[PublicInstitutionEstimate_IndirectExpens");
            viewString.Append("es.PFG1], T1.[PublicInstitutionEstimate_IndirectExpenses.PFG2], T1.[PublicInstit");
            viewString.Append("utionEstimate_IndirectExpenses.IdCodeSubsidy], T1.[PublicInstitutionEstimate_Ind");
            viewString.Append("irectExpenses.IdBranchCode])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [");
            viewString.Append("PublicInstitutionEstimate_IndirectExpenses.Id], \r\n            T.idOwner AS [Publ");
            viewString.Append("icInstitutionEstimate_IndirectExpenses.IdOwner], \r\n            T.idMaster AS [Pu");
            viewString.Append("blicInstitutionEstimate_IndirectExpenses.IdMaster], \r\n            T.idExpenseObl");
            viewString.Append("igationType AS [PublicInstitutionEstimate_IndirectExpenses.IdExpenseObligationTy");
            viewString.Append("pe], \r\n            T.idFinanceSource AS [PublicInstitutionEstimate_IndirectExpen");
            viewString.Append("ses.IdFinanceSource], \r\n            T.idKFO AS [PublicInstitutionEstimate_Indire");
            viewString.Append("ctExpenses.IdKFO], \r\n            T.idKVSR AS [PublicInstitutionEstimate_Indirect");
            viewString.Append("Expenses.IdKVSR], \r\n            T.idRZPR AS [PublicInstitutionEstimate_IndirectE");
            viewString.Append("xpenses.IdRZPR], \r\n            T.idKCSR AS [PublicInstitutionEstimate_IndirectEx");
            viewString.Append("penses.IdKCSR], \r\n            T.idKVR AS [PublicInstitutionEstimate_IndirectExpe");
            viewString.Append("nses.IdKVR], \r\n            T.idKOSGU AS [PublicInstitutionEstimate_IndirectExpen");
            viewString.Append("ses.IdKOSGU], \r\n            T.idDFK AS [PublicInstitutionEstimate_IndirectExpens");
            viewString.Append("es.IdDFK], \r\n            T.idDKR AS [PublicInstitutionEstimate_IndirectExpenses.");
            viewString.Append("IdDKR], \r\n            T.idDEK AS [PublicInstitutionEstimate_IndirectExpenses.IdD");
            viewString.Append("EK], \r\n            T.OFG AS [PublicInstitutionEstimate_IndirectExpenses.OFG], \r\n");
            viewString.Append("            T.PFG1 AS [PublicInstitutionEstimate_IndirectExpenses.PFG1], \r\n     ");
            viewString.Append("       T.PFG2 AS [PublicInstitutionEstimate_IndirectExpenses.PFG2], \r\n          ");
            viewString.Append("  T.idCodeSubsidy AS [PublicInstitutionEstimate_IndirectExpenses.IdCodeSubsidy],");
            viewString.Append(" \r\n            T.idBranchCode AS [PublicInstitutionEstimate_IndirectExpenses.IdB");
            viewString.Append("ranchCode], \r\n            True AS _from0\r\n        FROM CodeFirstDatabase.PublicI");
            viewString.Append("nstitutionEstimate_IndirectExpenses AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_IndirectExpenses", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_ActivityAUBU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView592()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_ActivityAUBU", @"
    SELECT VALUE -- Constructing PublicInstitutionEstimate_ActivityAUBU
        [Tests.PublicInstitutionEstimate_ActivityAUBU](T1.[PublicInstitutionEstimate_ActivityAUBU.Id], T1.[PublicInstitutionEstimate_ActivityAUBU.IdOwner], T1.[PublicInstitutionEstimate_ActivityAUBU.IdActivity], T1.[PublicInstitutionEstimate_ActivityAUBU.IdContingent], T1.[PublicInstitutionEstimate_ActivityAUBU.IdUnitDimension], T1.[PublicInstitutionEstimate_ActivityAUBU.IdIndicatorActivity])
    FROM (
        SELECT 
            T.id AS [PublicInstitutionEstimate_ActivityAUBU.Id], 
            T.idOwner AS [PublicInstitutionEstimate_ActivityAUBU.IdOwner], 
            T.idActivity AS [PublicInstitutionEstimate_ActivityAUBU.IdActivity], 
            T.idContingent AS [PublicInstitutionEstimate_ActivityAUBU.IdContingent], 
            T.idUnitDimension AS [PublicInstitutionEstimate_ActivityAUBU.IdUnitDimension], 
            T.idIndicatorActivity AS [PublicInstitutionEstimate_ActivityAUBU.IdIndicatorActivity], 
            True AS _from0
        FROM CodeFirstDatabase.PublicInstitutionEstimate_ActivityAUBU AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_FounderAUBUExpense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView593()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3851);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_FounderAUBUExpense\r");
            viewString.Append("\n        [Tests.PublicInstitutionEstimate_FounderAUBUExpense](T1.[PublicInstitut");
            viewString.Append("ionEstimate_FounderAUBUExpense.Id], T1.[PublicInstitutionEstimate_FounderAUBUExp");
            viewString.Append("ense.IdOwner], T1.[PublicInstitutionEstimate_FounderAUBUExpense.IdMaster], T1.[P");
            viewString.Append("ublicInstitutionEstimate_FounderAUBUExpense.IdExpenseObligationType], T1.[Public");
            viewString.Append("InstitutionEstimate_FounderAUBUExpense.IdFinanceSource], T1.[PublicInstitutionEs");
            viewString.Append("timate_FounderAUBUExpense.IdKFO], T1.[PublicInstitutionEstimate_FounderAUBUExpen");
            viewString.Append("se.IdKVSR], T1.[PublicInstitutionEstimate_FounderAUBUExpense.IdRZPR], T1.[Public");
            viewString.Append("InstitutionEstimate_FounderAUBUExpense.IdKCSR], T1.[PublicInstitutionEstimate_Fo");
            viewString.Append("underAUBUExpense.IdKVR], T1.[PublicInstitutionEstimate_FounderAUBUExpense.IdKOSG");
            viewString.Append("U], T1.[PublicInstitutionEstimate_FounderAUBUExpense.IdDFK], T1.[PublicInstituti");
            viewString.Append("onEstimate_FounderAUBUExpense.IdDKR], T1.[PublicInstitutionEstimate_FounderAUBUE");
            viewString.Append("xpense.IdDEK], T1.[PublicInstitutionEstimate_FounderAUBUExpense.IsAUBU], T1.[Pub");
            viewString.Append("licInstitutionEstimate_FounderAUBUExpense.OFG], T1.[PublicInstitutionEstimate_Fo");
            viewString.Append("underAUBUExpense.PFG1], T1.[PublicInstitutionEstimate_FounderAUBUExpense.PFG2], ");
            viewString.Append("T1.[PublicInstitutionEstimate_FounderAUBUExpense.IdAuthorityOfExpenseObligation]");
            viewString.Append(", T1.[PublicInstitutionEstimate_FounderAUBUExpense.AdditionalOFG], T1.[PublicIns");
            viewString.Append("titutionEstimate_FounderAUBUExpense.AdditionalPFG1], T1.[PublicInstitutionEstima");
            viewString.Append("te_FounderAUBUExpense.AdditionalPFG2], T1.[PublicInstitutionEstimate_FounderAUBU");
            viewString.Append("Expense.IdBranchCode], T1.[PublicInstitutionEstimate_FounderAUBUExpense.IdCodeSu");
            viewString.Append("bsidy])\r\n    FROM (\r\n        SELECT \r\n            T.id AS [PublicInstitutionEsti");
            viewString.Append("mate_FounderAUBUExpense.Id], \r\n            T.idOwner AS [PublicInstitutionEstima");
            viewString.Append("te_FounderAUBUExpense.IdOwner], \r\n            T.idMaster AS [PublicInstitutionEs");
            viewString.Append("timate_FounderAUBUExpense.IdMaster], \r\n            T.idExpenseObligationType AS ");
            viewString.Append("[PublicInstitutionEstimate_FounderAUBUExpense.IdExpenseObligationType], \r\n      ");
            viewString.Append("      T.idFinanceSource AS [PublicInstitutionEstimate_FounderAUBUExpense.IdFinan");
            viewString.Append("ceSource], \r\n            T.idKFO AS [PublicInstitutionEstimate_FounderAUBUExpens");
            viewString.Append("e.IdKFO], \r\n            T.idKVSR AS [PublicInstitutionEstimate_FounderAUBUExpens");
            viewString.Append("e.IdKVSR], \r\n            T.idRZPR AS [PublicInstitutionEstimate_FounderAUBUExpen");
            viewString.Append("se.IdRZPR], \r\n            T.idKCSR AS [PublicInstitutionEstimate_FounderAUBUExpe");
            viewString.Append("nse.IdKCSR], \r\n            T.idKVR AS [PublicInstitutionEstimate_FounderAUBUExpe");
            viewString.Append("nse.IdKVR], \r\n            T.idKOSGU AS [PublicInstitutionEstimate_FounderAUBUExp");
            viewString.Append("ense.IdKOSGU], \r\n            T.idDFK AS [PublicInstitutionEstimate_FounderAUBUEx");
            viewString.Append("pense.IdDFK], \r\n            T.idDKR AS [PublicInstitutionEstimate_FounderAUBUExp");
            viewString.Append("ense.IdDKR], \r\n            T.idDEK AS [PublicInstitutionEstimate_FounderAUBUExpe");
            viewString.Append("nse.IdDEK], \r\n            T.isAUBU AS [PublicInstitutionEstimate_FounderAUBUExpe");
            viewString.Append("nse.IsAUBU], \r\n            T.OFG AS [PublicInstitutionEstimate_FounderAUBUExpens");
            viewString.Append("e.OFG], \r\n            T.PFG1 AS [PublicInstitutionEstimate_FounderAUBUExpense.PF");
            viewString.Append("G1], \r\n            T.PFG2 AS [PublicInstitutionEstimate_FounderAUBUExpense.PFG2]");
            viewString.Append(", \r\n            T.idAuthorityOfExpenseObligation AS [PublicInstitutionEstimate_F");
            viewString.Append("ounderAUBUExpense.IdAuthorityOfExpenseObligation], \r\n            T.AdditionalOFG");
            viewString.Append(" AS [PublicInstitutionEstimate_FounderAUBUExpense.AdditionalOFG], \r\n            ");
            viewString.Append("T.AdditionalPFG1 AS [PublicInstitutionEstimate_FounderAUBUExpense.AdditionalPFG1");
            viewString.Append("], \r\n            T.AdditionalPFG2 AS [PublicInstitutionEstimate_FounderAUBUExpen");
            viewString.Append("se.AdditionalPFG2], \r\n            T.idBranchCode AS [PublicInstitutionEstimate_F");
            viewString.Append("ounderAUBUExpense.IdBranchCode], \r\n            T.idCodeSubsidy AS [PublicInstitu");
            viewString.Append("tionEstimate_FounderAUBUExpense.IdCodeSubsidy], \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM CodeFirstDatabase.PublicInstitutionEstimate_FounderAUBUExpense AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_FounderAUBUExpense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView594()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4159);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PublicInstitutionEstimate_AloneAndBudgetInsti");
            viewString.Append("tutionExpense\r\n        [Tests.PublicInstitutionEstimate_AloneAndBudgetInstitutio");
            viewString.Append("nExpense](T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.Id], T1");
            viewString.Append(".[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdOwner], T1.[Publi");
            viewString.Append("cInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdMaster], T1.[PublicInsti");
            viewString.Append("tutionEstimate_AloneAndBudgetInstitutionExpense.IdExpenseObligationType], T1.[Pu");
            viewString.Append("blicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdFinanceSource], T1.[P");
            viewString.Append("ublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdKFO], T1.[PublicInst");
            viewString.Append("itutionEstimate_AloneAndBudgetInstitutionExpense.IdKVSR], T1.[PublicInstitutionE");
            viewString.Append("stimate_AloneAndBudgetInstitutionExpense.IdRZPR], T1.[PublicInstitutionEstimate_");
            viewString.Append("AloneAndBudgetInstitutionExpense.IdKCSR], T1.[PublicInstitutionEstimate_AloneAnd");
            viewString.Append("BudgetInstitutionExpense.IdKVR], T1.[PublicInstitutionEstimate_AloneAndBudgetIns");
            viewString.Append("titutionExpense.IdKOSGU], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutio");
            viewString.Append("nExpense.IdDFK], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.");
            viewString.Append("IdDKR], T1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdDEK], T");
            viewString.Append("1.[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdCodeSubsidy], T1");
            viewString.Append(".[PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.OFG], T1.[PublicIns");
            viewString.Append("titutionEstimate_AloneAndBudgetInstitutionExpense.PFG1], T1.[PublicInstitutionEs");
            viewString.Append("timate_AloneAndBudgetInstitutionExpense.PFG2], T1.[PublicInstitutionEstimate_Alo");
            viewString.Append("neAndBudgetInstitutionExpense.IdBranchCode], T1.[PublicInstitutionEstimate_Alone");
            viewString.Append("AndBudgetInstitutionExpense.AdditionalOFG], T1.[PublicInstitutionEstimate_AloneA");
            viewString.Append("ndBudgetInstitutionExpense.AdditionalPFG1], T1.[PublicInstitutionEstimate_AloneA");
            viewString.Append("ndBudgetInstitutionExpense.AdditionalPFG2])\r\n    FROM (\r\n        SELECT \r\n      ");
            viewString.Append("      T.id AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.Id], \r");
            viewString.Append("\n            T.idOwner AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionEx");
            viewString.Append("pense.IdOwner], \r\n            T.idMaster AS [PublicInstitutionEstimate_AloneAndB");
            viewString.Append("udgetInstitutionExpense.IdMaster], \r\n            T.idExpenseObligationType AS [P");
            viewString.Append("ublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdExpenseObligationTyp");
            viewString.Append("e], \r\n            T.idFinanceSource AS [PublicInstitutionEstimate_AloneAndBudget");
            viewString.Append("InstitutionExpense.IdFinanceSource], \r\n            T.idKFO AS [PublicInstitution");
            viewString.Append("Estimate_AloneAndBudgetInstitutionExpense.IdKFO], \r\n            T.idKVSR AS [Pub");
            viewString.Append("licInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdKVSR], \r\n            T");
            viewString.Append(".idRZPR AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdRZPR], ");
            viewString.Append("\r\n            T.idKCSR AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionEx");
            viewString.Append("pense.IdKCSR], \r\n            T.idKVR AS [PublicInstitutionEstimate_AloneAndBudge");
            viewString.Append("tInstitutionExpense.IdKVR], \r\n            T.idKOSGU AS [PublicInstitutionEstimat");
            viewString.Append("e_AloneAndBudgetInstitutionExpense.IdKOSGU], \r\n            T.idDFK AS [PublicIns");
            viewString.Append("titutionEstimate_AloneAndBudgetInstitutionExpense.IdDFK], \r\n            T.idDKR ");
            viewString.Append("AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdDKR], \r\n       ");
            viewString.Append("     T.idDEK AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdDE");
            viewString.Append("K], \r\n            T.idCodeSubsidy AS [PublicInstitutionEstimate_AloneAndBudgetIn");
            viewString.Append("stitutionExpense.IdCodeSubsidy], \r\n            T.OFG AS [PublicInstitutionEstima");
            viewString.Append("te_AloneAndBudgetInstitutionExpense.OFG], \r\n            T.PFG1 AS [PublicInstitu");
            viewString.Append("tionEstimate_AloneAndBudgetInstitutionExpense.PFG1], \r\n            T.PFG2 AS [Pu");
            viewString.Append("blicInstitutionEstimate_AloneAndBudgetInstitutionExpense.PFG2], \r\n            T.");
            viewString.Append("idBranchCode AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense.IdBr");
            viewString.Append("anchCode], \r\n            T.additionalOFG AS [PublicInstitutionEstimate_AloneAndB");
            viewString.Append("udgetInstitutionExpense.AdditionalOFG], \r\n            T.additionalPFG1 AS [Publi");
            viewString.Append("cInstitutionEstimate_AloneAndBudgetInstitutionExpense.AdditionalPFG1], \r\n       ");
            viewString.Append("     T.additionalPFG2 AS [PublicInstitutionEstimate_AloneAndBudgetInstitutionExp");
            viewString.Append("ense.AdditionalPFG2], \r\n            True AS _from0\r\n        FROM CodeFirstDataba");
            viewString.Append("se.PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicInstitutionEstimate_AloneAndBudgetInstitutionExpense", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.UserBandWidth
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView595()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.UserBandWidth", @"
    SELECT VALUE -- Constructing UserBandWidth
        [Tests.UserBandWidth](T1.UserBandWidth_Id, T1.UserBandWidth_IdUser, T1.UserBandWidth_Ping, T1.UserBandWidth_DownloadSpeed, T1.UserBandWidth_Date)
    FROM (
        SELECT 
            T.id AS UserBandWidth_Id, 
            T.idUser AS UserBandWidth_IdUser, 
            T.Ping AS UserBandWidth_Ping, 
            T.DownloadSpeed AS UserBandWidth_DownloadSpeed, 
            T.Date AS UserBandWidth_Date, 
            True AS _from0
        FROM CodeFirstDatabase.UserBandWidth AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Control_Exceptions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView596()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Control_Exceptions", @"
    SELECT VALUE -- Constructing Control_Exceptions
        [Tests.Control_Exceptions](T1.[Control_Exceptions.Id], T1.[Control_Exceptions.IdOwner], T1.[Control_Exceptions.IdPublicLegalFormation], T1.[Control_Exceptions.IdBudget], T1.[Control_Exceptions.Enabled], T1.[Control_Exceptions.Skippable])
    FROM (
        SELECT 
            T.id AS [Control_Exceptions.Id], 
            T.idOwner AS [Control_Exceptions.IdOwner], 
            T.idPublicLegalFormation AS [Control_Exceptions.IdPublicLegalFormation], 
            T.idBudget AS [Control_Exceptions.IdBudget], 
            T.Enabled AS [Control_Exceptions.Enabled], 
            T.Skippable AS [Control_Exceptions.Skippable], 
            True AS _from0
        FROM CodeFirstDatabase.Control_Exceptions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Control
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView597()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Control", @"
    SELECT VALUE -- Constructing Control
        [Tests.Control](T1.Control_Id, T1.Control_Enabled, T1.Control_Skippable, T1.Control_Name, T1.Control_Caption, T1.Control_UNK, T1.Control_IdEntity, T1.Control_Managed)
    FROM (
        SELECT 
            T.id AS Control_Id, 
            T.Enabled AS Control_Enabled, 
            T.Skippable AS Control_Skippable, 
            T.Name AS Control_Name, 
            T.Caption AS Control_Caption, 
            T.UNK AS Control_UNK, 
            T.idEntity AS Control_IdEntity, 
            T.Managed AS Control_Managed, 
            True AS _from0
        FROM CodeFirstDatabase.Control AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Licenses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView598()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Licenses", @"
    SELECT VALUE -- Constructing Licenses
        [Tests.License](T1.License_Id, T1.License_Caption, T1.License_Key, T1.License_UserCount, T1.License_EndDate, T1.License_PublicLegalFormation, T1.License_IdRefStatus)
    FROM (
        SELECT 
            T.id AS License_Id, 
            T.Caption AS License_Caption, 
            T.[Key] AS License_Key, 
            T.UserCount AS License_UserCount, 
            T.EndDate AS License_EndDate, 
            T.PublicLegalFormation AS License_PublicLegalFormation, 
            T.IdRefStatus AS License_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.License AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.StartedOperation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView599()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.StartedOperation", @"
    SELECT VALUE -- Constructing StartedOperation
        [Tests.StartedOperation](T1.StartedOperation_Id, T1.StartedOperation_IdRegistratorEntity, T1.StartedOperation_IdEntityOperation, T1.StartedOperation_IdUser, T1.StartedOperation_IdRegistrator, T1.StartedOperation_Date)
    FROM (
        SELECT 
            T.id AS StartedOperation_Id, 
            T.idRegistratorEntity AS StartedOperation_IdRegistratorEntity, 
            T.idEntityOperation AS StartedOperation_IdEntityOperation, 
            T.idUser AS StartedOperation_IdUser, 
            T.idRegistrator AS StartedOperation_IdRegistrator, 
            T.Date AS StartedOperation_Date, 
            True AS _from0
        FROM CodeFirstDatabase.StartedOperation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.OrganizationRightExtension
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView600()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.OrganizationRightExtension", @"
    SELECT VALUE -- Constructing OrganizationRightExtension
        [Tests.OrganizationRightExtension](T1.OrganizationRightExtension_Id, T1.OrganizationRightExtension_Description, T1.OrganizationRightExtension_IdKind, T1.OrganizationRightExtension_SqlTemplate)
    FROM (
        SELECT 
            T.id AS OrganizationRightExtension_Id, 
            T.Description AS OrganizationRightExtension_Description, 
            T.idKind AS OrganizationRightExtension_IdKind, 
            T.SqlTemplate AS OrganizationRightExtension_SqlTemplate, 
            True AS _from0
        FROM CodeFirstDatabase.OrganizationRightExtension AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FormElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView601()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FormElement", @"
    SELECT VALUE -- Constructing FormElement
        [Tests.FormElement](T1.FormElement_Id, T1.FormElement_IdParent, T1.FormElement_Name, T1.FormElement_IdOwner, T1.FormElement_IdEntityField, T1.FormElement_Caption, T1.FormElement_IdInterfaceControl, T1.FormElement_IdEntityFieldType, T1.FormElement_IdCalculatedFieldType, T1.FormElement_Formula, T1.FormElement_Properties, T1.FormElement_Order)
    FROM (
        SELECT 
            T.id AS FormElement_Id, 
            T.idParent AS FormElement_IdParent, 
            T.Name AS FormElement_Name, 
            T.idOwner AS FormElement_IdOwner, 
            T.idEntityField AS FormElement_IdEntityField, 
            T.Caption AS FormElement_Caption, 
            T.idInterfaceControl AS FormElement_IdInterfaceControl, 
            T.idEntityFieldType AS FormElement_IdEntityFieldType, 
            T.idCalculatedFieldType AS FormElement_IdCalculatedFieldType, 
            T.Formula AS FormElement_Formula, 
            T.Properties AS FormElement_Properties, 
            T.[Order] AS FormElement_Order, 
            True AS _from0
        FROM CodeFirstDatabase.FormElement AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.InterfaceControl
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView602()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterfaceControl", @"
    SELECT VALUE -- Constructing InterfaceControl
        [Tests.InterfaceControl](T1.InterfaceControl_Id, T1.InterfaceControl_Caption, T1.InterfaceControl_Description, T1.InterfaceControl_ComponentName, T1.InterfaceControl_Alias, T1.InterfaceControl_DefaultProperties, T1.InterfaceControl_LabelProperty)
    FROM (
        SELECT 
            T.Id AS InterfaceControl_Id, 
            T.Caption AS InterfaceControl_Caption, 
            T.Description AS InterfaceControl_Description, 
            T.ComponentName AS InterfaceControl_ComponentName, 
            T.Alias AS InterfaceControl_Alias, 
            T.DefaultProperties AS InterfaceControl_DefaultProperties, 
            T.LabelProperty AS InterfaceControl_LabelProperty, 
            True AS _from0
        FROM CodeFirstDatabase.InterfaceControl AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Form
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView603()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Form", @"
    SELECT VALUE -- Constructing Form
        [Tests.Form](T1.Form_Id, T1.Form_Name, T1.Form_Caption, T1.Form_IdEntity, T1.Form_IdHierarchyViewField)
    FROM (
        SELECT 
            T.id AS Form_Id, 
            T.Name AS Form_Name, 
            T.Caption AS Form_Caption, 
            T.idEntity AS Form_IdEntity, 
            T.idHierarchyViewField AS Form_IdHierarchyViewField, 
            True AS _from0
        FROM CodeFirstDatabase.Form AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.SerializedEntityItem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView604()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.SerializedEntityItem", @"
    SELECT VALUE -- Constructing SerializedEntityItem
        [Tests.SerializedEntityItem](T1.SerializedEntityItem_Id, T1.SerializedEntityItem_Data, T1.SerializedEntityItem_IdTool, T1.SerializedEntityItem_IdToolEntity)
    FROM (
        SELECT 
            T.id AS SerializedEntityItem_Id, 
            T.Data AS SerializedEntityItem_Data, 
            T.idTool AS SerializedEntityItem_IdTool, 
            T.idToolEntity AS SerializedEntityItem_IdToolEntity, 
            True AS _from0
        FROM CodeFirstDatabase.SerializedEntityItem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.EntitySetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView605()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EntitySetting", @"
    SELECT VALUE -- Constructing EntitySetting
        [Tests.EntitySetting](T1.EntitySetting_Id, T1.EntitySetting_IdEntity, T1.EntitySetting_IdItemForm, T1.EntitySetting_IdListForm, T1.EntitySetting_IdSelectionForm, T1.EntitySetting_AlwaysShowLinearly, T1.[EntitySetting.IdEntityField_Hierarchy], T1.EntitySetting_ClassSelectionCaption)
    FROM (
        SELECT 
            T.id AS EntitySetting_Id, 
            T.idEntity AS EntitySetting_IdEntity, 
            T.idItemForm AS EntitySetting_IdItemForm, 
            T.idListForm AS EntitySetting_IdListForm, 
            T.idSelectionForm AS EntitySetting_IdSelectionForm, 
            T.AlwaysShowLinearly AS EntitySetting_AlwaysShowLinearly, 
            T.idEntityField_Hierarchy AS [EntitySetting.IdEntityField_Hierarchy], 
            T.ClassSelectionCaption AS EntitySetting_ClassSelectionCaption, 
            True AS _from0
        FROM CodeFirstDatabase.EntitySetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ItemsCaptionsForNavigationPanel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView606()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ItemsCaptionsForNavigationPanel", @"
    SELECT VALUE -- Constructing ItemsCaptionsForNavigationPanel
        [Tests.ItemsCaptionsForNavigationPanel](T1.ItemsCaptionsForNavigationPanel_Id, T1.ItemsCaptionsForNavigationPanel_Comment, T1.ItemsCaptionsForNavigationPanel_Caption, T1.ItemsCaptionsForNavigationPanel_IdEntitySetting)
    FROM (
        SELECT 
            T.id AS ItemsCaptionsForNavigationPanel_Id, 
            T.Comment AS ItemsCaptionsForNavigationPanel_Comment, 
            T.Caption AS ItemsCaptionsForNavigationPanel_Caption, 
            T.idEntitySetting AS ItemsCaptionsForNavigationPanel_IdEntitySetting, 
            True AS _from0
        FROM CodeFirstDatabase.ItemsCaptionsForNavigationPanel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.EntityFieldSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView607()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EntityFieldSetting", @"
    SELECT VALUE -- Constructing EntityFieldSetting
        [Tests.EntityFieldSetting](T1.EntityFieldSetting_Id, T1.EntityFieldSetting_IgnoreFilterByPublicLegalFormation, T1.EntityFieldSetting_IgnoreFilterByBudget, T1.EntityFieldSetting_IgnoreFilterByVersion, T1.EntityFieldSetting_IdAggregateFunction, T1.EntityFieldSetting_IdEntityField, T1.EntityFieldSetting_IgnoreOrganizationRights, T1.[EntityFieldSetting.IdEntity_Owner])
    FROM (
        SELECT 
            T.id AS EntityFieldSetting_Id, 
            T.IgnoreFilterByPublicLegalFormation AS EntityFieldSetting_IgnoreFilterByPublicLegalFormation, 
            T.IgnoreFilterByBudget AS EntityFieldSetting_IgnoreFilterByBudget, 
            T.IgnoreFilterByVersion AS EntityFieldSetting_IgnoreFilterByVersion, 
            T.idAggregateFunction AS EntityFieldSetting_IdAggregateFunction, 
            T.idEntityField AS EntityFieldSetting_IdEntityField, 
            T.IgnoreOrganizationRights AS EntityFieldSetting_IgnoreOrganizationRights, 
            T.idEntity_Owner AS [EntityFieldSetting.IdEntity_Owner], 
            True AS _from0
        FROM CodeFirstDatabase.EntityFieldSetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateImport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView608()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateImport", @"
    SELECT VALUE -- Constructing TemplateImport
        [Tests.TemplateImport](T1.TemplateImport_Id, T1.TemplateImport_Caption)
    FROM (
        SELECT 
            T.id AS TemplateImport_Id, 
            T.Caption AS TemplateImport_Caption, 
            True AS _from0
        FROM CodeFirstDatabase.TemplateImport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateImportXLS
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView609()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateImportXLS", @"
    SELECT VALUE -- Constructing TemplateImportXLS
        [Tests.TemplateImportXLS](T1.TemplateImportXLS_Id, T1.TemplateImportXLS_IdOwner, T1.TemplateImportXLS_Caption, T1.TemplateImportXLS_IdEntity, T1.TemplateImportXLS_IdImportType, T1.TemplateImportXLS_IsPerformSingleTransaction, T1.TemplateImportXLS_IsIgnoreSoftControl, T1.TemplateImportXLS_Description, T1.TemplateImportXLS_IdAccessGroup, T1.TemplateImportXLS_IdExecImportMode, T1.TemplateImportXLS_IdRefStatus)
    FROM (
        SELECT 
            T.id AS TemplateImportXLS_Id, 
            T.idOwner AS TemplateImportXLS_IdOwner, 
            T.Caption AS TemplateImportXLS_Caption, 
            T.idEntity AS TemplateImportXLS_IdEntity, 
            T.idImportType AS TemplateImportXLS_IdImportType, 
            T.IsPerformSingleTransaction AS TemplateImportXLS_IsPerformSingleTransaction, 
            T.IsIgnoreSoftControl AS TemplateImportXLS_IsIgnoreSoftControl, 
            T.Description AS TemplateImportXLS_Description, 
            T.idAccessGroup AS TemplateImportXLS_IdAccessGroup, 
            T.idExecImportMode AS TemplateImportXLS_IdExecImportMode, 
            T.idRefStatus AS TemplateImportXLS_IdRefStatus, 
            True AS _from0
        FROM CodeFirstDatabase.TemplateImportXLS AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateImportXLS_FieldsMap
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView610()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateImportXLS_FieldsMap", @"
    SELECT VALUE -- Constructing TemplateImportXLS_FieldsMap
        [Tests.TemplateImportXLS_FieldsMap](T1.[TemplateImportXLS_FieldsMap.Id], T1.[TemplateImportXLS_FieldsMap.IdOwner], T1.[TemplateImportXLS_FieldsMap.IdEntityField], T1.[TemplateImportXLS_FieldsMap.NameColumn], T1.[TemplateImportXLS_FieldsMap.ValueColumn], T1.[TemplateImportXLS_FieldsMap.MaskFinding], T1.[TemplateImportXLS_FieldsMap.MaskReplacing])
    FROM (
        SELECT 
            T.id AS [TemplateImportXLS_FieldsMap.Id], 
            T.idOwner AS [TemplateImportXLS_FieldsMap.IdOwner], 
            T.idEntityField AS [TemplateImportXLS_FieldsMap.IdEntityField], 
            T.NameColumn AS [TemplateImportXLS_FieldsMap.NameColumn], 
            T.ValueColumn AS [TemplateImportXLS_FieldsMap.ValueColumn], 
            T.MaskFinding AS [TemplateImportXLS_FieldsMap.MaskFinding], 
            T.MaskReplacing AS [TemplateImportXLS_FieldsMap.MaskReplacing], 
            True AS _from0
        FROM CodeFirstDatabase.TemplateImportXLS_FieldsMap AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateImportXLS_KeyField
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView611()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateImportXLS_KeyField", @"
    SELECT VALUE -- Constructing TemplateImportXLS_KeyField
        [Tests.TemplateImportXLS_KeyField](T1.[TemplateImportXLS_KeyField.Id], T1.[TemplateImportXLS_KeyField.IdOwner], T1.[TemplateImportXLS_KeyField.IdEntityField])
    FROM (
        SELECT 
            T.id AS [TemplateImportXLS_KeyField.Id], 
            T.idOwner AS [TemplateImportXLS_KeyField.IdOwner], 
            T.idEntityField AS [TemplateImportXLS_KeyField.IdEntityField], 
            True AS _from0
        FROM CodeFirstDatabase.TemplateImportXLS_KeyField AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateExport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView612()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateExport", @"
    SELECT VALUE -- Constructing TemplateExport
        [Tests.TemplateExport](T1.TemplateExport_Id, T1.TemplateExport_Caption, T1.TemplateExport_IdSelectionType, T1.TemplateExport_EntitiesSql, T1.TemplateExport_LinkedEntitiesSql, T1.TemplateExport_IdLinkedSelectionType)
    FROM (
        SELECT 
            T.id AS TemplateExport_Id, 
            T.Caption AS TemplateExport_Caption, 
            T.idSelectionType AS TemplateExport_IdSelectionType, 
            T.EntitiesSql AS TemplateExport_EntitiesSql, 
            T.LinkedEntitiesSql AS TemplateExport_LinkedEntitiesSql, 
            T.idLinkedSelectionType AS TemplateExport_IdLinkedSelectionType, 
            True AS _from0
        FROM CodeFirstDatabase.TemplateExport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateExport_Entity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView613()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateExport_Entity", @"
    SELECT VALUE -- Constructing TemplateExport_Entity
        [Tests.TemplateExport_Entity](T1.[TemplateExport_Entity.Id], T1.[TemplateExport_Entity.IdOwner], T1.[TemplateExport_Entity.IdEntity], T1.[TemplateExport_Entity.Sql])
    FROM (
        SELECT 
            T.id AS [TemplateExport_Entity.Id], 
            T.idOwner AS [TemplateExport_Entity.IdOwner], 
            T.idEntity AS [TemplateExport_Entity.IdEntity], 
            T.Sql AS [TemplateExport_Entity.Sql], 
            True AS _from0
        FROM CodeFirstDatabase.TemplateExport_Entity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.User_Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView614()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.User_Roles", @"
    SELECT VALUE -- Constructing User_Roles
        [Tests.User_Roles](T3.[User_Roles.User_Roles_Source], T3.[User_Roles.User_Roles_Target])
    FROM (
        SELECT -- Constructing User_Roles_Source
            CreateRef(DataContext.User, row(T2.[User_Roles.User_Roles_Source.Id]), [Tests.User]) AS [User_Roles.User_Roles_Source], 
            T2.[User_Roles.User_Roles_Target]
        FROM (
            SELECT -- Constructing User_Roles_Target
                T1.[User_Roles.User_Roles_Source.Id], 
                CreateRef(DataContext.Role, row(T1.[User_Roles.User_Roles_Target.Id]), [Tests.Role]) AS [User_Roles.User_Roles_Target]
            FROM (
                SELECT 
                    T.idUser AS [User_Roles.User_Roles_Source.Id], 
                    T.idRole AS [User_Roles.User_Roles_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.UserRole AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.EntityOperation_OriginalStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView615()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EntityOperation_OriginalStatus", "\r\n    SELECT VALUE -- Constructing EntityOperation_OriginalStatus\r\n        [Tests" +
                    ".EntityOperation_OriginalStatus](T3.[EntityOperation_OriginalStatus.EntityOperat" +
                    "ion_OriginalStatus_Source], T3.[EntityOperation_OriginalStatus.EntityOperation_O" +
                    "riginalStatus_Target])\r\n    FROM (\r\n        SELECT -- Constructing EntityOperati" +
                    "on_OriginalStatus_Source\r\n            CreateRef(DataContext.EntityOperation, row" +
                    "(T2.[EntityOperation_OriginalStatus.EntityOperation_OriginalStatus_Source.Id]), " +
                    "[Tests.EntityOperation]) AS [EntityOperation_OriginalStatus.EntityOperation_Orig" +
                    "inalStatus_Source], \r\n            T2.[EntityOperation_OriginalStatus.EntityOpera" +
                    "tion_OriginalStatus_Target]\r\n        FROM (\r\n            SELECT -- Constructing " +
                    "EntityOperation_OriginalStatus_Target\r\n                T1.[EntityOperation_Origi" +
                    "nalStatus.EntityOperation_OriginalStatus_Source.Id], \r\n                CreateRef" +
                    "(DataContext.DocStatus, row(T1.[EntityOperation_OriginalStatus.EntityOperation_O" +
                    "riginalStatus_Target.Id]), [Tests.DocStatus]) AS [EntityOperation_OriginalStatus" +
                    ".EntityOperation_OriginalStatus_Target]\r\n            FROM (\r\n                SEL" +
                    "ECT \r\n                    T.idOperation AS [EntityOperation_OriginalStatus.Entit" +
                    "yOperation_OriginalStatus_Source.Id], \r\n                    T.idDocStatus AS [En" +
                    "tityOperation_OriginalStatus.EntityOperation_OriginalStatus_Target.Id], \r\n      " +
                    "              True AS _from0\r\n                FROM CodeFirstDatabase.EntityOpera" +
                    "tionDocStatus AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.EntityOperation_FinalStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView616()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EntityOperation_FinalStatus", @"
    SELECT VALUE -- Constructing EntityOperation_FinalStatus
        [Tests.EntityOperation_FinalStatus](T3.[EntityOperation_FinalStatus.EntityOperation_FinalStatus_Source], T3.[EntityOperation_FinalStatus.EntityOperation_FinalStatus_Target])
    FROM (
        SELECT -- Constructing EntityOperation_FinalStatus_Source
            CreateRef(DataContext.EntityOperation, row(T2.[EntityOperation_FinalStatus.EntityOperation_FinalStatus_Source.Id]), [Tests.EntityOperation]) AS [EntityOperation_FinalStatus.EntityOperation_FinalStatus_Source], 
            T2.[EntityOperation_FinalStatus.EntityOperation_FinalStatus_Target]
        FROM (
            SELECT -- Constructing EntityOperation_FinalStatus_Target
                T1.[EntityOperation_FinalStatus.EntityOperation_FinalStatus_Source.Id], 
                CreateRef(DataContext.DocStatus, row(T1.[EntityOperation_FinalStatus.EntityOperation_FinalStatus_Target.Id]), [Tests.DocStatus]) AS [EntityOperation_FinalStatus.EntityOperation_FinalStatus_Target]
            FROM (
                SELECT 
                    T.idOperation AS [EntityOperation_FinalStatus.EntityOperation_FinalStatus_Source.Id], 
                    T.idDocStatus AS [EntityOperation_FinalStatus.EntityOperation_FinalStatus_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.EntityOperationDocStatus1 AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.EntityOperation_EditableFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView617()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.EntityOperation_EditableFields", "\r\n    SELECT VALUE -- Constructing EntityOperation_EditableFields\r\n        [Tests" +
                    ".EntityOperation_EditableFields](T3.[EntityOperation_EditableFields.EntityOperat" +
                    "ion_EditableFields_Source], T3.[EntityOperation_EditableFields.EntityOperation_E" +
                    "ditableFields_Target])\r\n    FROM (\r\n        SELECT -- Constructing EntityOperati" +
                    "on_EditableFields_Source\r\n            CreateRef(DataContext.EntityOperation, row" +
                    "(T2.[EntityOperation_EditableFields.EntityOperation_EditableFields_Source.Id]), " +
                    "[Tests.EntityOperation]) AS [EntityOperation_EditableFields.EntityOperation_Edit" +
                    "ableFields_Source], \r\n            T2.[EntityOperation_EditableFields.EntityOpera" +
                    "tion_EditableFields_Target]\r\n        FROM (\r\n            SELECT -- Constructing " +
                    "EntityOperation_EditableFields_Target\r\n                T1.[EntityOperation_Edita" +
                    "bleFields.EntityOperation_EditableFields_Source.Id], \r\n                CreateRef" +
                    "(DataContext.EntityField, row(T1.[EntityOperation_EditableFields.EntityOperation" +
                    "_EditableFields_Target.Id]), [Tests.EntityField]) AS [EntityOperation_EditableFi" +
                    "elds.EntityOperation_EditableFields_Target]\r\n            FROM (\r\n               " +
                    " SELECT \r\n                    T.idEntityOperation AS [EntityOperation_EditableFi" +
                    "elds.EntityOperation_EditableFields_Source.Id], \r\n                    T.idEntity" +
                    "Field AS [EntityOperation_EditableFields.EntityOperation_EditableFields_Target.I" +
                    "d], \r\n                    True AS _from0\r\n                FROM CodeFirstDatabase" +
                    ".EntityOperationEntityField AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS" +
                    " T3");
        }
        
        /// <Summary>
        /// return view for DataContext.CalculationFormula_IdIndicatorOfCalculationFormula
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView618()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2052);
            viewString.Append("\r\n    SELECT VALUE -- Constructing CalculationFormula_IdIndicatorOfCalculationFo");
            viewString.Append("rmula\r\n        [Tests.CalculationFormula_IdIndicatorOfCalculationFormula](T3.[Ca");
            viewString.Append("lculationFormula_IdIndicatorOfCalculationFormula.CalculationFormula_IdIndicatorO");
            viewString.Append("fCalculationFormula_Source], T3.[CalculationFormula_IdIndicatorOfCalculationForm");
            viewString.Append("ula.CalculationFormula_IdIndicatorOfCalculationFormula_Target])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT -- Constructing CalculationFormula_IdIndicatorOfCalculationFormula_S");
            viewString.Append("ource\r\n            CreateRef(DataContext.CalculationFormula, row(T2.[Calculation");
            viewString.Append("Formula_IdIndicatorOfCalculationFormula.CalculationFormula_IdIndicatorOfCalculat");
            viewString.Append("ionFormula_Source.Id]), [Tests.CalculationFormula]) AS [CalculationFormula_IdInd");
            viewString.Append("icatorOfCalculationFormula.CalculationFormula_IdIndicatorOfCalculationFormula_So");
            viewString.Append("urce], \r\n            T2.[CalculationFormula_IdIndicatorOfCalculationFormula.Calc");
            viewString.Append("ulationFormula_IdIndicatorOfCalculationFormula_Target]\r\n        FROM (\r\n        ");
            viewString.Append("    SELECT -- Constructing CalculationFormula_IdIndicatorOfCalculationFormula_Ta");
            viewString.Append("rget\r\n                T1.[CalculationFormula_IdIndicatorOfCalculationFormula.Cal");
            viewString.Append("culationFormula_IdIndicatorOfCalculationFormula_Source.Id], \r\n                Cr");
            viewString.Append("eateRef(DataContext.IndicatorCalculation, row(T1.[CalculationFormula_IdIndicator");
            viewString.Append("OfCalculationFormula.CalculationFormula_IdIndicatorOfCalculationFormula_Target.I");
            viewString.Append("d]), [Tests.IndicatorCalculation]) AS [CalculationFormula_IdIndicatorOfCalculati");
            viewString.Append("onFormula.CalculationFormula_IdIndicatorOfCalculationFormula_Target]\r\n          ");
            viewString.Append("  FROM (\r\n                SELECT \r\n                    T.idCalculationFormula AS");
            viewString.Append(" [CalculationFormula_IdIndicatorOfCalculationFormula.CalculationFormula_IdIndica");
            viewString.Append("torOfCalculationFormula_Source.Id], \r\n                    T.idIndicatorCalculati");
            viewString.Append("on AS [CalculationFormula_IdIndicatorOfCalculationFormula.CalculationFormula_IdI");
            viewString.Append("ndicatorOfCalculationFormula_Target.Id], \r\n                    True AS _from0\r\n ");
            viewString.Append("               FROM CodeFirstDatabase.CalculationFormulaIndicatorCalculation AS ");
            viewString.Append("T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.CalculationFormula_IdIndicatorOfCalculationFormula", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.CategoryContingent_Contingent_CategoryContingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView619()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.CategoryContingent_Contingent_CategoryContingent", "\r\n    SELECT VALUE -- Constructing CategoryContingent_Contingent_CategoryContinge" +
                    "nt\r\n        [Tests.CategoryContingent_Contingent_CategoryContingent](T3.[Categor" +
                    "yContingent_Contingent_CategoryContingent.CategoryContingent_Contingent_Category" +
                    "Contingent_Source], T3.[CategoryContingent_Contingent_CategoryContingent.Categor" +
                    "yContingent_Contingent_CategoryContingent_Target])\r\n    FROM (\r\n        SELECT -" +
                    "- Constructing CategoryContingent_Contingent_CategoryContingent_Source\r\n        " +
                    "    CreateRef(DataContext.CategoryContingent, row(T2.[CategoryContingent_Conting" +
                    "ent_CategoryContingent.CategoryContingent_Contingent_CategoryContingent_Source.I" +
                    "d]), [Tests.CategoryContingent]) AS [CategoryContingent_Contingent_CategoryConti" +
                    "ngent.CategoryContingent_Contingent_CategoryContingent_Source], \r\n            T2" +
                    ".[CategoryContingent_Contingent_CategoryContingent.CategoryContingent_Contingent" +
                    "_CategoryContingent_Target]\r\n        FROM (\r\n            SELECT -- Constructing " +
                    "CategoryContingent_Contingent_CategoryContingent_Target\r\n                T1.[Cat" +
                    "egoryContingent_Contingent_CategoryContingent.CategoryContingent_Contingent_Cate" +
                    "goryContingent_Source.Id], \r\n                CreateRef(DataContext.Contingent, r" +
                    "ow(T1.[CategoryContingent_Contingent_CategoryContingent.CategoryContingent_Conti" +
                    "ngent_CategoryContingent_Target.Id]), [Tests.Contingent]) AS [CategoryContingent" +
                    "_Contingent_CategoryContingent.CategoryContingent_Contingent_CategoryContingent_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idCa" +
                    "tegoryContingent AS [CategoryContingent_Contingent_CategoryContingent.CategoryCo" +
                    "ntingent_Contingent_CategoryContingent_Source.Id], \r\n                    T.idCon" +
                    "tingent AS [CategoryContingent_Contingent_CategoryContingent.CategoryContingent_" +
                    "Contingent_CategoryContingent_Target.Id], \r\n                    True AS _from0\r\n" +
                    "                FROM CodeFirstDatabase.CategoryContingentContingent AS T\r\n      " +
                    "      ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.Activity_Activity_SBP
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView620()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Activity_Activity_SBP", @"
    SELECT VALUE -- Constructing Activity_Activity_SBP
        [Tests.Activity_Activity_SBP](T3.[Activity_Activity_SBP.Activity_Activity_SBP_Source], T3.[Activity_Activity_SBP.Activity_Activity_SBP_Target])
    FROM (
        SELECT -- Constructing Activity_Activity_SBP_Source
            CreateRef(DataContext.Activity, row(T2.[Activity_Activity_SBP.Activity_Activity_SBP_Source.Id]), [Tests.Activity]) AS [Activity_Activity_SBP.Activity_Activity_SBP_Source], 
            T2.[Activity_Activity_SBP.Activity_Activity_SBP_Target]
        FROM (
            SELECT -- Constructing Activity_Activity_SBP_Target
                T1.[Activity_Activity_SBP.Activity_Activity_SBP_Source.Id], 
                CreateRef(DataContext.SBP, row(T1.[Activity_Activity_SBP.Activity_Activity_SBP_Target.Id]), [Tests.SBP]) AS [Activity_Activity_SBP.Activity_Activity_SBP_Target]
            FROM (
                SELECT 
                    T.idActivity AS [Activity_Activity_SBP.Activity_Activity_SBP_Source.Id], 
                    T.idSBP AS [Activity_Activity_SBP.Activity_Activity_SBP_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.ActivitySBP AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.Activity_Activity_Contingent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView621()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Activity_Activity_Contingent", @"
    SELECT VALUE -- Constructing Activity_Activity_Contingent
        [Tests.Activity_Activity_Contingent](T3.[Activity_Activity_Contingent.Activity_Activity_Contingent_Source], T3.[Activity_Activity_Contingent.Activity_Activity_Contingent_Target])
    FROM (
        SELECT -- Constructing Activity_Activity_Contingent_Source
            CreateRef(DataContext.Activity, row(T2.[Activity_Activity_Contingent.Activity_Activity_Contingent_Source.Id]), [Tests.Activity]) AS [Activity_Activity_Contingent.Activity_Activity_Contingent_Source], 
            T2.[Activity_Activity_Contingent.Activity_Activity_Contingent_Target]
        FROM (
            SELECT -- Constructing Activity_Activity_Contingent_Target
                T1.[Activity_Activity_Contingent.Activity_Activity_Contingent_Source.Id], 
                CreateRef(DataContext.Contingent, row(T1.[Activity_Activity_Contingent.Activity_Activity_Contingent_Target.Id]), [Tests.Contingent]) AS [Activity_Activity_Contingent.Activity_Activity_Contingent_Target]
            FROM (
                SELECT 
                    T.idActivity AS [Activity_Activity_Contingent.Activity_Activity_Contingent_Source.Id], 
                    T.idContingent AS [Activity_Activity_Contingent.Activity_Activity_Contingent_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.ActivityContingent AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ResourceMaintenanceOfTheStateProgram_FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView622()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2096);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ResourceMaintenanceOfTheStateProgram_FinanceS");
            viewString.Append("ource\r\n        [Tests.ResourceMaintenanceOfTheStateProgram_FinanceSource](T3.[Re");
            viewString.Append("sourceMaintenanceOfTheStateProgram_FinanceSource.ResourceMaintenanceOfTheStatePr");
            viewString.Append("ogram_FinanceSource_Source], T3.[ResourceMaintenanceOfTheStateProgram_FinanceSou");
            viewString.Append("rce.ResourceMaintenanceOfTheStateProgram_FinanceSource_Target])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT -- Constructing ResourceMaintenanceOfTheStateProgram_FinanceSource_S");
            viewString.Append("ource\r\n            CreateRef(DataContext.ResourceMaintenanceOfTheStateProgram, r");
            viewString.Append("ow(T2.[ResourceMaintenanceOfTheStateProgram_FinanceSource.ResourceMaintenanceOfT");
            viewString.Append("heStateProgram_FinanceSource_Source.Id]), [Tests.ResourceMaintenanceOfTheStatePr");
            viewString.Append("ogram]) AS [ResourceMaintenanceOfTheStateProgram_FinanceSource.ResourceMaintenan");
            viewString.Append("ceOfTheStateProgram_FinanceSource_Source], \r\n            T2.[ResourceMaintenance");
            viewString.Append("OfTheStateProgram_FinanceSource.ResourceMaintenanceOfTheStateProgram_FinanceSour");
            viewString.Append("ce_Target]\r\n        FROM (\r\n            SELECT -- Constructing ResourceMaintenan");
            viewString.Append("ceOfTheStateProgram_FinanceSource_Target\r\n                T1.[ResourceMaintenanc");
            viewString.Append("eOfTheStateProgram_FinanceSource.ResourceMaintenanceOfTheStateProgram_FinanceSou");
            viewString.Append("rce_Source.Id], \r\n                CreateRef(DataContext.FinanceSource, row(T1.[R");
            viewString.Append("esourceMaintenanceOfTheStateProgram_FinanceSource.ResourceMaintenanceOfTheStateP");
            viewString.Append("rogram_FinanceSource_Target.Id]), [Tests.FinanceSource]) AS [ResourceMaintenance");
            viewString.Append("OfTheStateProgram_FinanceSource.ResourceMaintenanceOfTheStateProgram_FinanceSour");
            viewString.Append("ce_Target]\r\n            FROM (\r\n                SELECT \r\n                    T.i");
            viewString.Append("dResourceMaintenanceOfTheStateProgram AS [ResourceMaintenanceOfTheStateProgram_F");
            viewString.Append("inanceSource.ResourceMaintenanceOfTheStateProgram_FinanceSource_Source.Id], \r\n  ");
            viewString.Append("                  T.idFinanceSource AS [ResourceMaintenanceOfTheStateProgram_Fin");
            viewString.Append("anceSource.ResourceMaintenanceOfTheStateProgram_FinanceSource_Target.Id], \r\n    ");
            viewString.Append("                True AS _from0\r\n                FROM CodeFirstDatabase.ResourceM");
            viewString.Append("aintenanceOfTheStateProgramFinanceSource AS T\r\n            ) AS T1\r\n        ) AS");
            viewString.Append(" T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ResourceMaintenanceOfTheStateProgram_FinanceSource", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.AnalysisBAofDirectAndIndirectCost_SBPs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView623()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.AnalysisBAofDirectAndIndirectCost_SBPs", "\r\n    SELECT VALUE -- Constructing AnalysisBAofDirectAndIndirectCost_SBPs\r\n      " +
                    "  [Tests.AnalysisBAofDirectAndIndirectCost_SBPs](T3.[AnalysisBAofDirectAndIndire" +
                    "ctCost_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_Source], T3.[AnalysisBAofDire" +
                    "ctAndIndirectCost_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing AnalysisBAofDirectAndIndirectCost_SBPs_Source" +
                    "\r\n            CreateRef(DataContext.AnalysisBAofDirectAndIndirectCost, row(T2.[A" +
                    "nalysisBAofDirectAndIndirectCost_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_Sou" +
                    "rce.Id]), [Tests.AnalysisBAofDirectAndIndirectCost]) AS [AnalysisBAofDirectAndIn" +
                    "directCost_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_Source], \r\n            T2" +
                    ".[AnalysisBAofDirectAndIndirectCost_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_" +
                    "Target]\r\n        FROM (\r\n            SELECT -- Constructing AnalysisBAofDirectAn" +
                    "dIndirectCost_SBPs_Target\r\n                T1.[AnalysisBAofDirectAndIndirectCost" +
                    "_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_Source.Id], \r\n                Creat" +
                    "eRef(DataContext.SBP, row(T1.[AnalysisBAofDirectAndIndirectCost_SBPs.AnalysisBAo" +
                    "fDirectAndIndirectCost_SBPs_Target.Id]), [Tests.SBP]) AS [AnalysisBAofDirectAndI" +
                    "ndirectCost_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_Target]\r\n            FRO" +
                    "M (\r\n                SELECT \r\n                    T.idAnalysisBAofDirectAndIndir" +
                    "ectCost AS [AnalysisBAofDirectAndIndirectCost_SBPs.AnalysisBAofDirectAndIndirect" +
                    "Cost_SBPs_Source.Id], \r\n                    T.idSBP AS [AnalysisBAofDirectAndInd" +
                    "irectCost_SBPs.AnalysisBAofDirectAndIndirectCost_SBPs_Target.Id], \r\n            " +
                    "        True AS _from0\r\n                FROM CodeFirstDatabase.AnalysisBAofDirec" +
                    "tAndIndirectCostSBP AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.Report1_FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView624()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Report1_FinanceSource", @"
    SELECT VALUE -- Constructing Report1_FinanceSource
        [Tests.Report1_FinanceSource](T3.[Report1_FinanceSource.Report1_FinanceSource_Source], T3.[Report1_FinanceSource.Report1_FinanceSource_Target])
    FROM (
        SELECT -- Constructing Report1_FinanceSource_Source
            CreateRef(DataContext.Report1, row(T2.[Report1_FinanceSource.Report1_FinanceSource_Source.Id]), [Tests.Report1]) AS [Report1_FinanceSource.Report1_FinanceSource_Source], 
            T2.[Report1_FinanceSource.Report1_FinanceSource_Target]
        FROM (
            SELECT -- Constructing Report1_FinanceSource_Target
                T1.[Report1_FinanceSource.Report1_FinanceSource_Source.Id], 
                CreateRef(DataContext.FinanceSource, row(T1.[Report1_FinanceSource.Report1_FinanceSource_Target.Id]), [Tests.FinanceSource]) AS [Report1_FinanceSource.Report1_FinanceSource_Target]
            FROM (
                SELECT 
                    T.idReport1 AS [Report1_FinanceSource.Report1_FinanceSource_Source.Id], 
                    T.idFinanceSource AS [Report1_FinanceSource.Report1_FinanceSource_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Report1FinanceSource AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView625()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3246);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_ExpenseObl");
            viewString.Append("igationType_ConsolidatedExpenditure_BaseFilter\r\n        [Tests.ConsolidatedExpen");
            viewString.Append("diture_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_BaseFilter](T3.[");
            viewString.Append("ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure");
            viewString.Append("_BaseFilter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Consolidate");
            viewString.Append("dExpenditure_BaseFilter_Source], T3.[ConsolidatedExpenditure_BaseFilter_ExpenseO");
            viewString.Append("bligationType_ConsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFil");
            viewString.Append("ter_ExpenseObligationType_ConsolidatedExpenditure_BaseFilter_Target])\r\n    FROM ");
            viewString.Append("(\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_ExpenseObli");
            viewString.Append("gationType_ConsolidatedExpenditure_BaseFilter_Source\r\n            CreateRef(Data");
            viewString.Append("Context.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType, row(T2.[Consol");
            viewString.Append("idatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_BaseF");
            viewString.Append("ilter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpen");
            viewString.Append("diture_BaseFilter_Source.Id]), [Tests.ConsolidatedExpenditure_BaseFilter_Expense");
            viewString.Append("ObligationType]) AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Co");
            viewString.Append("nsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFilter_ExpenseOblig");
            viewString.Append("ationType_ConsolidatedExpenditure_BaseFilter_Source], \r\n            T2.[Consolid");
            viewString.Append("atedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_BaseFil");
            viewString.Append("ter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpendi");
            viewString.Append("ture_BaseFilter_Target]\r\n        FROM (\r\n            SELECT -- Constructing Cons");
            viewString.Append("olidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_Bas");
            viewString.Append("eFilter_Target\r\n                T1.[ConsolidatedExpenditure_BaseFilter_ExpenseOb");
            viewString.Append("ligationType_ConsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFilt");
            viewString.Append("er_ExpenseObligationType_ConsolidatedExpenditure_BaseFilter_Source.Id], \r\n      ");
            viewString.Append("          CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, row(T1.[Cons");
            viewString.Append("olidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditure_Bas");
            viewString.Append("eFilter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExp");
            viewString.Append("enditure_BaseFilter_Target.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS ");
            viewString.Append("[ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpenditur");
            viewString.Append("e_BaseFilter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Consolidat");
            viewString.Append("edExpenditure_BaseFilter_Target]\r\n            FROM (\r\n                SELECT \r\n ");
            viewString.Append("                   T.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Id");
            viewString.Append(" AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_ConsolidatedExpend");
            viewString.Append("iture_BaseFilter.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Consol");
            viewString.Append("idatedExpenditure_BaseFilter_Source.Id], \r\n                    T.ConsolidatedExp");
            viewString.Append("enditure_BaseFilter_Id AS [ConsolidatedExpenditure_BaseFilter_ExpenseObligationT");
            viewString.Append("ype_ConsolidatedExpenditure_BaseFilter.ConsolidatedExpenditure_BaseFilter_Expens");
            viewString.Append("eObligationType_ConsolidatedExpenditure_BaseFilter_Target.Id], \r\n               ");
            viewString.Append("     True AS _from0\r\n                FROM CodeFirstDatabase.ConsolidatedExpendit");
            viewString.Append("ure_BaseFilter_ExpenseObligationTypeConsolidatedExpenditure_BaseFilter AS T\r\n   ");
            viewString.Append("         ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_ExpenseObligationType_Consolidated" +
                    "Expenditure_BaseFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_DKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView626()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_DKR", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_DKR\r\n      " +
                    "  [Tests.ConsolidatedExpenditure_BaseFilter_DKR](T3.[ConsolidatedExpenditure_Bas" +
                    "eFilter_DKR.ConsolidatedExpenditure_BaseFilter_DKR_Source], T3.[ConsolidatedExpe" +
                    "nditure_BaseFilter_DKR.ConsolidatedExpenditure_BaseFilter_DKR_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_DKR_Source" +
                    "\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, row(T2.[" +
                    "ConsolidatedExpenditure_BaseFilter_DKR.ConsolidatedExpenditure_BaseFilter_DKR_So" +
                    "urce.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_DKR.ConsolidatedExpenditure_BaseFilter_DKR_Source], \r\n            " +
                    "T2.[ConsolidatedExpenditure_BaseFilter_DKR.ConsolidatedExpenditure_BaseFilter_DK" +
                    "R_Target]\r\n        FROM (\r\n            SELECT -- Constructing ConsolidatedExpend" +
                    "iture_BaseFilter_DKR_Target\r\n                T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_DKR.ConsolidatedExpenditure_BaseFilter_DKR_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.DKR, row(T1.[ConsolidatedExpenditure_BaseFilter_DKR.Consolida" +
                    "tedExpenditure_BaseFilter_DKR_Target.Id]), [Tests.DKR]) AS [ConsolidatedExpendit" +
                    "ure_BaseFilter_DKR.ConsolidatedExpenditure_BaseFilter_DKR_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idConsolidatedExpenditure_" +
                    "BaseFilter AS [ConsolidatedExpenditure_BaseFilter_DKR.ConsolidatedExpenditure_Ba" +
                    "seFilter_DKR_Source.Id], \r\n                    T.idDKR AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_DKR.ConsolidatedExpenditure_BaseFilter_DKR_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.ConsolidatedEx" +
                    "penditure_BaseFilterDKR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_DFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView627()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_DFK", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_DFK\r\n      " +
                    "  [Tests.ConsolidatedExpenditure_BaseFilter_DFK](T3.[ConsolidatedExpenditure_Bas" +
                    "eFilter_DFK.ConsolidatedExpenditure_BaseFilter_DFK_Source], T3.[ConsolidatedExpe" +
                    "nditure_BaseFilter_DFK.ConsolidatedExpenditure_BaseFilter_DFK_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_DFK_Source" +
                    "\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, row(T2.[" +
                    "ConsolidatedExpenditure_BaseFilter_DFK.ConsolidatedExpenditure_BaseFilter_DFK_So" +
                    "urce.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_DFK.ConsolidatedExpenditure_BaseFilter_DFK_Source], \r\n            " +
                    "T2.[ConsolidatedExpenditure_BaseFilter_DFK.ConsolidatedExpenditure_BaseFilter_DF" +
                    "K_Target]\r\n        FROM (\r\n            SELECT -- Constructing ConsolidatedExpend" +
                    "iture_BaseFilter_DFK_Target\r\n                T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_DFK.ConsolidatedExpenditure_BaseFilter_DFK_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.DFK, row(T1.[ConsolidatedExpenditure_BaseFilter_DFK.Consolida" +
                    "tedExpenditure_BaseFilter_DFK_Target.Id]), [Tests.DFK]) AS [ConsolidatedExpendit" +
                    "ure_BaseFilter_DFK.ConsolidatedExpenditure_BaseFilter_DFK_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idConsolidatedExpenditure_" +
                    "BaseFilter AS [ConsolidatedExpenditure_BaseFilter_DFK.ConsolidatedExpenditure_Ba" +
                    "seFilter_DFK_Source.Id], \r\n                    T.idDFK AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_DFK.ConsolidatedExpenditure_BaseFilter_DFK_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.ConsolidatedEx" +
                    "penditure_BaseFilterDFK AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_DEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView628()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_DEK", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_DEK\r\n      " +
                    "  [Tests.ConsolidatedExpenditure_BaseFilter_DEK](T3.[ConsolidatedExpenditure_Bas" +
                    "eFilter_DEK.ConsolidatedExpenditure_BaseFilter_DEK_Source], T3.[ConsolidatedExpe" +
                    "nditure_BaseFilter_DEK.ConsolidatedExpenditure_BaseFilter_DEK_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_DEK_Source" +
                    "\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, row(T2.[" +
                    "ConsolidatedExpenditure_BaseFilter_DEK.ConsolidatedExpenditure_BaseFilter_DEK_So" +
                    "urce.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_DEK.ConsolidatedExpenditure_BaseFilter_DEK_Source], \r\n            " +
                    "T2.[ConsolidatedExpenditure_BaseFilter_DEK.ConsolidatedExpenditure_BaseFilter_DE" +
                    "K_Target]\r\n        FROM (\r\n            SELECT -- Constructing ConsolidatedExpend" +
                    "iture_BaseFilter_DEK_Target\r\n                T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_DEK.ConsolidatedExpenditure_BaseFilter_DEK_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.DEK, row(T1.[ConsolidatedExpenditure_BaseFilter_DEK.Consolida" +
                    "tedExpenditure_BaseFilter_DEK_Target.Id]), [Tests.DEK]) AS [ConsolidatedExpendit" +
                    "ure_BaseFilter_DEK.ConsolidatedExpenditure_BaseFilter_DEK_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idConsolidatedExpenditure_" +
                    "BaseFilter AS [ConsolidatedExpenditure_BaseFilter_DEK.ConsolidatedExpenditure_Ba" +
                    "seFilter_DEK_Source.Id], \r\n                    T.idDEK AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_DEK.ConsolidatedExpenditure_BaseFilter_DEK_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.ConsolidatedEx" +
                    "penditure_BaseFilterDEK AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView629()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_FinanceSource", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_FinanceSour" +
                    "ce\r\n        [Tests.ConsolidatedExpenditure_BaseFilter_FinanceSource](T3.[Consoli" +
                    "datedExpenditure_BaseFilter_FinanceSource.ConsolidatedExpenditure_BaseFilter_Fin" +
                    "anceSource_Source], T3.[ConsolidatedExpenditure_BaseFilter_FinanceSource.Consoli" +
                    "datedExpenditure_BaseFilter_FinanceSource_Target])\r\n    FROM (\r\n        SELECT -" +
                    "- Constructing ConsolidatedExpenditure_BaseFilter_FinanceSource_Source\r\n        " +
                    "    CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, row(T2.[Consolidat" +
                    "edExpenditure_BaseFilter_FinanceSource.ConsolidatedExpenditure_BaseFilter_Financ" +
                    "eSource_Source.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [Consolidate" +
                    "dExpenditure_BaseFilter_FinanceSource.ConsolidatedExpenditure_BaseFilter_Finance" +
                    "Source_Source], \r\n            T2.[ConsolidatedExpenditure_BaseFilter_FinanceSour" +
                    "ce.ConsolidatedExpenditure_BaseFilter_FinanceSource_Target]\r\n        FROM (\r\n   " +
                    "         SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_FinanceSource" +
                    "_Target\r\n                T1.[ConsolidatedExpenditure_BaseFilter_FinanceSource.Co" +
                    "nsolidatedExpenditure_BaseFilter_FinanceSource_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.FinanceSource, row(T1.[ConsolidatedExpenditure_BaseFilter_Fin" +
                    "anceSource.ConsolidatedExpenditure_BaseFilter_FinanceSource_Target.Id]), [Tests." +
                    "FinanceSource]) AS [ConsolidatedExpenditure_BaseFilter_FinanceSource.Consolidate" +
                    "dExpenditure_BaseFilter_FinanceSource_Target]\r\n            FROM (\r\n             " +
                    "   SELECT \r\n                    T.idConsolidatedExpenditure_BaseFilter AS [Conso" +
                    "lidatedExpenditure_BaseFilter_FinanceSource.ConsolidatedExpenditure_BaseFilter_F" +
                    "inanceSource_Source.Id], \r\n                    T.idFinanceSource AS [Consolidate" +
                    "dExpenditure_BaseFilter_FinanceSource.ConsolidatedExpenditure_BaseFilter_Finance" +
                    "Source_Target.Id], \r\n                    True AS _from0\r\n                FROM Co" +
                    "deFirstDatabase.ConsolidatedExpenditure_BaseFilterFinanceSource AS T\r\n          " +
                    "  ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_KVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView630()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_KVR", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_KVR\r\n      " +
                    "  [Tests.ConsolidatedExpenditure_BaseFilter_KVR](T3.[ConsolidatedExpenditure_Bas" +
                    "eFilter_KVR.ConsolidatedExpenditure_BaseFilter_KVR_Source], T3.[ConsolidatedExpe" +
                    "nditure_BaseFilter_KVR.ConsolidatedExpenditure_BaseFilter_KVR_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_KVR_Source" +
                    "\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, row(T2.[" +
                    "ConsolidatedExpenditure_BaseFilter_KVR.ConsolidatedExpenditure_BaseFilter_KVR_So" +
                    "urce.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_KVR.ConsolidatedExpenditure_BaseFilter_KVR_Source], \r\n            " +
                    "T2.[ConsolidatedExpenditure_BaseFilter_KVR.ConsolidatedExpenditure_BaseFilter_KV" +
                    "R_Target]\r\n        FROM (\r\n            SELECT -- Constructing ConsolidatedExpend" +
                    "iture_BaseFilter_KVR_Target\r\n                T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_KVR.ConsolidatedExpenditure_BaseFilter_KVR_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.KVR, row(T1.[ConsolidatedExpenditure_BaseFilter_KVR.Consolida" +
                    "tedExpenditure_BaseFilter_KVR_Target.Id]), [Tests.KVR]) AS [ConsolidatedExpendit" +
                    "ure_BaseFilter_KVR.ConsolidatedExpenditure_BaseFilter_KVR_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idConsolidatedExpenditure_" +
                    "BaseFilter AS [ConsolidatedExpenditure_BaseFilter_KVR.ConsolidatedExpenditure_Ba" +
                    "seFilter_KVR_Source.Id], \r\n                    T.idKVR AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_KVR.ConsolidatedExpenditure_BaseFilter_KVR_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.ConsolidatedEx" +
                    "penditure_BaseFilterKVR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_KVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView631()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_KVSR", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_KVSR\r\n     " +
                    "   [Tests.ConsolidatedExpenditure_BaseFilter_KVSR](T3.[ConsolidatedExpenditure_B" +
                    "aseFilter_KVSR.ConsolidatedExpenditure_BaseFilter_KVSR_Source], T3.[Consolidated" +
                    "Expenditure_BaseFilter_KVSR.ConsolidatedExpenditure_BaseFilter_KVSR_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_KVSR" +
                    "_Source\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, r" +
                    "ow(T2.[ConsolidatedExpenditure_BaseFilter_KVSR.ConsolidatedExpenditure_BaseFilte" +
                    "r_KVSR_Source.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [Consolidated" +
                    "Expenditure_BaseFilter_KVSR.ConsolidatedExpenditure_BaseFilter_KVSR_Source], \r\n " +
                    "           T2.[ConsolidatedExpenditure_BaseFilter_KVSR.ConsolidatedExpenditure_B" +
                    "aseFilter_KVSR_Target]\r\n        FROM (\r\n            SELECT -- Constructing Conso" +
                    "lidatedExpenditure_BaseFilter_KVSR_Target\r\n                T1.[ConsolidatedExpen" +
                    "diture_BaseFilter_KVSR.ConsolidatedExpenditure_BaseFilter_KVSR_Source.Id], \r\n   " +
                    "             CreateRef(DataContext.KVSR, row(T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_KVSR.ConsolidatedExpenditure_BaseFilter_KVSR_Target.Id]), [Tests.KVSR]) AS [" +
                    "ConsolidatedExpenditure_BaseFilter_KVSR.ConsolidatedExpenditure_BaseFilter_KVSR_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idCo" +
                    "nsolidatedExpenditure_BaseFilter AS [ConsolidatedExpenditure_BaseFilter_KVSR.Con" +
                    "solidatedExpenditure_BaseFilter_KVSR_Source.Id], \r\n                    T.idKVSR " +
                    "AS [ConsolidatedExpenditure_BaseFilter_KVSR.ConsolidatedExpenditure_BaseFilter_K" +
                    "VSR_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.ConsolidatedExpenditure_BaseFilterKVSR AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_CodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView632()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_CodeSubsidy", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_CodeSubsidy" +
                    "\r\n        [Tests.ConsolidatedExpenditure_BaseFilter_CodeSubsidy](T3.[Consolidate" +
                    "dExpenditure_BaseFilter_CodeSubsidy.ConsolidatedExpenditure_BaseFilter_CodeSubsi" +
                    "dy_Source], T3.[ConsolidatedExpenditure_BaseFilter_CodeSubsidy.ConsolidatedExpen" +
                    "diture_BaseFilter_CodeSubsidy_Target])\r\n    FROM (\r\n        SELECT -- Constructi" +
                    "ng ConsolidatedExpenditure_BaseFilter_CodeSubsidy_Source\r\n            CreateRef(" +
                    "DataContext.ConsolidatedExpenditure_BaseFilter, row(T2.[ConsolidatedExpenditure_" +
                    "BaseFilter_CodeSubsidy.ConsolidatedExpenditure_BaseFilter_CodeSubsidy_Source.Id]" +
                    "), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [ConsolidatedExpenditure_BaseF" +
                    "ilter_CodeSubsidy.ConsolidatedExpenditure_BaseFilter_CodeSubsidy_Source], \r\n    " +
                    "        T2.[ConsolidatedExpenditure_BaseFilter_CodeSubsidy.ConsolidatedExpenditu" +
                    "re_BaseFilter_CodeSubsidy_Target]\r\n        FROM (\r\n            SELECT -- Constru" +
                    "cting ConsolidatedExpenditure_BaseFilter_CodeSubsidy_Target\r\n                T1." +
                    "[ConsolidatedExpenditure_BaseFilter_CodeSubsidy.ConsolidatedExpenditure_BaseFilt" +
                    "er_CodeSubsidy_Source.Id], \r\n                CreateRef(DataContext.CodeSubsidy, " +
                    "row(T1.[ConsolidatedExpenditure_BaseFilter_CodeSubsidy.ConsolidatedExpenditure_B" +
                    "aseFilter_CodeSubsidy_Target.Id]), [Tests.CodeSubsidy]) AS [ConsolidatedExpendit" +
                    "ure_BaseFilter_CodeSubsidy.ConsolidatedExpenditure_BaseFilter_CodeSubsidy_Target" +
                    "]\r\n            FROM (\r\n                SELECT \r\n                    T.idConsolid" +
                    "atedExpenditure_BaseFilter AS [ConsolidatedExpenditure_BaseFilter_CodeSubsidy.Co" +
                    "nsolidatedExpenditure_BaseFilter_CodeSubsidy_Source.Id], \r\n                    T" +
                    ".idCodeSubsidy AS [ConsolidatedExpenditure_BaseFilter_CodeSubsidy.ConsolidatedEx" +
                    "penditure_BaseFilter_CodeSubsidy_Target.Id], \r\n                    True AS _from" +
                    "0\r\n                FROM CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterCode" +
                    "Subsidy AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_KOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView633()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_KOSGU", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_KOSGU\r\n    " +
                    "    [Tests.ConsolidatedExpenditure_BaseFilter_KOSGU](T3.[ConsolidatedExpenditure" +
                    "_BaseFilter_KOSGU.ConsolidatedExpenditure_BaseFilter_KOSGU_Source], T3.[Consolid" +
                    "atedExpenditure_BaseFilter_KOSGU.ConsolidatedExpenditure_BaseFilter_KOSGU_Target" +
                    "])\r\n    FROM (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilte" +
                    "r_KOSGU_Source\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFi" +
                    "lter, row(T2.[ConsolidatedExpenditure_BaseFilter_KOSGU.ConsolidatedExpenditure_B" +
                    "aseFilter_KOSGU_Source.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [Con" +
                    "solidatedExpenditure_BaseFilter_KOSGU.ConsolidatedExpenditure_BaseFilter_KOSGU_S" +
                    "ource], \r\n            T2.[ConsolidatedExpenditure_BaseFilter_KOSGU.ConsolidatedE" +
                    "xpenditure_BaseFilter_KOSGU_Target]\r\n        FROM (\r\n            SELECT -- Const" +
                    "ructing ConsolidatedExpenditure_BaseFilter_KOSGU_Target\r\n                T1.[Con" +
                    "solidatedExpenditure_BaseFilter_KOSGU.ConsolidatedExpenditure_BaseFilter_KOSGU_S" +
                    "ource.Id], \r\n                CreateRef(DataContext.KOSGU, row(T1.[ConsolidatedEx" +
                    "penditure_BaseFilter_KOSGU.ConsolidatedExpenditure_BaseFilter_KOSGU_Target.Id])," +
                    " [Tests.KOSGU]) AS [ConsolidatedExpenditure_BaseFilter_KOSGU.ConsolidatedExpendi" +
                    "ture_BaseFilter_KOSGU_Target]\r\n            FROM (\r\n                SELECT \r\n    " +
                    "                T.idConsolidatedExpenditure_BaseFilter AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_KOSGU.ConsolidatedExpenditure_BaseFilter_KOSGU_Source.Id], \r\n     " +
                    "               T.idKOSGU AS [ConsolidatedExpenditure_BaseFilter_KOSGU.Consolidat" +
                    "edExpenditure_BaseFilter_KOSGU_Target.Id], \r\n                    True AS _from0\r" +
                    "\n                FROM CodeFirstDatabase.ConsolidatedExpenditure_BaseFilterKOSGU " +
                    "AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_KFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView634()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_KFO", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_KFO\r\n      " +
                    "  [Tests.ConsolidatedExpenditure_BaseFilter_KFO](T3.[ConsolidatedExpenditure_Bas" +
                    "eFilter_KFO.ConsolidatedExpenditure_BaseFilter_KFO_Source], T3.[ConsolidatedExpe" +
                    "nditure_BaseFilter_KFO.ConsolidatedExpenditure_BaseFilter_KFO_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_KFO_Source" +
                    "\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, row(T2.[" +
                    "ConsolidatedExpenditure_BaseFilter_KFO.ConsolidatedExpenditure_BaseFilter_KFO_So" +
                    "urce.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_KFO.ConsolidatedExpenditure_BaseFilter_KFO_Source], \r\n            " +
                    "T2.[ConsolidatedExpenditure_BaseFilter_KFO.ConsolidatedExpenditure_BaseFilter_KF" +
                    "O_Target]\r\n        FROM (\r\n            SELECT -- Constructing ConsolidatedExpend" +
                    "iture_BaseFilter_KFO_Target\r\n                T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_KFO.ConsolidatedExpenditure_BaseFilter_KFO_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.KFO, row(T1.[ConsolidatedExpenditure_BaseFilter_KFO.Consolida" +
                    "tedExpenditure_BaseFilter_KFO_Target.Id]), [Tests.KFO]) AS [ConsolidatedExpendit" +
                    "ure_BaseFilter_KFO.ConsolidatedExpenditure_BaseFilter_KFO_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idConsolidatedExpenditure_" +
                    "BaseFilter AS [ConsolidatedExpenditure_BaseFilter_KFO.ConsolidatedExpenditure_Ba" +
                    "seFilter_KFO_Source.Id], \r\n                    T.idKFO AS [ConsolidatedExpenditu" +
                    "re_BaseFilter_KFO.ConsolidatedExpenditure_BaseFilter_KFO_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.ConsolidatedEx" +
                    "penditure_BaseFilterKFO AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_KCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView635()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_KCSR", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_KCSR\r\n     " +
                    "   [Tests.ConsolidatedExpenditure_BaseFilter_KCSR](T3.[ConsolidatedExpenditure_B" +
                    "aseFilter_KCSR.ConsolidatedExpenditure_BaseFilter_KCSR_Source], T3.[Consolidated" +
                    "Expenditure_BaseFilter_KCSR.ConsolidatedExpenditure_BaseFilter_KCSR_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_KCSR" +
                    "_Source\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, r" +
                    "ow(T2.[ConsolidatedExpenditure_BaseFilter_KCSR.ConsolidatedExpenditure_BaseFilte" +
                    "r_KCSR_Source.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [Consolidated" +
                    "Expenditure_BaseFilter_KCSR.ConsolidatedExpenditure_BaseFilter_KCSR_Source], \r\n " +
                    "           T2.[ConsolidatedExpenditure_BaseFilter_KCSR.ConsolidatedExpenditure_B" +
                    "aseFilter_KCSR_Target]\r\n        FROM (\r\n            SELECT -- Constructing Conso" +
                    "lidatedExpenditure_BaseFilter_KCSR_Target\r\n                T1.[ConsolidatedExpen" +
                    "diture_BaseFilter_KCSR.ConsolidatedExpenditure_BaseFilter_KCSR_Source.Id], \r\n   " +
                    "             CreateRef(DataContext.KCSR, row(T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_KCSR.ConsolidatedExpenditure_BaseFilter_KCSR_Target.Id]), [Tests.KCSR]) AS [" +
                    "ConsolidatedExpenditure_BaseFilter_KCSR.ConsolidatedExpenditure_BaseFilter_KCSR_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idCo" +
                    "nsolidatedExpenditure_BaseFilter AS [ConsolidatedExpenditure_BaseFilter_KCSR.Con" +
                    "solidatedExpenditure_BaseFilter_KCSR_Source.Id], \r\n                    T.idKCSR " +
                    "AS [ConsolidatedExpenditure_BaseFilter_KCSR.ConsolidatedExpenditure_BaseFilter_K" +
                    "CSR_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.ConsolidatedExpenditure_BaseFilterKCSR AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_BranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView636()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_BranchCode", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_BranchCode\r" +
                    "\n        [Tests.ConsolidatedExpenditure_BaseFilter_BranchCode](T3.[ConsolidatedE" +
                    "xpenditure_BaseFilter_BranchCode.ConsolidatedExpenditure_BaseFilter_BranchCode_S" +
                    "ource], T3.[ConsolidatedExpenditure_BaseFilter_BranchCode.ConsolidatedExpenditur" +
                    "e_BaseFilter_BranchCode_Target])\r\n    FROM (\r\n        SELECT -- Constructing Con" +
                    "solidatedExpenditure_BaseFilter_BranchCode_Source\r\n            CreateRef(DataCon" +
                    "text.ConsolidatedExpenditure_BaseFilter, row(T2.[ConsolidatedExpenditure_BaseFil" +
                    "ter_BranchCode.ConsolidatedExpenditure_BaseFilter_BranchCode_Source.Id]), [Tests" +
                    ".ConsolidatedExpenditure_BaseFilter]) AS [ConsolidatedExpenditure_BaseFilter_Bra" +
                    "nchCode.ConsolidatedExpenditure_BaseFilter_BranchCode_Source], \r\n            T2." +
                    "[ConsolidatedExpenditure_BaseFilter_BranchCode.ConsolidatedExpenditure_BaseFilte" +
                    "r_BranchCode_Target]\r\n        FROM (\r\n            SELECT -- Constructing Consoli" +
                    "datedExpenditure_BaseFilter_BranchCode_Target\r\n                T1.[ConsolidatedE" +
                    "xpenditure_BaseFilter_BranchCode.ConsolidatedExpenditure_BaseFilter_BranchCode_S" +
                    "ource.Id], \r\n                CreateRef(DataContext.BranchCode, row(T1.[Consolida" +
                    "tedExpenditure_BaseFilter_BranchCode.ConsolidatedExpenditure_BaseFilter_BranchCo" +
                    "de_Target.Id]), [Tests.BranchCode]) AS [ConsolidatedExpenditure_BaseFilter_Branc" +
                    "hCode.ConsolidatedExpenditure_BaseFilter_BranchCode_Target]\r\n            FROM (\r" +
                    "\n                SELECT \r\n                    T.idConsolidatedExpenditure_BaseFi" +
                    "lter AS [ConsolidatedExpenditure_BaseFilter_BranchCode.ConsolidatedExpenditure_B" +
                    "aseFilter_BranchCode_Source.Id], \r\n                    T.idBranchCode AS [Consol" +
                    "idatedExpenditure_BaseFilter_BranchCode.ConsolidatedExpenditure_BaseFilter_Branc" +
                    "hCode_Target.Id], \r\n                    True AS _from0\r\n                FROM Cod" +
                    "eFirstDatabase.ConsolidatedExpenditure_BaseFilterBranchCode AS T\r\n            ) " +
                    "AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ConsolidatedExpenditure_BaseFilter_RZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView637()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ConsolidatedExpenditure_BaseFilter_RZPR", "\r\n    SELECT VALUE -- Constructing ConsolidatedExpenditure_BaseFilter_RZPR\r\n     " +
                    "   [Tests.ConsolidatedExpenditure_BaseFilter_RZPR](T3.[ConsolidatedExpenditure_B" +
                    "aseFilter_RZPR.ConsolidatedExpenditure_BaseFilter_RZPR_Source], T3.[Consolidated" +
                    "Expenditure_BaseFilter_RZPR.ConsolidatedExpenditure_BaseFilter_RZPR_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing ConsolidatedExpenditure_BaseFilter_RZPR" +
                    "_Source\r\n            CreateRef(DataContext.ConsolidatedExpenditure_BaseFilter, r" +
                    "ow(T2.[ConsolidatedExpenditure_BaseFilter_RZPR.ConsolidatedExpenditure_BaseFilte" +
                    "r_RZPR_Source.Id]), [Tests.ConsolidatedExpenditure_BaseFilter]) AS [Consolidated" +
                    "Expenditure_BaseFilter_RZPR.ConsolidatedExpenditure_BaseFilter_RZPR_Source], \r\n " +
                    "           T2.[ConsolidatedExpenditure_BaseFilter_RZPR.ConsolidatedExpenditure_B" +
                    "aseFilter_RZPR_Target]\r\n        FROM (\r\n            SELECT -- Constructing Conso" +
                    "lidatedExpenditure_BaseFilter_RZPR_Target\r\n                T1.[ConsolidatedExpen" +
                    "diture_BaseFilter_RZPR.ConsolidatedExpenditure_BaseFilter_RZPR_Source.Id], \r\n   " +
                    "             CreateRef(DataContext.RZPR, row(T1.[ConsolidatedExpenditure_BaseFil" +
                    "ter_RZPR.ConsolidatedExpenditure_BaseFilter_RZPR_Target.Id]), [Tests.RZPR]) AS [" +
                    "ConsolidatedExpenditure_BaseFilter_RZPR.ConsolidatedExpenditure_BaseFilter_RZPR_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idCo" +
                    "nsolidatedExpenditure_BaseFilter AS [ConsolidatedExpenditure_BaseFilter_RZPR.Con" +
                    "solidatedExpenditure_BaseFilter_RZPR_Source.Id], \r\n                    T.idRZPR " +
                    "AS [ConsolidatedExpenditure_BaseFilter_RZPR.ConsolidatedExpenditure_BaseFilter_R" +
                    "ZPR_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.ConsolidatedExpenditure_BaseFilterRZPR AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.JustificationOfBudget_ListRemovedField
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView638()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.JustificationOfBudget_ListRemovedField", "\r\n    SELECT VALUE -- Constructing JustificationOfBudget_ListRemovedField\r\n      " +
                    "  [Tests.JustificationOfBudget_ListRemovedField](T3.[JustificationOfBudget_ListR" +
                    "emovedField.JustificationOfBudget_ListRemovedField_Source], T3.[JustificationOfB" +
                    "udget_ListRemovedField.JustificationOfBudget_ListRemovedField_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing JustificationOfBudget_ListRemovedField_Source" +
                    "\r\n            CreateRef(DataContext.JustificationOfBudget, row(T2.[Justification" +
                    "OfBudget_ListRemovedField.JustificationOfBudget_ListRemovedField_Source.Id]), [T" +
                    "ests.JustificationOfBudget]) AS [JustificationOfBudget_ListRemovedField.Justific" +
                    "ationOfBudget_ListRemovedField_Source], \r\n            T2.[JustificationOfBudget_" +
                    "ListRemovedField.JustificationOfBudget_ListRemovedField_Target]\r\n        FROM (\r" +
                    "\n            SELECT -- Constructing JustificationOfBudget_ListRemovedField_Targe" +
                    "t\r\n                T1.[JustificationOfBudget_ListRemovedField.JustificationOfBud" +
                    "get_ListRemovedField_Source.Id], \r\n                CreateRef(DataContext.ListRem" +
                    "ovedFields, row(T1.[JustificationOfBudget_ListRemovedField.JustificationOfBudget" +
                    "_ListRemovedField_Target.Id]), [Tests.ListRemovedFields]) AS [JustificationOfBud" +
                    "get_ListRemovedField.JustificationOfBudget_ListRemovedField_Target]\r\n           " +
                    " FROM (\r\n                SELECT \r\n                    T.idJustificationOfBudget " +
                    "AS [JustificationOfBudget_ListRemovedField.JustificationOfBudget_ListRemovedFiel" +
                    "d_Source.Id], \r\n                    T.idListRemovedFields AS [JustificationOfBud" +
                    "get_ListRemovedField.JustificationOfBudget_ListRemovedField_Target.Id], \r\n      " +
                    "              True AS _from0\r\n                FROM CodeFirstDatabase.Justificati" +
                    "onOfBudgetListRemovedFields AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS" +
                    " T3");
        }
        
        /// <Summary>
        /// return view for DataContext.JustificationOfBudget_RZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView639()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.JustificationOfBudget_RZPR", @"
    SELECT VALUE -- Constructing JustificationOfBudget_RZPR
        [Tests.JustificationOfBudget_RZPR](T3.[JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Source], T3.[JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Target])
    FROM (
        SELECT -- Constructing JustificationOfBudget_RZPR_Source
            CreateRef(DataContext.JustificationOfBudget, row(T2.[JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Source.Id]), [Tests.JustificationOfBudget]) AS [JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Source], 
            T2.[JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Target]
        FROM (
            SELECT -- Constructing JustificationOfBudget_RZPR_Target
                T1.[JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Source.Id], 
                CreateRef(DataContext.RZPR, row(T1.[JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Target.Id]), [Tests.RZPR]) AS [JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Target]
            FROM (
                SELECT 
                    T.idJustificationOfBudget AS [JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Source.Id], 
                    T.idRZPR AS [JustificationOfBudget_RZPR.JustificationOfBudget_RZPR_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.JustificationOfBudgetRZPR AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.JustificationOfBudget_KCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView640()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.JustificationOfBudget_KCSR", @"
    SELECT VALUE -- Constructing JustificationOfBudget_KCSR
        [Tests.JustificationOfBudget_KCSR](T3.[JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Source], T3.[JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Target])
    FROM (
        SELECT -- Constructing JustificationOfBudget_KCSR_Source
            CreateRef(DataContext.JustificationOfBudget, row(T2.[JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Source.Id]), [Tests.JustificationOfBudget]) AS [JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Source], 
            T2.[JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Target]
        FROM (
            SELECT -- Constructing JustificationOfBudget_KCSR_Target
                T1.[JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Source.Id], 
                CreateRef(DataContext.KCSR, row(T1.[JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Target.Id]), [Tests.KCSR]) AS [JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Target]
            FROM (
                SELECT 
                    T.idJustificationOfBudget AS [JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Source.Id], 
                    T.idKCSR AS [JustificationOfBudget_KCSR.JustificationOfBudget_KCSR_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.JustificationOfBudgetKCSR AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.JustificationOfBudget_KVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView641()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.JustificationOfBudget_KVR", @"
    SELECT VALUE -- Constructing JustificationOfBudget_KVR
        [Tests.JustificationOfBudget_KVR](T3.[JustificationOfBudget_KVR.JustificationOfBudget_KVR_Source], T3.[JustificationOfBudget_KVR.JustificationOfBudget_KVR_Target])
    FROM (
        SELECT -- Constructing JustificationOfBudget_KVR_Source
            CreateRef(DataContext.JustificationOfBudget, row(T2.[JustificationOfBudget_KVR.JustificationOfBudget_KVR_Source.Id]), [Tests.JustificationOfBudget]) AS [JustificationOfBudget_KVR.JustificationOfBudget_KVR_Source], 
            T2.[JustificationOfBudget_KVR.JustificationOfBudget_KVR_Target]
        FROM (
            SELECT -- Constructing JustificationOfBudget_KVR_Target
                T1.[JustificationOfBudget_KVR.JustificationOfBudget_KVR_Source.Id], 
                CreateRef(DataContext.KVR, row(T1.[JustificationOfBudget_KVR.JustificationOfBudget_KVR_Target.Id]), [Tests.KVR]) AS [JustificationOfBudget_KVR.JustificationOfBudget_KVR_Target]
            FROM (
                SELECT 
                    T.idJustificationOfBudget AS [JustificationOfBudget_KVR.JustificationOfBudget_KVR_Source.Id], 
                    T.idKVR AS [JustificationOfBudget_KVR.JustificationOfBudget_KVR_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.JustificationOfBudgetKVR AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.JustificationOfBudget_KOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView642()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.JustificationOfBudget_KOSGU", @"
    SELECT VALUE -- Constructing JustificationOfBudget_KOSGU
        [Tests.JustificationOfBudget_KOSGU](T3.[JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Source], T3.[JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Target])
    FROM (
        SELECT -- Constructing JustificationOfBudget_KOSGU_Source
            CreateRef(DataContext.JustificationOfBudget, row(T2.[JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Source.Id]), [Tests.JustificationOfBudget]) AS [JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Source], 
            T2.[JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Target]
        FROM (
            SELECT -- Constructing JustificationOfBudget_KOSGU_Target
                T1.[JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Source.Id], 
                CreateRef(DataContext.KOSGU, row(T1.[JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Target.Id]), [Tests.KOSGU]) AS [JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Target]
            FROM (
                SELECT 
                    T.idJustificationOfBudget AS [JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Source.Id], 
                    T.idKOSGU AS [JustificationOfBudget_KOSGU.JustificationOfBudget_KOSGU_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.JustificationOfBudgetKOSGU AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.JustificationOfBudget_AuthorityOfExpenseObligation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView643()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2096);
            viewString.Append("\r\n    SELECT VALUE -- Constructing JustificationOfBudget_AuthorityOfExpenseOblig");
            viewString.Append("ation\r\n        [Tests.JustificationOfBudget_AuthorityOfExpenseObligation](T3.[Ju");
            viewString.Append("stificationOfBudget_AuthorityOfExpenseObligation.JustificationOfBudget_Authority");
            viewString.Append("OfExpenseObligation_Source], T3.[JustificationOfBudget_AuthorityOfExpenseObligat");
            viewString.Append("ion.JustificationOfBudget_AuthorityOfExpenseObligation_Target])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT -- Constructing JustificationOfBudget_AuthorityOfExpenseObligation_S");
            viewString.Append("ource\r\n            CreateRef(DataContext.JustificationOfBudget, row(T2.[Justific");
            viewString.Append("ationOfBudget_AuthorityOfExpenseObligation.JustificationOfBudget_AuthorityOfExpe");
            viewString.Append("nseObligation_Source.Id]), [Tests.JustificationOfBudget]) AS [JustificationOfBud");
            viewString.Append("get_AuthorityOfExpenseObligation.JustificationOfBudget_AuthorityOfExpenseObligat");
            viewString.Append("ion_Source], \r\n            T2.[JustificationOfBudget_AuthorityOfExpenseObligatio");
            viewString.Append("n.JustificationOfBudget_AuthorityOfExpenseObligation_Target]\r\n        FROM (\r\n  ");
            viewString.Append("          SELECT -- Constructing JustificationOfBudget_AuthorityOfExpenseObligat");
            viewString.Append("ion_Target\r\n                T1.[JustificationOfBudget_AuthorityOfExpenseObligati");
            viewString.Append("on.JustificationOfBudget_AuthorityOfExpenseObligation_Source.Id], \r\n            ");
            viewString.Append("    CreateRef(DataContext.AuthorityOfExpenseObligation, row(T1.[JustificationOfB");
            viewString.Append("udget_AuthorityOfExpenseObligation.JustificationOfBudget_AuthorityOfExpenseOblig");
            viewString.Append("ation_Target.Id]), [Tests.AuthorityOfExpenseObligation]) AS [JustificationOfBudg");
            viewString.Append("et_AuthorityOfExpenseObligation.JustificationOfBudget_AuthorityOfExpenseObligati");
            viewString.Append("on_Target]\r\n            FROM (\r\n                SELECT \r\n                    T.i");
            viewString.Append("dJustificationOfBudget AS [JustificationOfBudget_AuthorityOfExpenseObligation.Ju");
            viewString.Append("stificationOfBudget_AuthorityOfExpenseObligation_Source.Id], \r\n                 ");
            viewString.Append("   T.idAuthorityOfExpenseObligation AS [JustificationOfBudget_AuthorityOfExpense");
            viewString.Append("Obligation.JustificationOfBudget_AuthorityOfExpenseObligation_Target.Id], \r\n    ");
            viewString.Append("                True AS _from0\r\n                FROM CodeFirstDatabase.Justifica");
            viewString.Append("tionOfBudgetAuthorityOfExpenseObligation AS T\r\n            ) AS T1\r\n        ) AS");
            viewString.Append(" T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.JustificationOfBudget_AuthorityOfExpenseObligation", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView644()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2882);
            viewString.Append("\r\n    SELECT VALUE -- Constructing IBT_RuleFilterKBK_ExpenseObligationTypeT_Inte");
            viewString.Append("rBudgetaryTransfers_RuleFilterKBK\r\n        [Tests.IBT_RuleFilterKBK_ExpenseOblig");
            viewString.Append("ationTypeT_InterBudgetaryTransfers_RuleFilterKBK](T3.[IBT_RuleFilterKBK_ExpenseO");
            viewString.Append("bligationTypeT_InterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_ExpenseOb");
            viewString.Append("ligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Source], T3.[IBT_RuleFilterK");
            viewString.Append("BK_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKB");
            viewString.Append("K_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Target])\r\n    FRO");
            viewString.Append("M (\r\n        SELECT -- Constructing IBT_RuleFilterKBK_ExpenseObligationTypeT_Int");
            viewString.Append("erBudgetaryTransfers_RuleFilterKBK_Source\r\n            CreateRef(DataContext.IBT");
            viewString.Append("_RuleFilterKBK_ExpenseObligationTypeT, row(T2.[IBT_RuleFilterKBK_ExpenseObligati");
            viewString.Append("onTypeT_InterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_ExpenseObligatio");
            viewString.Append("nTypeT_InterBudgetaryTransfers_RuleFilterKBK_Source.Id]), [Tests.IBT_RuleFilterK");
            viewString.Append("BK_ExpenseObligationTypeT]) AS [IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBu");
            viewString.Append("dgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBud");
            viewString.Append("getaryTransfers_RuleFilterKBK_Source], \r\n            T2.[IBT_RuleFilterKBK_Expen");
            viewString.Append("seObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_Expens");
            viewString.Append("eObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Target]\r\n        FROM (\r\n");
            viewString.Append("            SELECT -- Constructing IBT_RuleFilterKBK_ExpenseObligationTypeT_Inte");
            viewString.Append("rBudgetaryTransfers_RuleFilterKBK_Target\r\n                T1.[IBT_RuleFilterKBK_");
            viewString.Append("ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_E");
            viewString.Append("xpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Source.Id], \r\n      ");
            viewString.Append("          CreateRef(DataContext.InterBudgetaryTransfers_RuleFilterKBK, row(T1.[I");
            viewString.Append("BT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK.IB");
            viewString.Append("T_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Tar");
            viewString.Append("get.Id]), [Tests.InterBudgetaryTransfers_RuleFilterKBK]) AS [IBT_RuleFilterKBK_E");
            viewString.Append("xpenseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK.IBT_RuleFilterKBK_Ex");
            viewString.Append("penseObligationTypeT_InterBudgetaryTransfers_RuleFilterKBK_Target]\r\n            ");
            viewString.Append("FROM (\r\n                SELECT \r\n                    T.IBT_RuleFilterKBK_Expense");
            viewString.Append("ObligationTypeT_Id AS [IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTr");
            viewString.Append("ansfers_RuleFilterKBK.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTra");
            viewString.Append("nsfers_RuleFilterKBK_Source.Id], \r\n                    T.InterBudgetaryTransfers");
            viewString.Append("_RuleFilterKBK_Id AS [IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTra");
            viewString.Append("nsfers_RuleFilterKBK.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTran");
            viewString.Append("sfers_RuleFilterKBK_Target.Id], \r\n                    True AS _from0\r\n          ");
            viewString.Append("      FROM CodeFirstDatabase.IBT_RuleFilterKBK_ExpenseObligationTypeTInterBudget");
            viewString.Append("aryTransfers_RuleFilterKBK AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS ");
            viewString.Append("T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.IBT_RuleFilterKBK_ExpenseObligationTypeT_InterBudgetaryTransfers_Rule" +
                    "FilterKBK", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView645()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2064);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_BranchC");
            viewString.Append("odes\r\n        [Tests.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes](T3.[Inte");
            viewString.Append("rBudgetaryTransfers_RuleFilterKBK_BranchCodes.InterBudgetaryTransfers_RuleFilter");
            viewString.Append("KBK_BranchCodes_Source], T3.[InterBudgetaryTransfers_RuleFilterKBK_BranchCodes.I");
            viewString.Append("nterBudgetaryTransfers_RuleFilterKBK_BranchCodes_Target])\r\n    FROM (\r\n        S");
            viewString.Append("ELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_BranchCodes_Source\r\n");
            viewString.Append("            CreateRef(DataContext.InterBudgetaryTransfers_RuleFilterKBK, row(T2.");
            viewString.Append("[InterBudgetaryTransfers_RuleFilterKBK_BranchCodes.InterBudgetaryTransfers_RuleF");
            viewString.Append("ilterKBK_BranchCodes_Source.Id]), [Tests.InterBudgetaryTransfers_RuleFilterKBK])");
            viewString.Append(" AS [InterBudgetaryTransfers_RuleFilterKBK_BranchCodes.InterBudgetaryTransfers_R");
            viewString.Append("uleFilterKBK_BranchCodes_Source], \r\n            T2.[InterBudgetaryTransfers_Rule");
            viewString.Append("FilterKBK_BranchCodes.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes_Target]\r");
            viewString.Append("\n        FROM (\r\n            SELECT -- Constructing InterBudgetaryTransfers_Rule");
            viewString.Append("FilterKBK_BranchCodes_Target\r\n                T1.[InterBudgetaryTransfers_RuleFi");
            viewString.Append("lterKBK_BranchCodes.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes_Source.Id]");
            viewString.Append(", \r\n                CreateRef(DataContext.BranchCode, row(T1.[InterBudgetaryTran");
            viewString.Append("sfers_RuleFilterKBK_BranchCodes.InterBudgetaryTransfers_RuleFilterKBK_BranchCode");
            viewString.Append("s_Target.Id]), [Tests.BranchCode]) AS [InterBudgetaryTransfers_RuleFilterKBK_Bra");
            viewString.Append("nchCodes.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes_Target]\r\n            ");
            viewString.Append("FROM (\r\n                SELECT \r\n                    T.idInterBudgetaryTransfers");
            viewString.Append("_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilterKBK_BranchCodes.InterBudget");
            viewString.Append("aryTransfers_RuleFilterKBK_BranchCodes_Source.Id], \r\n                    T.idBra");
            viewString.Append("nchCode AS [InterBudgetaryTransfers_RuleFilterKBK_BranchCodes.InterBudgetaryTran");
            viewString.Append("sfers_RuleFilterKBK_BranchCodes_Target.Id], \r\n                    True AS _from0");
            viewString.Append("\r\n                FROM CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKBr");
            viewString.Append("anchCode AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_BranchCodes", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView646()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2092);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_CodeSub");
            viewString.Append("sidys\r\n        [Tests.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys](T3.[In");
            viewString.Append("terBudgetaryTransfers_RuleFilterKBK_CodeSubsidys.InterBudgetaryTransfers_RuleFil");
            viewString.Append("terKBK_CodeSubsidys_Source], T3.[InterBudgetaryTransfers_RuleFilterKBK_CodeSubsi");
            viewString.Append("dys.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys_Target])\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys_S");
            viewString.Append("ource\r\n            CreateRef(DataContext.InterBudgetaryTransfers_RuleFilterKBK, ");
            viewString.Append("row(T2.[InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys.InterBudgetaryTransfe");
            viewString.Append("rs_RuleFilterKBK_CodeSubsidys_Source.Id]), [Tests.InterBudgetaryTransfers_RuleFi");
            viewString.Append("lterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys.InterBudgetaryT");
            viewString.Append("ransfers_RuleFilterKBK_CodeSubsidys_Source], \r\n            T2.[InterBudgetaryTra");
            viewString.Append("nsfers_RuleFilterKBK_CodeSubsidys.InterBudgetaryTransfers_RuleFilterKBK_CodeSubs");
            viewString.Append("idys_Target]\r\n        FROM (\r\n            SELECT -- Constructing InterBudgetaryT");
            viewString.Append("ransfers_RuleFilterKBK_CodeSubsidys_Target\r\n                T1.[InterBudgetaryTr");
            viewString.Append("ansfers_RuleFilterKBK_CodeSubsidys.InterBudgetaryTransfers_RuleFilterKBK_CodeSub");
            viewString.Append("sidys_Source.Id], \r\n                CreateRef(DataContext.CodeSubsidy, row(T1.[I");
            viewString.Append("nterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys.InterBudgetaryTransfers_RuleFi");
            viewString.Append("lterKBK_CodeSubsidys_Target.Id]), [Tests.CodeSubsidy]) AS [InterBudgetaryTransfe");
            viewString.Append("rs_RuleFilterKBK_CodeSubsidys.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys");
            viewString.Append("_Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idI");
            viewString.Append("nterBudgetaryTransfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilterKBK_C");
            viewString.Append("odeSubsidys.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys_Source.Id], \r\n   ");
            viewString.Append("                 T.idCodeSubsidy AS [InterBudgetaryTransfers_RuleFilterKBK_CodeS");
            viewString.Append("ubsidys.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys_Target.Id], \r\n       ");
            viewString.Append("             True AS _from0\r\n                FROM CodeFirstDatabase.InterBudgeta");
            viewString.Append("ryTransfers_RuleFilterKBKCodeSubsidy AS T\r\n            ) AS T1\r\n        ) AS T2\r");
            viewString.Append("\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_CodeSubsidys", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_DEKs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView647()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_DEKs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_DEKs\r\n  " +
                    "      [Tests.InterBudgetaryTransfers_RuleFilterKBK_DEKs](T3.[InterBudgetaryTrans" +
                    "fers_RuleFilterKBK_DEKs.InterBudgetaryTransfers_RuleFilterKBK_DEKs_Source], T3.[" +
                    "InterBudgetaryTransfers_RuleFilterKBK_DEKs.InterBudgetaryTransfers_RuleFilterKBK" +
                    "_DEKs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryTransfe" +
                    "rs_RuleFilterKBK_DEKs_Source\r\n            CreateRef(DataContext.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_DEKs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_DEKs_Source.Id]), [Tests.InterBudgetaryTransfers" +
                    "_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_DEKs.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK_DEKs_Source], \r\n            T2.[InterBudgetaryTransfers_Ru" +
                    "leFilterKBK_DEKs.InterBudgetaryTransfers_RuleFilterKBK_DEKs_Target]\r\n        FRO" +
                    "M (\r\n            SELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_DE" +
                    "Ks_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterKBK_DEKs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_DEKs_Source.Id], \r\n                CreateRef(Dat" +
                    "aContext.DEK, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_DEKs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_DEKs_Target.Id]), [Tests.DEK]) AS [InterBudgetaryTransfer" +
                    "s_RuleFilterKBK_DEKs.InterBudgetaryTransfers_RuleFilterKBK_DEKs_Target]\r\n       " +
                    "     FROM (\r\n                SELECT \r\n                    T.idInterBudgetaryTran" +
                    "sfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilterKBK_DEKs.InterBudgetar" +
                    "yTransfers_RuleFilterKBK_DEKs_Source.Id], \r\n                    T.idDEK AS [Inte" +
                    "rBudgetaryTransfers_RuleFilterKBK_DEKs.InterBudgetaryTransfers_RuleFilterKBK_DEK" +
                    "s_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFir" +
                    "stDatabase.InterBudgetaryTransfers_RuleFilterKBKDEK AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_DFKs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView648()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_DFKs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_DFKs\r\n  " +
                    "      [Tests.InterBudgetaryTransfers_RuleFilterKBK_DFKs](T3.[InterBudgetaryTrans" +
                    "fers_RuleFilterKBK_DFKs.InterBudgetaryTransfers_RuleFilterKBK_DFKs_Source], T3.[" +
                    "InterBudgetaryTransfers_RuleFilterKBK_DFKs.InterBudgetaryTransfers_RuleFilterKBK" +
                    "_DFKs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryTransfe" +
                    "rs_RuleFilterKBK_DFKs_Source\r\n            CreateRef(DataContext.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_DFKs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_DFKs_Source.Id]), [Tests.InterBudgetaryTransfers" +
                    "_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_DFKs.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK_DFKs_Source], \r\n            T2.[InterBudgetaryTransfers_Ru" +
                    "leFilterKBK_DFKs.InterBudgetaryTransfers_RuleFilterKBK_DFKs_Target]\r\n        FRO" +
                    "M (\r\n            SELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_DF" +
                    "Ks_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterKBK_DFKs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_DFKs_Source.Id], \r\n                CreateRef(Dat" +
                    "aContext.DFK, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_DFKs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_DFKs_Target.Id]), [Tests.DFK]) AS [InterBudgetaryTransfer" +
                    "s_RuleFilterKBK_DFKs.InterBudgetaryTransfers_RuleFilterKBK_DFKs_Target]\r\n       " +
                    "     FROM (\r\n                SELECT \r\n                    T.idInterBudgetaryTran" +
                    "sfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilterKBK_DFKs.InterBudgetar" +
                    "yTransfers_RuleFilterKBK_DFKs_Source.Id], \r\n                    T.idDFK AS [Inte" +
                    "rBudgetaryTransfers_RuleFilterKBK_DFKs.InterBudgetaryTransfers_RuleFilterKBK_DFK" +
                    "s_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFir" +
                    "stDatabase.InterBudgetaryTransfers_RuleFilterKBKDFK AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_DKRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView649()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_DKRs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_DKRs\r\n  " +
                    "      [Tests.InterBudgetaryTransfers_RuleFilterKBK_DKRs](T3.[InterBudgetaryTrans" +
                    "fers_RuleFilterKBK_DKRs.InterBudgetaryTransfers_RuleFilterKBK_DKRs_Source], T3.[" +
                    "InterBudgetaryTransfers_RuleFilterKBK_DKRs.InterBudgetaryTransfers_RuleFilterKBK" +
                    "_DKRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryTransfe" +
                    "rs_RuleFilterKBK_DKRs_Source\r\n            CreateRef(DataContext.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_DKRs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_DKRs_Source.Id]), [Tests.InterBudgetaryTransfers" +
                    "_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_DKRs.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK_DKRs_Source], \r\n            T2.[InterBudgetaryTransfers_Ru" +
                    "leFilterKBK_DKRs.InterBudgetaryTransfers_RuleFilterKBK_DKRs_Target]\r\n        FRO" +
                    "M (\r\n            SELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_DK" +
                    "Rs_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterKBK_DKRs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_DKRs_Source.Id], \r\n                CreateRef(Dat" +
                    "aContext.DKR, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_DKRs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_DKRs_Target.Id]), [Tests.DKR]) AS [InterBudgetaryTransfer" +
                    "s_RuleFilterKBK_DKRs.InterBudgetaryTransfers_RuleFilterKBK_DKRs_Target]\r\n       " +
                    "     FROM (\r\n                SELECT \r\n                    T.idInterBudgetaryTran" +
                    "sfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilterKBK_DKRs.InterBudgetar" +
                    "yTransfers_RuleFilterKBK_DKRs_Source.Id], \r\n                    T.idDKR AS [Inte" +
                    "rBudgetaryTransfers_RuleFilterKBK_DKRs.InterBudgetaryTransfers_RuleFilterKBK_DKR" +
                    "s_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFir" +
                    "stDatabase.InterBudgetaryTransfers_RuleFilterKBKDKR AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView650()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2148);
            viewString.Append("\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_Finance");
            viewString.Append("Sources\r\n        [Tests.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources](T3");
            viewString.Append(".[InterBudgetaryTransfers_RuleFilterKBK_FinanceSources.InterBudgetaryTransfers_R");
            viewString.Append("uleFilterKBK_FinanceSources_Source], T3.[InterBudgetaryTransfers_RuleFilterKBK_F");
            viewString.Append("inanceSources.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources_Target])\r\n   ");
            viewString.Append(" FROM (\r\n        SELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_Fi");
            viewString.Append("nanceSources_Source\r\n            CreateRef(DataContext.InterBudgetaryTransfers_R");
            viewString.Append("uleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_FinanceSources.Inter");
            viewString.Append("BudgetaryTransfers_RuleFilterKBK_FinanceSources_Source.Id]), [Tests.InterBudgeta");
            viewString.Append("ryTransfers_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_FinanceSou");
            viewString.Append("rces.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources_Source], \r\n           ");
            viewString.Append(" T2.[InterBudgetaryTransfers_RuleFilterKBK_FinanceSources.InterBudgetaryTransfer");
            viewString.Append("s_RuleFilterKBK_FinanceSources_Target]\r\n        FROM (\r\n            SELECT -- Co");
            viewString.Append("nstructing InterBudgetaryTransfers_RuleFilterKBK_FinanceSources_Target\r\n        ");
            viewString.Append("        T1.[InterBudgetaryTransfers_RuleFilterKBK_FinanceSources.InterBudgetaryT");
            viewString.Append("ransfers_RuleFilterKBK_FinanceSources_Source.Id], \r\n                CreateRef(Da");
            viewString.Append("taContext.FinanceSource, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_FinanceSo");
            viewString.Append("urces.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources_Target.Id]), [Tests.F");
            viewString.Append("inanceSource]) AS [InterBudgetaryTransfers_RuleFilterKBK_FinanceSources.InterBud");
            viewString.Append("getaryTransfers_RuleFilterKBK_FinanceSources_Target]\r\n            FROM (\r\n      ");
            viewString.Append("          SELECT \r\n                    T.idInterBudgetaryTransfers_RuleFilterKBK");
            viewString.Append(" AS [InterBudgetaryTransfers_RuleFilterKBK_FinanceSources.InterBudgetaryTransfer");
            viewString.Append("s_RuleFilterKBK_FinanceSources_Source.Id], \r\n                    T.idFinanceSour");
            viewString.Append("ce AS [InterBudgetaryTransfers_RuleFilterKBK_FinanceSources.InterBudgetaryTransf");
            viewString.Append("ers_RuleFilterKBK_FinanceSources_Target.Id], \r\n                    True AS _from");
            viewString.Append("0\r\n                FROM CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKF");
            viewString.Append("inanceSource AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_FinanceSources", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_KCSRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView651()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_KCSRs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_KCSRs\r\n " +
                    "       [Tests.InterBudgetaryTransfers_RuleFilterKBK_KCSRs](T3.[InterBudgetaryTra" +
                    "nsfers_RuleFilterKBK_KCSRs.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Source], " +
                    "T3.[InterBudgetaryTransfers_RuleFilterKBK_KCSRs.InterBudgetaryTransfers_RuleFilt" +
                    "erKBK_KCSRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KCSRs_Source\r\n            CreateRef(DataContext.InterBudg" +
                    "etaryTransfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_KCSR" +
                    "s.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Source.Id]), [Tests.InterBudgetary" +
                    "Transfers_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_KCSRs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_KCSRs_Source], \r\n            T2.[InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KCSRs.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Target]" +
                    "\r\n        FROM (\r\n            SELECT -- Constructing InterBudgetaryTransfers_Rul" +
                    "eFilterKBK_KCSRs_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterK" +
                    "BK_KCSRs.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Source.Id], \r\n             " +
                    "   CreateRef(DataContext.KCSR, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_KCS" +
                    "Rs.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Target.Id]), [Tests.KCSR]) AS [In" +
                    "terBudgetaryTransfers_RuleFilterKBK_KCSRs.InterBudgetaryTransfers_RuleFilterKBK_" +
                    "KCSRs_Target]\r\n            FROM (\r\n                SELECT \r\n                    " +
                    "T.idInterBudgetaryTransfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilter" +
                    "KBK_KCSRs.InterBudgetaryTransfers_RuleFilterKBK_KCSRs_Source.Id], \r\n            " +
                    "        T.idKCSR AS [InterBudgetaryTransfers_RuleFilterKBK_KCSRs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KCSRs_Target.Id], \r\n                    True AS _from0\r\n " +
                    "               FROM CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKCSR " +
                    "AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_KFOs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView652()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_KFOs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_KFOs\r\n  " +
                    "      [Tests.InterBudgetaryTransfers_RuleFilterKBK_KFOs](T3.[InterBudgetaryTrans" +
                    "fers_RuleFilterKBK_KFOs.InterBudgetaryTransfers_RuleFilterKBK_KFOs_Source], T3.[" +
                    "InterBudgetaryTransfers_RuleFilterKBK_KFOs.InterBudgetaryTransfers_RuleFilterKBK" +
                    "_KFOs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryTransfe" +
                    "rs_RuleFilterKBK_KFOs_Source\r\n            CreateRef(DataContext.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_KFOs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_KFOs_Source.Id]), [Tests.InterBudgetaryTransfers" +
                    "_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_KFOs.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK_KFOs_Source], \r\n            T2.[InterBudgetaryTransfers_Ru" +
                    "leFilterKBK_KFOs.InterBudgetaryTransfers_RuleFilterKBK_KFOs_Target]\r\n        FRO" +
                    "M (\r\n            SELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_KF" +
                    "Os_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterKBK_KFOs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_KFOs_Source.Id], \r\n                CreateRef(Dat" +
                    "aContext.KFO, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_KFOs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KFOs_Target.Id]), [Tests.KFO]) AS [InterBudgetaryTransfer" +
                    "s_RuleFilterKBK_KFOs.InterBudgetaryTransfers_RuleFilterKBK_KFOs_Target]\r\n       " +
                    "     FROM (\r\n                SELECT \r\n                    T.idInterBudgetaryTran" +
                    "sfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilterKBK_KFOs.InterBudgetar" +
                    "yTransfers_RuleFilterKBK_KFOs_Source.Id], \r\n                    T.idKFO AS [Inte" +
                    "rBudgetaryTransfers_RuleFilterKBK_KFOs.InterBudgetaryTransfers_RuleFilterKBK_KFO" +
                    "s_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFir" +
                    "stDatabase.InterBudgetaryTransfers_RuleFilterKBKKFO AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView653()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_KOSGUs\r\n" +
                    "        [Tests.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs](T3.[InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KOSGUs.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Sourc" +
                    "e], T3.[InterBudgetaryTransfers_RuleFilterKBK_KOSGUs.InterBudgetaryTransfers_Rul" +
                    "eFilterKBK_KOSGUs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudg" +
                    "etaryTransfers_RuleFilterKBK_KOSGUs_Source\r\n            CreateRef(DataContext.In" +
                    "terBudgetaryTransfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterK" +
                    "BK_KOSGUs.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Source.Id]), [Tests.Inter" +
                    "BudgetaryTransfers_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_KOS" +
                    "GUs.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Source], \r\n            T2.[Inte" +
                    "rBudgetaryTransfers_RuleFilterKBK_KOSGUs.InterBudgetaryTransfers_RuleFilterKBK_K" +
                    "OSGUs_Target]\r\n        FROM (\r\n            SELECT -- Constructing InterBudgetary" +
                    "Transfers_RuleFilterKBK_KOSGUs_Target\r\n                T1.[InterBudgetaryTransfe" +
                    "rs_RuleFilterKBK_KOSGUs.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Source.Id]," +
                    " \r\n                CreateRef(DataContext.KOSGU, row(T1.[InterBudgetaryTransfers_" +
                    "RuleFilterKBK_KOSGUs.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Target.Id]), [" +
                    "Tests.KOSGU]) AS [InterBudgetaryTransfers_RuleFilterKBK_KOSGUs.InterBudgetaryTra" +
                    "nsfers_RuleFilterKBK_KOSGUs_Target]\r\n            FROM (\r\n                SELECT " +
                    "\r\n                    T.idInterBudgetaryTransfers_RuleFilterKBK AS [InterBudgeta" +
                    "ryTransfers_RuleFilterKBK_KOSGUs.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_So" +
                    "urce.Id], \r\n                    T.idKOSGU AS [InterBudgetaryTransfers_RuleFilter" +
                    "KBK_KOSGUs.InterBudgetaryTransfers_RuleFilterKBK_KOSGUs_Target.Id], \r\n          " +
                    "          True AS _from0\r\n                FROM CodeFirstDatabase.InterBudgetaryT" +
                    "ransfers_RuleFilterKBKKOSGU AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS" +
                    " T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_KVRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView654()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_KVRs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_KVRs\r\n  " +
                    "      [Tests.InterBudgetaryTransfers_RuleFilterKBK_KVRs](T3.[InterBudgetaryTrans" +
                    "fers_RuleFilterKBK_KVRs.InterBudgetaryTransfers_RuleFilterKBK_KVRs_Source], T3.[" +
                    "InterBudgetaryTransfers_RuleFilterKBK_KVRs.InterBudgetaryTransfers_RuleFilterKBK" +
                    "_KVRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryTransfe" +
                    "rs_RuleFilterKBK_KVRs_Source\r\n            CreateRef(DataContext.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_KVRs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_KVRs_Source.Id]), [Tests.InterBudgetaryTransfers" +
                    "_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_KVRs.InterBudgetaryTr" +
                    "ansfers_RuleFilterKBK_KVRs_Source], \r\n            T2.[InterBudgetaryTransfers_Ru" +
                    "leFilterKBK_KVRs.InterBudgetaryTransfers_RuleFilterKBK_KVRs_Target]\r\n        FRO" +
                    "M (\r\n            SELECT -- Constructing InterBudgetaryTransfers_RuleFilterKBK_KV" +
                    "Rs_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterKBK_KVRs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_KVRs_Source.Id], \r\n                CreateRef(Dat" +
                    "aContext.KVR, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_KVRs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KVRs_Target.Id]), [Tests.KVR]) AS [InterBudgetaryTransfer" +
                    "s_RuleFilterKBK_KVRs.InterBudgetaryTransfers_RuleFilterKBK_KVRs_Target]\r\n       " +
                    "     FROM (\r\n                SELECT \r\n                    T.idInterBudgetaryTran" +
                    "sfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilterKBK_KVRs.InterBudgetar" +
                    "yTransfers_RuleFilterKBK_KVRs_Source.Id], \r\n                    T.idKVR AS [Inte" +
                    "rBudgetaryTransfers_RuleFilterKBK_KVRs.InterBudgetaryTransfers_RuleFilterKBK_KVR" +
                    "s_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFir" +
                    "stDatabase.InterBudgetaryTransfers_RuleFilterKBKKVR AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_KVSRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView655()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_KVSRs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_KVSRs\r\n " +
                    "       [Tests.InterBudgetaryTransfers_RuleFilterKBK_KVSRs](T3.[InterBudgetaryTra" +
                    "nsfers_RuleFilterKBK_KVSRs.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Source], " +
                    "T3.[InterBudgetaryTransfers_RuleFilterKBK_KVSRs.InterBudgetaryTransfers_RuleFilt" +
                    "erKBK_KVSRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KVSRs_Source\r\n            CreateRef(DataContext.InterBudg" +
                    "etaryTransfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_KVSR" +
                    "s.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Source.Id]), [Tests.InterBudgetary" +
                    "Transfers_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_KVSRs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_KVSRs_Source], \r\n            T2.[InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KVSRs.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Target]" +
                    "\r\n        FROM (\r\n            SELECT -- Constructing InterBudgetaryTransfers_Rul" +
                    "eFilterKBK_KVSRs_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterK" +
                    "BK_KVSRs.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Source.Id], \r\n             " +
                    "   CreateRef(DataContext.KVSR, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_KVS" +
                    "Rs.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Target.Id]), [Tests.KVSR]) AS [In" +
                    "terBudgetaryTransfers_RuleFilterKBK_KVSRs.InterBudgetaryTransfers_RuleFilterKBK_" +
                    "KVSRs_Target]\r\n            FROM (\r\n                SELECT \r\n                    " +
                    "T.idInterBudgetaryTransfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilter" +
                    "KBK_KVSRs.InterBudgetaryTransfers_RuleFilterKBK_KVSRs_Source.Id], \r\n            " +
                    "        T.idKVSR AS [InterBudgetaryTransfers_RuleFilterKBK_KVSRs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_KVSRs_Target.Id], \r\n                    True AS _from0\r\n " +
                    "               FROM CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKKVSR " +
                    "AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_RuleFilterKBK_RZPRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView656()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_RuleFilterKBK_RZPRs", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_RuleFilterKBK_RZPRs\r\n " +
                    "       [Tests.InterBudgetaryTransfers_RuleFilterKBK_RZPRs](T3.[InterBudgetaryTra" +
                    "nsfers_RuleFilterKBK_RZPRs.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Source], " +
                    "T3.[InterBudgetaryTransfers_RuleFilterKBK_RZPRs.InterBudgetaryTransfers_RuleFilt" +
                    "erKBK_RZPRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_RZPRs_Source\r\n            CreateRef(DataContext.InterBudg" +
                    "etaryTransfers_RuleFilterKBK, row(T2.[InterBudgetaryTransfers_RuleFilterKBK_RZPR" +
                    "s.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Source.Id]), [Tests.InterBudgetary" +
                    "Transfers_RuleFilterKBK]) AS [InterBudgetaryTransfers_RuleFilterKBK_RZPRs.InterB" +
                    "udgetaryTransfers_RuleFilterKBK_RZPRs_Source], \r\n            T2.[InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_RZPRs.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Target]" +
                    "\r\n        FROM (\r\n            SELECT -- Constructing InterBudgetaryTransfers_Rul" +
                    "eFilterKBK_RZPRs_Target\r\n                T1.[InterBudgetaryTransfers_RuleFilterK" +
                    "BK_RZPRs.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Source.Id], \r\n             " +
                    "   CreateRef(DataContext.RZPR, row(T1.[InterBudgetaryTransfers_RuleFilterKBK_RZP" +
                    "Rs.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Target.Id]), [Tests.RZPR]) AS [In" +
                    "terBudgetaryTransfers_RuleFilterKBK_RZPRs.InterBudgetaryTransfers_RuleFilterKBK_" +
                    "RZPRs_Target]\r\n            FROM (\r\n                SELECT \r\n                    " +
                    "T.idInterBudgetaryTransfers_RuleFilterKBK AS [InterBudgetaryTransfers_RuleFilter" +
                    "KBK_RZPRs.InterBudgetaryTransfers_RuleFilterKBK_RZPRs_Source.Id], \r\n            " +
                    "        T.idRZPR AS [InterBudgetaryTransfers_RuleFilterKBK_RZPRs.InterBudgetaryT" +
                    "ransfers_RuleFilterKBK_RZPRs_Target.Id], \r\n                    True AS _from0\r\n " +
                    "               FROM CodeFirstDatabase.InterBudgetaryTransfers_RuleFilterKBKRZPR " +
                    "AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.InterBudgetaryTransfers_BudgetLevel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView657()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.InterBudgetaryTransfers_BudgetLevel", "\r\n    SELECT VALUE -- Constructing InterBudgetaryTransfers_BudgetLevel\r\n        [" +
                    "Tests.InterBudgetaryTransfers_BudgetLevel](T3.[InterBudgetaryTransfers_BudgetLev" +
                    "el.InterBudgetaryTransfers_BudgetLevel_Source], T3.[InterBudgetaryTransfers_Budg" +
                    "etLevel.InterBudgetaryTransfers_BudgetLevel_Target])\r\n    FROM (\r\n        SELECT" +
                    " -- Constructing InterBudgetaryTransfers_BudgetLevel_Source\r\n            CreateR" +
                    "ef(DataContext.InterBudgetaryTransfers, row(T2.[InterBudgetaryTransfers_BudgetLe" +
                    "vel.InterBudgetaryTransfers_BudgetLevel_Source.Id]), [Tests.InterBudgetaryTransf" +
                    "ers]) AS [InterBudgetaryTransfers_BudgetLevel.InterBudgetaryTransfers_BudgetLeve" +
                    "l_Source], \r\n            T2.[InterBudgetaryTransfers_BudgetLevel.InterBudgetaryT" +
                    "ransfers_BudgetLevel_Target]\r\n        FROM (\r\n            SELECT -- Constructing" +
                    " InterBudgetaryTransfers_BudgetLevel_Target\r\n                T1.[InterBudgetaryT" +
                    "ransfers_BudgetLevel.InterBudgetaryTransfers_BudgetLevel_Source.Id], \r\n         " +
                    "       CreateRef(DataContext.BudgetLevel, row(T1.[InterBudgetaryTransfers_Budget" +
                    "Level.InterBudgetaryTransfers_BudgetLevel_Target.Id]), [Tests.BudgetLevel]) AS [" +
                    "InterBudgetaryTransfers_BudgetLevel.InterBudgetaryTransfers_BudgetLevel_Target]\r" +
                    "\n            FROM (\r\n                SELECT \r\n                    T.idInterBudge" +
                    "taryTransfers AS [InterBudgetaryTransfers_BudgetLevel.InterBudgetaryTransfers_Bu" +
                    "dgetLevel_Source.Id], \r\n                    T.BudgetLevel AS [InterBudgetaryTran" +
                    "sfers_BudgetLevel.InterBudgetaryTransfers_BudgetLevel_Target.Id], \r\n            " +
                    "        True AS _from0\r\n                FROM CodeFirstDatabase.InterBudgetaryTra" +
                    "nsfersBudgetLevel AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.RegistryGoal_ElementTypeSystemGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView658()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.RegistryGoal_ElementTypeSystemGoal", "\r\n    SELECT VALUE -- Constructing RegistryGoal_ElementTypeSystemGoal\r\n        [T" +
                    "ests.RegistryGoal_ElementTypeSystemGoal](T3.[RegistryGoal_ElementTypeSystemGoal." +
                    "RegistryGoal_ElementTypeSystemGoal_Source], T3.[RegistryGoal_ElementTypeSystemGo" +
                    "al.RegistryGoal_ElementTypeSystemGoal_Target])\r\n    FROM (\r\n        SELECT -- Co" +
                    "nstructing RegistryGoal_ElementTypeSystemGoal_Source\r\n            CreateRef(Data" +
                    "Context.RegistryGoal, row(T2.[RegistryGoal_ElementTypeSystemGoal.RegistryGoal_El" +
                    "ementTypeSystemGoal_Source.Id]), [Tests.RegistryGoal]) AS [RegistryGoal_ElementT" +
                    "ypeSystemGoal.RegistryGoal_ElementTypeSystemGoal_Source], \r\n            T2.[Regi" +
                    "stryGoal_ElementTypeSystemGoal.RegistryGoal_ElementTypeSystemGoal_Target]\r\n     " +
                    "   FROM (\r\n            SELECT -- Constructing RegistryGoal_ElementTypeSystemGoal" +
                    "_Target\r\n                T1.[RegistryGoal_ElementTypeSystemGoal.RegistryGoal_Ele" +
                    "mentTypeSystemGoal_Source.Id], \r\n                CreateRef(DataContext.ElementTy" +
                    "peSystemGoal, row(T1.[RegistryGoal_ElementTypeSystemGoal.RegistryGoal_ElementTyp" +
                    "eSystemGoal_Target.Id]), [Tests.ElementTypeSystemGoal]) AS [RegistryGoal_Element" +
                    "TypeSystemGoal.RegistryGoal_ElementTypeSystemGoal_Target]\r\n            FROM (\r\n " +
                    "               SELECT \r\n                    T.idRegistryGoal AS [RegistryGoal_El" +
                    "ementTypeSystemGoal.RegistryGoal_ElementTypeSystemGoal_Source.Id], \r\n           " +
                    "         T.idElementTypeSystemGoal AS [RegistryGoal_ElementTypeSystemGoal.Regist" +
                    "ryGoal_ElementTypeSystemGoal_Target.Id], \r\n                    True AS _from0\r\n " +
                    "               FROM CodeFirstDatabase.RegistryGoalElementTypeSystemGoal AS T\r\n  " +
                    "          ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView659()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3190);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_ExpenseObli");
            viewString.Append("gationType_BudgetExpenseStructure_BaseFilter\r\n        [Tests.BudgetExpenseStruct");
            viewString.Append("ure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter](T3.[Budg");
            viewString.Append("etExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseF");
            viewString.Append("ilter.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStruc");
            viewString.Append("ture_BaseFilter_Source], T3.[BudgetExpenseStructure_BaseFilter_ExpenseObligation");
            viewString.Append("Type_BudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFilter_Expense");
            viewString.Append("ObligationType_BudgetExpenseStructure_BaseFilter_Target])\r\n    FROM (\r\n        S");
            viewString.Append("ELECT -- Constructing BudgetExpenseStructure_BaseFilter_ExpenseObligationType_Bu");
            viewString.Append("dgetExpenseStructure_BaseFilter_Source\r\n            CreateRef(DataContext.Budget");
            viewString.Append("ExpenseStructure_BaseFilter_ExpenseObligationType, row(T2.[BudgetExpenseStructur");
            viewString.Append("e_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter.BudgetExpen");
            viewString.Append("seStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_S");
            viewString.Append("ource.Id]), [Tests.BudgetExpenseStructure_BaseFilter_ExpenseObligationType]) AS ");
            viewString.Append("[BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_");
            viewString.Append("BaseFilter.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpense");
            viewString.Append("Structure_BaseFilter_Source], \r\n            T2.[BudgetExpenseStructure_BaseFilte");
            viewString.Append("r_ExpenseObligationType_BudgetExpenseStructure_BaseFilter.BudgetExpenseStructure");
            viewString.Append("_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Target]\r\n   ");
            viewString.Append("     FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure_BaseFilte");
            viewString.Append("r_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Target\r\n              ");
            viewString.Append("  T1.[BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpenseStruc");
            viewString.Append("ture_BaseFilter.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetEx");
            viewString.Append("penseStructure_BaseFilter_Source.Id], \r\n                CreateRef(DataContext.Bu");
            viewString.Append("dgetExpenseStructure_BaseFilter, row(T1.[BudgetExpenseStructure_BaseFilter_Expen");
            viewString.Append("seObligationType_BudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFi");
            viewString.Append("lter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Target.Id]), [Tests");
            viewString.Append(".BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilter_Expen");
            viewString.Append("seObligationType_BudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFi");
            viewString.Append("lter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Target]\r\n          ");
            viewString.Append("  FROM (\r\n                SELECT \r\n                    T.BudgetExpenseStructure_");
            viewString.Append("BaseFilter_ExpenseObligationType_Id AS [BudgetExpenseStructure_BaseFilter_Expens");
            viewString.Append("eObligationType_BudgetExpenseStructure_BaseFilter.BudgetExpenseStructure_BaseFil");
            viewString.Append("ter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Source.Id], \r\n      ");
            viewString.Append("              T.BudgetExpenseStructure_BaseFilter_Id AS [BudgetExpenseStructure_");
            viewString.Append("BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter.BudgetExpense");
            viewString.Append("Structure_BaseFilter_ExpenseObligationType_BudgetExpenseStructure_BaseFilter_Tar");
            viewString.Append("get.Id], \r\n                    True AS _from0\r\n                FROM CodeFirstDat");
            viewString.Append("abase.BudgetExpenseStructure_BaseFilter_ExpenseObligationTypeBudgetExpenseStruct");
            viewString.Append("ure_BaseFilter AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_ExpenseObligationType_BudgetExpense" +
                    "Structure_BaseFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView660()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_FinanceSource", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_FinanceSourc" +
                    "e\r\n        [Tests.BudgetExpenseStructure_BaseFilter_FinanceSource](T3.[BudgetExp" +
                    "enseStructure_BaseFilter_FinanceSource.BudgetExpenseStructure_BaseFilter_Finance" +
                    "Source_Source], T3.[BudgetExpenseStructure_BaseFilter_FinanceSource.BudgetExpens" +
                    "eStructure_BaseFilter_FinanceSource_Target])\r\n    FROM (\r\n        SELECT -- Cons" +
                    "tructing BudgetExpenseStructure_BaseFilter_FinanceSource_Source\r\n            Cre" +
                    "ateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[BudgetExpenseStruc" +
                    "ture_BaseFilter_FinanceSource.BudgetExpenseStructure_BaseFilter_FinanceSource_So" +
                    "urce.Id]), [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure" +
                    "_BaseFilter_FinanceSource.BudgetExpenseStructure_BaseFilter_FinanceSource_Source" +
                    "], \r\n            T2.[BudgetExpenseStructure_BaseFilter_FinanceSource.BudgetExpen" +
                    "seStructure_BaseFilter_FinanceSource_Target]\r\n        FROM (\r\n            SELECT" +
                    " -- Constructing BudgetExpenseStructure_BaseFilter_FinanceSource_Target\r\n       " +
                    "         T1.[BudgetExpenseStructure_BaseFilter_FinanceSource.BudgetExpenseStruct" +
                    "ure_BaseFilter_FinanceSource_Source.Id], \r\n                CreateRef(DataContext" +
                    ".FinanceSource, row(T1.[BudgetExpenseStructure_BaseFilter_FinanceSource.BudgetEx" +
                    "penseStructure_BaseFilter_FinanceSource_Target.Id]), [Tests.FinanceSource]) AS [" +
                    "BudgetExpenseStructure_BaseFilter_FinanceSource.BudgetExpenseStructure_BaseFilte" +
                    "r_FinanceSource_Target]\r\n            FROM (\r\n                SELECT \r\n          " +
                    "          T.idBudgetExpenseStructure_BaseFilter AS [BudgetExpenseStructure_BaseF" +
                    "ilter_FinanceSource.BudgetExpenseStructure_BaseFilter_FinanceSource_Source.Id], " +
                    "\r\n                    T.idFinanceSource AS [BudgetExpenseStructure_BaseFilter_Fi" +
                    "nanceSource.BudgetExpenseStructure_BaseFilter_FinanceSource_Target.Id], \r\n      " +
                    "              True AS _from0\r\n                FROM CodeFirstDatabase.BudgetExpen" +
                    "seStructure_BaseFilterFinanceSource AS T\r\n            ) AS T1\r\n        ) AS T2\r\n" +
                    "    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_KFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView661()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_KFO", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_KFO\r\n       " +
                    " [Tests.BudgetExpenseStructure_BaseFilter_KFO](T3.[BudgetExpenseStructure_BaseFi" +
                    "lter_KFO.BudgetExpenseStructure_BaseFilter_KFO_Source], T3.[BudgetExpenseStructu" +
                    "re_BaseFilter_KFO.BudgetExpenseStructure_BaseFilter_KFO_Target])\r\n    FROM (\r\n  " +
                    "      SELECT -- Constructing BudgetExpenseStructure_BaseFilter_KFO_Source\r\n     " +
                    "       CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[BudgetEx" +
                    "penseStructure_BaseFilter_KFO.BudgetExpenseStructure_BaseFilter_KFO_Source.Id])," +
                    " [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilte" +
                    "r_KFO.BudgetExpenseStructure_BaseFilter_KFO_Source], \r\n            T2.[BudgetExp" +
                    "enseStructure_BaseFilter_KFO.BudgetExpenseStructure_BaseFilter_KFO_Target]\r\n    " +
                    "    FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure_BaseFilter" +
                    "_KFO_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter_KFO.BudgetExp" +
                    "enseStructure_BaseFilter_KFO_Source.Id], \r\n                CreateRef(DataContext" +
                    ".KFO, row(T1.[BudgetExpenseStructure_BaseFilter_KFO.BudgetExpenseStructure_BaseF" +
                    "ilter_KFO_Target.Id]), [Tests.KFO]) AS [BudgetExpenseStructure_BaseFilter_KFO.Bu" +
                    "dgetExpenseStructure_BaseFilter_KFO_Target]\r\n            FROM (\r\n               " +
                    " SELECT \r\n                    T.idBudgetExpenseStructure_BaseFilter AS [BudgetEx" +
                    "penseStructure_BaseFilter_KFO.BudgetExpenseStructure_BaseFilter_KFO_Source.Id], " +
                    "\r\n                    T.idKFO AS [BudgetExpenseStructure_BaseFilter_KFO.BudgetEx" +
                    "penseStructure_BaseFilter_KFO_Target.Id], \r\n                    True AS _from0\r\n" +
                    "                FROM CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKFO AS T" +
                    "\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_KVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView662()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_KVSR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_KVSR\r\n      " +
                    "  [Tests.BudgetExpenseStructure_BaseFilter_KVSR](T3.[BudgetExpenseStructure_Base" +
                    "Filter_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_Source], T3.[BudgetExpenseStr" +
                    "ucture_BaseFilter_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing BudgetExpenseStructure_BaseFilter_KVSR_Source" +
                    "\r\n            CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[B" +
                    "udgetExpenseStructure_BaseFilter_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_Sou" +
                    "rce.Id]), [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_" +
                    "BaseFilter_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_Source], \r\n            T2" +
                    ".[BudgetExpenseStructure_BaseFilter_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_" +
                    "Target]\r\n        FROM (\r\n            SELECT -- Constructing BudgetExpenseStructu" +
                    "re_BaseFilter_KVSR_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter" +
                    "_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_Source.Id], \r\n                Creat" +
                    "eRef(DataContext.KVSR, row(T1.[BudgetExpenseStructure_BaseFilter_KVSR.BudgetExpe" +
                    "nseStructure_BaseFilter_KVSR_Target.Id]), [Tests.KVSR]) AS [BudgetExpenseStructu" +
                    "re_BaseFilter_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idBudgetExpenseStructure_B" +
                    "aseFilter AS [BudgetExpenseStructure_BaseFilter_KVSR.BudgetExpenseStructure_Base" +
                    "Filter_KVSR_Source.Id], \r\n                    T.idKVSR AS [BudgetExpenseStructur" +
                    "e_BaseFilter_KVSR.BudgetExpenseStructure_BaseFilter_KVSR_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.BudgetExpenseS" +
                    "tructure_BaseFilterKVSR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_RZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView663()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_RZPR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_RZPR\r\n      " +
                    "  [Tests.BudgetExpenseStructure_BaseFilter_RZPR](T3.[BudgetExpenseStructure_Base" +
                    "Filter_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_Source], T3.[BudgetExpenseStr" +
                    "ucture_BaseFilter_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing BudgetExpenseStructure_BaseFilter_RZPR_Source" +
                    "\r\n            CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[B" +
                    "udgetExpenseStructure_BaseFilter_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_Sou" +
                    "rce.Id]), [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_" +
                    "BaseFilter_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_Source], \r\n            T2" +
                    ".[BudgetExpenseStructure_BaseFilter_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_" +
                    "Target]\r\n        FROM (\r\n            SELECT -- Constructing BudgetExpenseStructu" +
                    "re_BaseFilter_RZPR_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter" +
                    "_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_Source.Id], \r\n                Creat" +
                    "eRef(DataContext.RZPR, row(T1.[BudgetExpenseStructure_BaseFilter_RZPR.BudgetExpe" +
                    "nseStructure_BaseFilter_RZPR_Target.Id]), [Tests.RZPR]) AS [BudgetExpenseStructu" +
                    "re_BaseFilter_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idBudgetExpenseStructure_B" +
                    "aseFilter AS [BudgetExpenseStructure_BaseFilter_RZPR.BudgetExpenseStructure_Base" +
                    "Filter_RZPR_Source.Id], \r\n                    T.idRZPR AS [BudgetExpenseStructur" +
                    "e_BaseFilter_RZPR.BudgetExpenseStructure_BaseFilter_RZPR_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.BudgetExpenseS" +
                    "tructure_BaseFilterRZPR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_KCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView664()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_KCSR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_KCSR\r\n      " +
                    "  [Tests.BudgetExpenseStructure_BaseFilter_KCSR](T3.[BudgetExpenseStructure_Base" +
                    "Filter_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_Source], T3.[BudgetExpenseStr" +
                    "ucture_BaseFilter_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing BudgetExpenseStructure_BaseFilter_KCSR_Source" +
                    "\r\n            CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[B" +
                    "udgetExpenseStructure_BaseFilter_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_Sou" +
                    "rce.Id]), [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_" +
                    "BaseFilter_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_Source], \r\n            T2" +
                    ".[BudgetExpenseStructure_BaseFilter_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_" +
                    "Target]\r\n        FROM (\r\n            SELECT -- Constructing BudgetExpenseStructu" +
                    "re_BaseFilter_KCSR_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter" +
                    "_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_Source.Id], \r\n                Creat" +
                    "eRef(DataContext.KCSR, row(T1.[BudgetExpenseStructure_BaseFilter_KCSR.BudgetExpe" +
                    "nseStructure_BaseFilter_KCSR_Target.Id]), [Tests.KCSR]) AS [BudgetExpenseStructu" +
                    "re_BaseFilter_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_Target]\r\n            F" +
                    "ROM (\r\n                SELECT \r\n                    T.idBudgetExpenseStructure_B" +
                    "aseFilter AS [BudgetExpenseStructure_BaseFilter_KCSR.BudgetExpenseStructure_Base" +
                    "Filter_KCSR_Source.Id], \r\n                    T.idKCSR AS [BudgetExpenseStructur" +
                    "e_BaseFilter_KCSR.BudgetExpenseStructure_BaseFilter_KCSR_Target.Id], \r\n         " +
                    "           True AS _from0\r\n                FROM CodeFirstDatabase.BudgetExpenseS" +
                    "tructure_BaseFilterKCSR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_KVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView665()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_KVR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_KVR\r\n       " +
                    " [Tests.BudgetExpenseStructure_BaseFilter_KVR](T3.[BudgetExpenseStructure_BaseFi" +
                    "lter_KVR.BudgetExpenseStructure_BaseFilter_KVR_Source], T3.[BudgetExpenseStructu" +
                    "re_BaseFilter_KVR.BudgetExpenseStructure_BaseFilter_KVR_Target])\r\n    FROM (\r\n  " +
                    "      SELECT -- Constructing BudgetExpenseStructure_BaseFilter_KVR_Source\r\n     " +
                    "       CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[BudgetEx" +
                    "penseStructure_BaseFilter_KVR.BudgetExpenseStructure_BaseFilter_KVR_Source.Id])," +
                    " [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilte" +
                    "r_KVR.BudgetExpenseStructure_BaseFilter_KVR_Source], \r\n            T2.[BudgetExp" +
                    "enseStructure_BaseFilter_KVR.BudgetExpenseStructure_BaseFilter_KVR_Target]\r\n    " +
                    "    FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure_BaseFilter" +
                    "_KVR_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter_KVR.BudgetExp" +
                    "enseStructure_BaseFilter_KVR_Source.Id], \r\n                CreateRef(DataContext" +
                    ".KVR, row(T1.[BudgetExpenseStructure_BaseFilter_KVR.BudgetExpenseStructure_BaseF" +
                    "ilter_KVR_Target.Id]), [Tests.KVR]) AS [BudgetExpenseStructure_BaseFilter_KVR.Bu" +
                    "dgetExpenseStructure_BaseFilter_KVR_Target]\r\n            FROM (\r\n               " +
                    " SELECT \r\n                    T.idBudgetExpenseStructure_BaseFilter AS [BudgetEx" +
                    "penseStructure_BaseFilter_KVR.BudgetExpenseStructure_BaseFilter_KVR_Source.Id], " +
                    "\r\n                    T.idKVR AS [BudgetExpenseStructure_BaseFilter_KVR.BudgetEx" +
                    "penseStructure_BaseFilter_KVR_Target.Id], \r\n                    True AS _from0\r\n" +
                    "                FROM CodeFirstDatabase.BudgetExpenseStructure_BaseFilterKVR AS T" +
                    "\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_KOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView666()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_KOSGU", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_KOSGU\r\n     " +
                    "   [Tests.BudgetExpenseStructure_BaseFilter_KOSGU](T3.[BudgetExpenseStructure_Ba" +
                    "seFilter_KOSGU.BudgetExpenseStructure_BaseFilter_KOSGU_Source], T3.[BudgetExpens" +
                    "eStructure_BaseFilter_KOSGU.BudgetExpenseStructure_BaseFilter_KOSGU_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_BaseFilter_KOSGU" +
                    "_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, ro" +
                    "w(T2.[BudgetExpenseStructure_BaseFilter_KOSGU.BudgetExpenseStructure_BaseFilter_" +
                    "KOSGU_Source.Id]), [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseS" +
                    "tructure_BaseFilter_KOSGU.BudgetExpenseStructure_BaseFilter_KOSGU_Source], \r\n   " +
                    "         T2.[BudgetExpenseStructure_BaseFilter_KOSGU.BudgetExpenseStructure_Base" +
                    "Filter_KOSGU_Target]\r\n        FROM (\r\n            SELECT -- Constructing BudgetE" +
                    "xpenseStructure_BaseFilter_KOSGU_Target\r\n                T1.[BudgetExpenseStruct" +
                    "ure_BaseFilter_KOSGU.BudgetExpenseStructure_BaseFilter_KOSGU_Source.Id], \r\n     " +
                    "           CreateRef(DataContext.KOSGU, row(T1.[BudgetExpenseStructure_BaseFilte" +
                    "r_KOSGU.BudgetExpenseStructure_BaseFilter_KOSGU_Target.Id]), [Tests.KOSGU]) AS [" +
                    "BudgetExpenseStructure_BaseFilter_KOSGU.BudgetExpenseStructure_BaseFilter_KOSGU_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idBu" +
                    "dgetExpenseStructure_BaseFilter AS [BudgetExpenseStructure_BaseFilter_KOSGU.Budg" +
                    "etExpenseStructure_BaseFilter_KOSGU_Source.Id], \r\n                    T.idKOSGU " +
                    "AS [BudgetExpenseStructure_BaseFilter_KOSGU.BudgetExpenseStructure_BaseFilter_KO" +
                    "SGU_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.BudgetExpenseStructure_BaseFilterKOSGU AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_DFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView667()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_DFK", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_DFK\r\n       " +
                    " [Tests.BudgetExpenseStructure_BaseFilter_DFK](T3.[BudgetExpenseStructure_BaseFi" +
                    "lter_DFK.BudgetExpenseStructure_BaseFilter_DFK_Source], T3.[BudgetExpenseStructu" +
                    "re_BaseFilter_DFK.BudgetExpenseStructure_BaseFilter_DFK_Target])\r\n    FROM (\r\n  " +
                    "      SELECT -- Constructing BudgetExpenseStructure_BaseFilter_DFK_Source\r\n     " +
                    "       CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[BudgetEx" +
                    "penseStructure_BaseFilter_DFK.BudgetExpenseStructure_BaseFilter_DFK_Source.Id])," +
                    " [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilte" +
                    "r_DFK.BudgetExpenseStructure_BaseFilter_DFK_Source], \r\n            T2.[BudgetExp" +
                    "enseStructure_BaseFilter_DFK.BudgetExpenseStructure_BaseFilter_DFK_Target]\r\n    " +
                    "    FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure_BaseFilter" +
                    "_DFK_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter_DFK.BudgetExp" +
                    "enseStructure_BaseFilter_DFK_Source.Id], \r\n                CreateRef(DataContext" +
                    ".DFK, row(T1.[BudgetExpenseStructure_BaseFilter_DFK.BudgetExpenseStructure_BaseF" +
                    "ilter_DFK_Target.Id]), [Tests.DFK]) AS [BudgetExpenseStructure_BaseFilter_DFK.Bu" +
                    "dgetExpenseStructure_BaseFilter_DFK_Target]\r\n            FROM (\r\n               " +
                    " SELECT \r\n                    T.idBudgetExpenseStructure_BaseFilter AS [BudgetEx" +
                    "penseStructure_BaseFilter_DFK.BudgetExpenseStructure_BaseFilter_DFK_Source.Id], " +
                    "\r\n                    T.idDFK AS [BudgetExpenseStructure_BaseFilter_DFK.BudgetEx" +
                    "penseStructure_BaseFilter_DFK_Target.Id], \r\n                    True AS _from0\r\n" +
                    "                FROM CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDFK AS T" +
                    "\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_DKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView668()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_DKR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_DKR\r\n       " +
                    " [Tests.BudgetExpenseStructure_BaseFilter_DKR](T3.[BudgetExpenseStructure_BaseFi" +
                    "lter_DKR.BudgetExpenseStructure_BaseFilter_DKR_Source], T3.[BudgetExpenseStructu" +
                    "re_BaseFilter_DKR.BudgetExpenseStructure_BaseFilter_DKR_Target])\r\n    FROM (\r\n  " +
                    "      SELECT -- Constructing BudgetExpenseStructure_BaseFilter_DKR_Source\r\n     " +
                    "       CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[BudgetEx" +
                    "penseStructure_BaseFilter_DKR.BudgetExpenseStructure_BaseFilter_DKR_Source.Id])," +
                    " [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilte" +
                    "r_DKR.BudgetExpenseStructure_BaseFilter_DKR_Source], \r\n            T2.[BudgetExp" +
                    "enseStructure_BaseFilter_DKR.BudgetExpenseStructure_BaseFilter_DKR_Target]\r\n    " +
                    "    FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure_BaseFilter" +
                    "_DKR_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter_DKR.BudgetExp" +
                    "enseStructure_BaseFilter_DKR_Source.Id], \r\n                CreateRef(DataContext" +
                    ".DKR, row(T1.[BudgetExpenseStructure_BaseFilter_DKR.BudgetExpenseStructure_BaseF" +
                    "ilter_DKR_Target.Id]), [Tests.DKR]) AS [BudgetExpenseStructure_BaseFilter_DKR.Bu" +
                    "dgetExpenseStructure_BaseFilter_DKR_Target]\r\n            FROM (\r\n               " +
                    " SELECT \r\n                    T.idBudgetExpenseStructure_BaseFilter AS [BudgetEx" +
                    "penseStructure_BaseFilter_DKR.BudgetExpenseStructure_BaseFilter_DKR_Source.Id], " +
                    "\r\n                    T.idDKR AS [BudgetExpenseStructure_BaseFilter_DKR.BudgetEx" +
                    "penseStructure_BaseFilter_DKR_Target.Id], \r\n                    True AS _from0\r\n" +
                    "                FROM CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDKR AS T" +
                    "\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_DEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView669()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_DEK", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_DEK\r\n       " +
                    " [Tests.BudgetExpenseStructure_BaseFilter_DEK](T3.[BudgetExpenseStructure_BaseFi" +
                    "lter_DEK.BudgetExpenseStructure_BaseFilter_DEK_Source], T3.[BudgetExpenseStructu" +
                    "re_BaseFilter_DEK.BudgetExpenseStructure_BaseFilter_DEK_Target])\r\n    FROM (\r\n  " +
                    "      SELECT -- Constructing BudgetExpenseStructure_BaseFilter_DEK_Source\r\n     " +
                    "       CreateRef(DataContext.BudgetExpenseStructure_BaseFilter, row(T2.[BudgetEx" +
                    "penseStructure_BaseFilter_DEK.BudgetExpenseStructure_BaseFilter_DEK_Source.Id])," +
                    " [Tests.BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilte" +
                    "r_DEK.BudgetExpenseStructure_BaseFilter_DEK_Source], \r\n            T2.[BudgetExp" +
                    "enseStructure_BaseFilter_DEK.BudgetExpenseStructure_BaseFilter_DEK_Target]\r\n    " +
                    "    FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure_BaseFilter" +
                    "_DEK_Target\r\n                T1.[BudgetExpenseStructure_BaseFilter_DEK.BudgetExp" +
                    "enseStructure_BaseFilter_DEK_Source.Id], \r\n                CreateRef(DataContext" +
                    ".DEK, row(T1.[BudgetExpenseStructure_BaseFilter_DEK.BudgetExpenseStructure_BaseF" +
                    "ilter_DEK_Target.Id]), [Tests.DEK]) AS [BudgetExpenseStructure_BaseFilter_DEK.Bu" +
                    "dgetExpenseStructure_BaseFilter_DEK_Target]\r\n            FROM (\r\n               " +
                    " SELECT \r\n                    T.idBudgetExpenseStructure_BaseFilter AS [BudgetEx" +
                    "penseStructure_BaseFilter_DEK.BudgetExpenseStructure_BaseFilter_DEK_Source.Id], " +
                    "\r\n                    T.idDEK AS [BudgetExpenseStructure_BaseFilter_DEK.BudgetEx" +
                    "penseStructure_BaseFilter_DEK_Target.Id], \r\n                    True AS _from0\r\n" +
                    "                FROM CodeFirstDatabase.BudgetExpenseStructure_BaseFilterDEK AS T" +
                    "\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_CodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView670()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_CodeSubsidy", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_CodeSubsidy\r" +
                    "\n        [Tests.BudgetExpenseStructure_BaseFilter_CodeSubsidy](T3.[BudgetExpense" +
                    "Structure_BaseFilter_CodeSubsidy.BudgetExpenseStructure_BaseFilter_CodeSubsidy_S" +
                    "ource], T3.[BudgetExpenseStructure_BaseFilter_CodeSubsidy.BudgetExpenseStructure" +
                    "_BaseFilter_CodeSubsidy_Target])\r\n    FROM (\r\n        SELECT -- Constructing Bud" +
                    "getExpenseStructure_BaseFilter_CodeSubsidy_Source\r\n            CreateRef(DataCon" +
                    "text.BudgetExpenseStructure_BaseFilter, row(T2.[BudgetExpenseStructure_BaseFilte" +
                    "r_CodeSubsidy.BudgetExpenseStructure_BaseFilter_CodeSubsidy_Source.Id]), [Tests." +
                    "BudgetExpenseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilter_CodeSu" +
                    "bsidy.BudgetExpenseStructure_BaseFilter_CodeSubsidy_Source], \r\n            T2.[B" +
                    "udgetExpenseStructure_BaseFilter_CodeSubsidy.BudgetExpenseStructure_BaseFilter_C" +
                    "odeSubsidy_Target]\r\n        FROM (\r\n            SELECT -- Constructing BudgetExp" +
                    "enseStructure_BaseFilter_CodeSubsidy_Target\r\n                T1.[BudgetExpenseSt" +
                    "ructure_BaseFilter_CodeSubsidy.BudgetExpenseStructure_BaseFilter_CodeSubsidy_Sou" +
                    "rce.Id], \r\n                CreateRef(DataContext.CodeSubsidy, row(T1.[BudgetExpe" +
                    "nseStructure_BaseFilter_CodeSubsidy.BudgetExpenseStructure_BaseFilter_CodeSubsid" +
                    "y_Target.Id]), [Tests.CodeSubsidy]) AS [BudgetExpenseStructure_BaseFilter_CodeSu" +
                    "bsidy.BudgetExpenseStructure_BaseFilter_CodeSubsidy_Target]\r\n            FROM (\r" +
                    "\n                SELECT \r\n                    T.idBudgetExpenseStructure_BaseFil" +
                    "ter AS [BudgetExpenseStructure_BaseFilter_CodeSubsidy.BudgetExpenseStructure_Bas" +
                    "eFilter_CodeSubsidy_Source.Id], \r\n                    T.idCodeSubsidy AS [Budget" +
                    "ExpenseStructure_BaseFilter_CodeSubsidy.BudgetExpenseStructure_BaseFilter_CodeSu" +
                    "bsidy_Target.Id], \r\n                    True AS _from0\r\n                FROM Cod" +
                    "eFirstDatabase.BudgetExpenseStructure_BaseFilterCodeSubsidy AS T\r\n            ) " +
                    "AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_BaseFilter_BranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView671()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_BaseFilter_BranchCode", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_BaseFilter_BranchCode\r\n" +
                    "        [Tests.BudgetExpenseStructure_BaseFilter_BranchCode](T3.[BudgetExpenseSt" +
                    "ructure_BaseFilter_BranchCode.BudgetExpenseStructure_BaseFilter_BranchCode_Sourc" +
                    "e], T3.[BudgetExpenseStructure_BaseFilter_BranchCode.BudgetExpenseStructure_Base" +
                    "Filter_BranchCode_Target])\r\n    FROM (\r\n        SELECT -- Constructing BudgetExp" +
                    "enseStructure_BaseFilter_BranchCode_Source\r\n            CreateRef(DataContext.Bu" +
                    "dgetExpenseStructure_BaseFilter, row(T2.[BudgetExpenseStructure_BaseFilter_Branc" +
                    "hCode.BudgetExpenseStructure_BaseFilter_BranchCode_Source.Id]), [Tests.BudgetExp" +
                    "enseStructure_BaseFilter]) AS [BudgetExpenseStructure_BaseFilter_BranchCode.Budg" +
                    "etExpenseStructure_BaseFilter_BranchCode_Source], \r\n            T2.[BudgetExpens" +
                    "eStructure_BaseFilter_BranchCode.BudgetExpenseStructure_BaseFilter_BranchCode_Ta" +
                    "rget]\r\n        FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure" +
                    "_BaseFilter_BranchCode_Target\r\n                T1.[BudgetExpenseStructure_BaseFi" +
                    "lter_BranchCode.BudgetExpenseStructure_BaseFilter_BranchCode_Source.Id], \r\n     " +
                    "           CreateRef(DataContext.BranchCode, row(T1.[BudgetExpenseStructure_Base" +
                    "Filter_BranchCode.BudgetExpenseStructure_BaseFilter_BranchCode_Target.Id]), [Tes" +
                    "ts.BranchCode]) AS [BudgetExpenseStructure_BaseFilter_BranchCode.BudgetExpenseSt" +
                    "ructure_BaseFilter_BranchCode_Target]\r\n            FROM (\r\n                SELEC" +
                    "T \r\n                    T.idBudgetExpenseStructure_BaseFilter AS [BudgetExpenseS" +
                    "tructure_BaseFilter_BranchCode.BudgetExpenseStructure_BaseFilter_BranchCode_Sour" +
                    "ce.Id], \r\n                    T.idBranchCode AS [BudgetExpenseStructure_BaseFilt" +
                    "er_BranchCode.BudgetExpenseStructure_BaseFilter_BranchCode_Target.Id], \r\n       " +
                    "             True AS _from0\r\n                FROM CodeFirstDatabase.BudgetExpens" +
                    "eStructure_BaseFilterBranchCode AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    " +
                    ") AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView672()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3302);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_ExpenseOb");
            viewString.Append("ligationType_BudgetExpenseStructure_CustomFilter\r\n        [Tests.BudgetExpenseSt");
            viewString.Append("ructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter](");
            viewString.Append("T3.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpenseStruc");
            viewString.Append("ture_CustomFilter.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_Budg");
            viewString.Append("etExpenseStructure_CustomFilter_Source], T3.[BudgetExpenseStructure_CustomFilter");
            viewString.Append("_ExpenseObligationType_BudgetExpenseStructure_CustomFilter.BudgetExpenseStructur");
            viewString.Append("e_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_Target]");
            viewString.Append(")\r\n    FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilte");
            viewString.Append("r_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_Source\r\n            ");
            viewString.Append("CreateRef(DataContext.BudgetExpenseStructure_CustomFilter_ExpenseObligationType,");
            viewString.Append(" row(T2.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpense");
            viewString.Append("Structure_CustomFilter.BudgetExpenseStructure_CustomFilter_ExpenseObligationType");
            viewString.Append("_BudgetExpenseStructure_CustomFilter_Source.Id]), [Tests.BudgetExpenseStructure_");
            viewString.Append("CustomFilter_ExpenseObligationType]) AS [BudgetExpenseStructure_CustomFilter_Exp");
            viewString.Append("enseObligationType_BudgetExpenseStructure_CustomFilter.BudgetExpenseStructure_Cu");
            viewString.Append("stomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_Source], \r\n");
            viewString.Append("            T2.[BudgetExpenseStructure_CustomFilter_ExpenseObligationType_Budget");
            viewString.Append("ExpenseStructure_CustomFilter.BudgetExpenseStructure_CustomFilter_ExpenseObligat");
            viewString.Append("ionType_BudgetExpenseStructure_CustomFilter_Target]\r\n        FROM (\r\n           ");
            viewString.Append(" SELECT -- Constructing BudgetExpenseStructure_CustomFilter_ExpenseObligationTyp");
            viewString.Append("e_BudgetExpenseStructure_CustomFilter_Target\r\n                T1.[BudgetExpenseS");
            viewString.Append("tructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter.");
            viewString.Append("BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure");
            viewString.Append("_CustomFilter_Source.Id], \r\n                CreateRef(DataContext.BudgetExpenseS");
            viewString.Append("tructure_CustomFilter, row(T1.[BudgetExpenseStructure_CustomFilter_ExpenseObliga");
            viewString.Append("tionType_BudgetExpenseStructure_CustomFilter.BudgetExpenseStructure_CustomFilter");
            viewString.Append("_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_Target.Id]), [Tests.B");
            viewString.Append("udgetExpenseStructure_CustomFilter]) AS [BudgetExpenseStructure_CustomFilter_Exp");
            viewString.Append("enseObligationType_BudgetExpenseStructure_CustomFilter.BudgetExpenseStructure_Cu");
            viewString.Append("stomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_Target]\r\n  ");
            viewString.Append("          FROM (\r\n                SELECT \r\n                    T.BudgetExpenseSt");
            viewString.Append("ructure_CustomFilter_ExpenseObligationType_Id AS [BudgetExpenseStructure_CustomF");
            viewString.Append("ilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter.BudgetExpenseStr");
            viewString.Append("ucture_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_CustomFilter_So");
            viewString.Append("urce.Id], \r\n                    T.BudgetExpenseStructure_CustomFilter_Id AS [Bud");
            viewString.Append("getExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpenseStructure_Cu");
            viewString.Append("stomFilter.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpen");
            viewString.Append("seStructure_CustomFilter_Target.Id], \r\n                    True AS _from0\r\n     ");
            viewString.Append("           FROM CodeFirstDatabase.BudgetExpenseStructure_CustomFilter_ExpenseObl");
            viewString.Append("igationTypeBudgetExpenseStructure_CustomFilter AS T\r\n            ) AS T1\r\n      ");
            viewString.Append("  ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_ExpenseObligationType_BudgetExpen" +
                    "seStructure_CustomFilter", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_FinanceSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView673()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2068);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_FinanceSo");
            viewString.Append("urce\r\n        [Tests.BudgetExpenseStructure_CustomFilter_FinanceSource](T3.[Budg");
            viewString.Append("etExpenseStructure_CustomFilter_FinanceSource.BudgetExpenseStructure_CustomFilte");
            viewString.Append("r_FinanceSource_Source], T3.[BudgetExpenseStructure_CustomFilter_FinanceSource.B");
            viewString.Append("udgetExpenseStructure_CustomFilter_FinanceSource_Target])\r\n    FROM (\r\n        S");
            viewString.Append("ELECT -- Constructing BudgetExpenseStructure_CustomFilter_FinanceSource_Source\r\n");
            viewString.Append("            CreateRef(DataContext.BudgetExpenseStructure_CustomFilter, row(T2.[B");
            viewString.Append("udgetExpenseStructure_CustomFilter_FinanceSource.BudgetExpenseStructure_CustomFi");
            viewString.Append("lter_FinanceSource_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS ");
            viewString.Append("[BudgetExpenseStructure_CustomFilter_FinanceSource.BudgetExpenseStructure_Custom");
            viewString.Append("Filter_FinanceSource_Source], \r\n            T2.[BudgetExpenseStructure_CustomFil");
            viewString.Append("ter_FinanceSource.BudgetExpenseStructure_CustomFilter_FinanceSource_Target]\r\n   ");
            viewString.Append("     FROM (\r\n            SELECT -- Constructing BudgetExpenseStructure_CustomFil");
            viewString.Append("ter_FinanceSource_Target\r\n                T1.[BudgetExpenseStructure_CustomFilte");
            viewString.Append("r_FinanceSource.BudgetExpenseStructure_CustomFilter_FinanceSource_Source.Id], \r\n");
            viewString.Append("                CreateRef(DataContext.FinanceSource, row(T1.[BudgetExpenseStruct");
            viewString.Append("ure_CustomFilter_FinanceSource.BudgetExpenseStructure_CustomFilter_FinanceSource");
            viewString.Append("_Target.Id]), [Tests.FinanceSource]) AS [BudgetExpenseStructure_CustomFilter_Fin");
            viewString.Append("anceSource.BudgetExpenseStructure_CustomFilter_FinanceSource_Target]\r\n          ");
            viewString.Append("  FROM (\r\n                SELECT \r\n                    T.idBudgetExpenseStructur");
            viewString.Append("e_CustomFilter AS [BudgetExpenseStructure_CustomFilter_FinanceSource.BudgetExpen");
            viewString.Append("seStructure_CustomFilter_FinanceSource_Source.Id], \r\n                    T.idFin");
            viewString.Append("anceSource AS [BudgetExpenseStructure_CustomFilter_FinanceSource.BudgetExpenseSt");
            viewString.Append("ructure_CustomFilter_FinanceSource_Target.Id], \r\n                    True AS _fr");
            viewString.Append("om0\r\n                FROM CodeFirstDatabase.BudgetExpenseStructure_CustomFilterF");
            viewString.Append("inanceSource AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_FinanceSource", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_KFO
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView674()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_KFO", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_KFO\r\n     " +
                    "   [Tests.BudgetExpenseStructure_CustomFilter_KFO](T3.[BudgetExpenseStructure_Cu" +
                    "stomFilter_KFO.BudgetExpenseStructure_CustomFilter_KFO_Source], T3.[BudgetExpens" +
                    "eStructure_CustomFilter_KFO.BudgetExpenseStructure_CustomFilter_KFO_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilter_KFO" +
                    "_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomFilter, " +
                    "row(T2.[BudgetExpenseStructure_CustomFilter_KFO.BudgetExpenseStructure_CustomFil" +
                    "ter_KFO_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [BudgetExpe" +
                    "nseStructure_CustomFilter_KFO.BudgetExpenseStructure_CustomFilter_KFO_Source], \r" +
                    "\n            T2.[BudgetExpenseStructure_CustomFilter_KFO.BudgetExpenseStructure_" +
                    "CustomFilter_KFO_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bud" +
                    "getExpenseStructure_CustomFilter_KFO_Target\r\n                T1.[BudgetExpenseSt" +
                    "ructure_CustomFilter_KFO.BudgetExpenseStructure_CustomFilter_KFO_Source.Id], \r\n " +
                    "               CreateRef(DataContext.KFO, row(T1.[BudgetExpenseStructure_CustomF" +
                    "ilter_KFO.BudgetExpenseStructure_CustomFilter_KFO_Target.Id]), [Tests.KFO]) AS [" +
                    "BudgetExpenseStructure_CustomFilter_KFO.BudgetExpenseStructure_CustomFilter_KFO_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idBu" +
                    "dgetExpenseStructure_CustomFilter AS [BudgetExpenseStructure_CustomFilter_KFO.Bu" +
                    "dgetExpenseStructure_CustomFilter_KFO_Source.Id], \r\n                    T.idKFO " +
                    "AS [BudgetExpenseStructure_CustomFilter_KFO.BudgetExpenseStructure_CustomFilter_" +
                    "KFO_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.BudgetExpenseStructure_CustomFilterKFO AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_KVSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView675()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_KVSR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_KVSR\r\n    " +
                    "    [Tests.BudgetExpenseStructure_CustomFilter_KVSR](T3.[BudgetExpenseStructure_" +
                    "CustomFilter_KVSR.BudgetExpenseStructure_CustomFilter_KVSR_Source], T3.[BudgetEx" +
                    "penseStructure_CustomFilter_KVSR.BudgetExpenseStructure_CustomFilter_KVSR_Target" +
                    "])\r\n    FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilt" +
                    "er_KVSR_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomF" +
                    "ilter, row(T2.[BudgetExpenseStructure_CustomFilter_KVSR.BudgetExpenseStructure_C" +
                    "ustomFilter_KVSR_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [B" +
                    "udgetExpenseStructure_CustomFilter_KVSR.BudgetExpenseStructure_CustomFilter_KVSR" +
                    "_Source], \r\n            T2.[BudgetExpenseStructure_CustomFilter_KVSR.BudgetExpen" +
                    "seStructure_CustomFilter_KVSR_Target]\r\n        FROM (\r\n            SELECT -- Con" +
                    "structing BudgetExpenseStructure_CustomFilter_KVSR_Target\r\n                T1.[B" +
                    "udgetExpenseStructure_CustomFilter_KVSR.BudgetExpenseStructure_CustomFilter_KVSR" +
                    "_Source.Id], \r\n                CreateRef(DataContext.KVSR, row(T1.[BudgetExpense" +
                    "Structure_CustomFilter_KVSR.BudgetExpenseStructure_CustomFilter_KVSR_Target.Id])" +
                    ", [Tests.KVSR]) AS [BudgetExpenseStructure_CustomFilter_KVSR.BudgetExpenseStruct" +
                    "ure_CustomFilter_KVSR_Target]\r\n            FROM (\r\n                SELECT \r\n    " +
                    "                T.idBudgetExpenseStructure_CustomFilter AS [BudgetExpenseStructu" +
                    "re_CustomFilter_KVSR.BudgetExpenseStructure_CustomFilter_KVSR_Source.Id], \r\n    " +
                    "                T.idKVSR AS [BudgetExpenseStructure_CustomFilter_KVSR.BudgetExpe" +
                    "nseStructure_CustomFilter_KVSR_Target.Id], \r\n                    True AS _from0\r" +
                    "\n                FROM CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKVSR " +
                    "AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_RZPR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView676()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_RZPR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_RZPR\r\n    " +
                    "    [Tests.BudgetExpenseStructure_CustomFilter_RZPR](T3.[BudgetExpenseStructure_" +
                    "CustomFilter_RZPR.BudgetExpenseStructure_CustomFilter_RZPR_Source], T3.[BudgetEx" +
                    "penseStructure_CustomFilter_RZPR.BudgetExpenseStructure_CustomFilter_RZPR_Target" +
                    "])\r\n    FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilt" +
                    "er_RZPR_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomF" +
                    "ilter, row(T2.[BudgetExpenseStructure_CustomFilter_RZPR.BudgetExpenseStructure_C" +
                    "ustomFilter_RZPR_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [B" +
                    "udgetExpenseStructure_CustomFilter_RZPR.BudgetExpenseStructure_CustomFilter_RZPR" +
                    "_Source], \r\n            T2.[BudgetExpenseStructure_CustomFilter_RZPR.BudgetExpen" +
                    "seStructure_CustomFilter_RZPR_Target]\r\n        FROM (\r\n            SELECT -- Con" +
                    "structing BudgetExpenseStructure_CustomFilter_RZPR_Target\r\n                T1.[B" +
                    "udgetExpenseStructure_CustomFilter_RZPR.BudgetExpenseStructure_CustomFilter_RZPR" +
                    "_Source.Id], \r\n                CreateRef(DataContext.RZPR, row(T1.[BudgetExpense" +
                    "Structure_CustomFilter_RZPR.BudgetExpenseStructure_CustomFilter_RZPR_Target.Id])" +
                    ", [Tests.RZPR]) AS [BudgetExpenseStructure_CustomFilter_RZPR.BudgetExpenseStruct" +
                    "ure_CustomFilter_RZPR_Target]\r\n            FROM (\r\n                SELECT \r\n    " +
                    "                T.idBudgetExpenseStructure_CustomFilter AS [BudgetExpenseStructu" +
                    "re_CustomFilter_RZPR.BudgetExpenseStructure_CustomFilter_RZPR_Source.Id], \r\n    " +
                    "                T.idRZPR AS [BudgetExpenseStructure_CustomFilter_RZPR.BudgetExpe" +
                    "nseStructure_CustomFilter_RZPR_Target.Id], \r\n                    True AS _from0\r" +
                    "\n                FROM CodeFirstDatabase.BudgetExpenseStructure_CustomFilterRZPR " +
                    "AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_KCSR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView677()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_KCSR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_KCSR\r\n    " +
                    "    [Tests.BudgetExpenseStructure_CustomFilter_KCSR](T3.[BudgetExpenseStructure_" +
                    "CustomFilter_KCSR.BudgetExpenseStructure_CustomFilter_KCSR_Source], T3.[BudgetEx" +
                    "penseStructure_CustomFilter_KCSR.BudgetExpenseStructure_CustomFilter_KCSR_Target" +
                    "])\r\n    FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilt" +
                    "er_KCSR_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomF" +
                    "ilter, row(T2.[BudgetExpenseStructure_CustomFilter_KCSR.BudgetExpenseStructure_C" +
                    "ustomFilter_KCSR_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [B" +
                    "udgetExpenseStructure_CustomFilter_KCSR.BudgetExpenseStructure_CustomFilter_KCSR" +
                    "_Source], \r\n            T2.[BudgetExpenseStructure_CustomFilter_KCSR.BudgetExpen" +
                    "seStructure_CustomFilter_KCSR_Target]\r\n        FROM (\r\n            SELECT -- Con" +
                    "structing BudgetExpenseStructure_CustomFilter_KCSR_Target\r\n                T1.[B" +
                    "udgetExpenseStructure_CustomFilter_KCSR.BudgetExpenseStructure_CustomFilter_KCSR" +
                    "_Source.Id], \r\n                CreateRef(DataContext.KCSR, row(T1.[BudgetExpense" +
                    "Structure_CustomFilter_KCSR.BudgetExpenseStructure_CustomFilter_KCSR_Target.Id])" +
                    ", [Tests.KCSR]) AS [BudgetExpenseStructure_CustomFilter_KCSR.BudgetExpenseStruct" +
                    "ure_CustomFilter_KCSR_Target]\r\n            FROM (\r\n                SELECT \r\n    " +
                    "                T.idBudgetExpenseStructure_CustomFilter AS [BudgetExpenseStructu" +
                    "re_CustomFilter_KCSR.BudgetExpenseStructure_CustomFilter_KCSR_Source.Id], \r\n    " +
                    "                T.idKCSR AS [BudgetExpenseStructure_CustomFilter_KCSR.BudgetExpe" +
                    "nseStructure_CustomFilter_KCSR_Target.Id], \r\n                    True AS _from0\r" +
                    "\n                FROM CodeFirstDatabase.BudgetExpenseStructure_CustomFilterKCSR " +
                    "AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_KVR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView678()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_KVR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_KVR\r\n     " +
                    "   [Tests.BudgetExpenseStructure_CustomFilter_KVR](T3.[BudgetExpenseStructure_Cu" +
                    "stomFilter_KVR.BudgetExpenseStructure_CustomFilter_KVR_Source], T3.[BudgetExpens" +
                    "eStructure_CustomFilter_KVR.BudgetExpenseStructure_CustomFilter_KVR_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilter_KVR" +
                    "_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomFilter, " +
                    "row(T2.[BudgetExpenseStructure_CustomFilter_KVR.BudgetExpenseStructure_CustomFil" +
                    "ter_KVR_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [BudgetExpe" +
                    "nseStructure_CustomFilter_KVR.BudgetExpenseStructure_CustomFilter_KVR_Source], \r" +
                    "\n            T2.[BudgetExpenseStructure_CustomFilter_KVR.BudgetExpenseStructure_" +
                    "CustomFilter_KVR_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bud" +
                    "getExpenseStructure_CustomFilter_KVR_Target\r\n                T1.[BudgetExpenseSt" +
                    "ructure_CustomFilter_KVR.BudgetExpenseStructure_CustomFilter_KVR_Source.Id], \r\n " +
                    "               CreateRef(DataContext.KVR, row(T1.[BudgetExpenseStructure_CustomF" +
                    "ilter_KVR.BudgetExpenseStructure_CustomFilter_KVR_Target.Id]), [Tests.KVR]) AS [" +
                    "BudgetExpenseStructure_CustomFilter_KVR.BudgetExpenseStructure_CustomFilter_KVR_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idBu" +
                    "dgetExpenseStructure_CustomFilter AS [BudgetExpenseStructure_CustomFilter_KVR.Bu" +
                    "dgetExpenseStructure_CustomFilter_KVR_Source.Id], \r\n                    T.idKVR " +
                    "AS [BudgetExpenseStructure_CustomFilter_KVR.BudgetExpenseStructure_CustomFilter_" +
                    "KVR_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.BudgetExpenseStructure_CustomFilterKVR AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_KOSGU
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView679()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_KOSGU", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_KOSGU\r\n   " +
                    "     [Tests.BudgetExpenseStructure_CustomFilter_KOSGU](T3.[BudgetExpenseStructur" +
                    "e_CustomFilter_KOSGU.BudgetExpenseStructure_CustomFilter_KOSGU_Source], T3.[Budg" +
                    "etExpenseStructure_CustomFilter_KOSGU.BudgetExpenseStructure_CustomFilter_KOSGU_" +
                    "Target])\r\n    FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_Cust" +
                    "omFilter_KOSGU_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_" +
                    "CustomFilter, row(T2.[BudgetExpenseStructure_CustomFilter_KOSGU.BudgetExpenseStr" +
                    "ucture_CustomFilter_KOSGU_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilte" +
                    "r]) AS [BudgetExpenseStructure_CustomFilter_KOSGU.BudgetExpenseStructure_CustomF" +
                    "ilter_KOSGU_Source], \r\n            T2.[BudgetExpenseStructure_CustomFilter_KOSGU" +
                    ".BudgetExpenseStructure_CustomFilter_KOSGU_Target]\r\n        FROM (\r\n            " +
                    "SELECT -- Constructing BudgetExpenseStructure_CustomFilter_KOSGU_Target\r\n       " +
                    "         T1.[BudgetExpenseStructure_CustomFilter_KOSGU.BudgetExpenseStructure_Cu" +
                    "stomFilter_KOSGU_Source.Id], \r\n                CreateRef(DataContext.KOSGU, row(" +
                    "T1.[BudgetExpenseStructure_CustomFilter_KOSGU.BudgetExpenseStructure_CustomFilte" +
                    "r_KOSGU_Target.Id]), [Tests.KOSGU]) AS [BudgetExpenseStructure_CustomFilter_KOSG" +
                    "U.BudgetExpenseStructure_CustomFilter_KOSGU_Target]\r\n            FROM (\r\n       " +
                    "         SELECT \r\n                    T.idBudgetExpenseStructure_CustomFilter AS" +
                    " [BudgetExpenseStructure_CustomFilter_KOSGU.BudgetExpenseStructure_CustomFilter_" +
                    "KOSGU_Source.Id], \r\n                    T.idKOSGU AS [BudgetExpenseStructure_Cus" +
                    "tomFilter_KOSGU.BudgetExpenseStructure_CustomFilter_KOSGU_Target.Id], \r\n        " +
                    "            True AS _from0\r\n                FROM CodeFirstDatabase.BudgetExpense" +
                    "Structure_CustomFilterKOSGU AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS" +
                    " T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_DFK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView680()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_DFK", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_DFK\r\n     " +
                    "   [Tests.BudgetExpenseStructure_CustomFilter_DFK](T3.[BudgetExpenseStructure_Cu" +
                    "stomFilter_DFK.BudgetExpenseStructure_CustomFilter_DFK_Source], T3.[BudgetExpens" +
                    "eStructure_CustomFilter_DFK.BudgetExpenseStructure_CustomFilter_DFK_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilter_DFK" +
                    "_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomFilter, " +
                    "row(T2.[BudgetExpenseStructure_CustomFilter_DFK.BudgetExpenseStructure_CustomFil" +
                    "ter_DFK_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [BudgetExpe" +
                    "nseStructure_CustomFilter_DFK.BudgetExpenseStructure_CustomFilter_DFK_Source], \r" +
                    "\n            T2.[BudgetExpenseStructure_CustomFilter_DFK.BudgetExpenseStructure_" +
                    "CustomFilter_DFK_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bud" +
                    "getExpenseStructure_CustomFilter_DFK_Target\r\n                T1.[BudgetExpenseSt" +
                    "ructure_CustomFilter_DFK.BudgetExpenseStructure_CustomFilter_DFK_Source.Id], \r\n " +
                    "               CreateRef(DataContext.DFK, row(T1.[BudgetExpenseStructure_CustomF" +
                    "ilter_DFK.BudgetExpenseStructure_CustomFilter_DFK_Target.Id]), [Tests.DFK]) AS [" +
                    "BudgetExpenseStructure_CustomFilter_DFK.BudgetExpenseStructure_CustomFilter_DFK_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idBu" +
                    "dgetExpenseStructure_CustomFilter AS [BudgetExpenseStructure_CustomFilter_DFK.Bu" +
                    "dgetExpenseStructure_CustomFilter_DFK_Source.Id], \r\n                    T.idDFK " +
                    "AS [BudgetExpenseStructure_CustomFilter_DFK.BudgetExpenseStructure_CustomFilter_" +
                    "DFK_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.BudgetExpenseStructure_CustomFilterDFK AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_DKR
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView681()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_DKR", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_DKR\r\n     " +
                    "   [Tests.BudgetExpenseStructure_CustomFilter_DKR](T3.[BudgetExpenseStructure_Cu" +
                    "stomFilter_DKR.BudgetExpenseStructure_CustomFilter_DKR_Source], T3.[BudgetExpens" +
                    "eStructure_CustomFilter_DKR.BudgetExpenseStructure_CustomFilter_DKR_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilter_DKR" +
                    "_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomFilter, " +
                    "row(T2.[BudgetExpenseStructure_CustomFilter_DKR.BudgetExpenseStructure_CustomFil" +
                    "ter_DKR_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [BudgetExpe" +
                    "nseStructure_CustomFilter_DKR.BudgetExpenseStructure_CustomFilter_DKR_Source], \r" +
                    "\n            T2.[BudgetExpenseStructure_CustomFilter_DKR.BudgetExpenseStructure_" +
                    "CustomFilter_DKR_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bud" +
                    "getExpenseStructure_CustomFilter_DKR_Target\r\n                T1.[BudgetExpenseSt" +
                    "ructure_CustomFilter_DKR.BudgetExpenseStructure_CustomFilter_DKR_Source.Id], \r\n " +
                    "               CreateRef(DataContext.DKR, row(T1.[BudgetExpenseStructure_CustomF" +
                    "ilter_DKR.BudgetExpenseStructure_CustomFilter_DKR_Target.Id]), [Tests.DKR]) AS [" +
                    "BudgetExpenseStructure_CustomFilter_DKR.BudgetExpenseStructure_CustomFilter_DKR_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idBu" +
                    "dgetExpenseStructure_CustomFilter AS [BudgetExpenseStructure_CustomFilter_DKR.Bu" +
                    "dgetExpenseStructure_CustomFilter_DKR_Source.Id], \r\n                    T.idDKR " +
                    "AS [BudgetExpenseStructure_CustomFilter_DKR.BudgetExpenseStructure_CustomFilter_" +
                    "DKR_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.BudgetExpenseStructure_CustomFilterDKR AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_DEK
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView682()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_DEK", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_DEK\r\n     " +
                    "   [Tests.BudgetExpenseStructure_CustomFilter_DEK](T3.[BudgetExpenseStructure_Cu" +
                    "stomFilter_DEK.BudgetExpenseStructure_CustomFilter_DEK_Source], T3.[BudgetExpens" +
                    "eStructure_CustomFilter_DEK.BudgetExpenseStructure_CustomFilter_DEK_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing BudgetExpenseStructure_CustomFilter_DEK" +
                    "_Source\r\n            CreateRef(DataContext.BudgetExpenseStructure_CustomFilter, " +
                    "row(T2.[BudgetExpenseStructure_CustomFilter_DEK.BudgetExpenseStructure_CustomFil" +
                    "ter_DEK_Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [BudgetExpe" +
                    "nseStructure_CustomFilter_DEK.BudgetExpenseStructure_CustomFilter_DEK_Source], \r" +
                    "\n            T2.[BudgetExpenseStructure_CustomFilter_DEK.BudgetExpenseStructure_" +
                    "CustomFilter_DEK_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bud" +
                    "getExpenseStructure_CustomFilter_DEK_Target\r\n                T1.[BudgetExpenseSt" +
                    "ructure_CustomFilter_DEK.BudgetExpenseStructure_CustomFilter_DEK_Source.Id], \r\n " +
                    "               CreateRef(DataContext.DEK, row(T1.[BudgetExpenseStructure_CustomF" +
                    "ilter_DEK.BudgetExpenseStructure_CustomFilter_DEK_Target.Id]), [Tests.DEK]) AS [" +
                    "BudgetExpenseStructure_CustomFilter_DEK.BudgetExpenseStructure_CustomFilter_DEK_" +
                    "Target]\r\n            FROM (\r\n                SELECT \r\n                    T.idBu" +
                    "dgetExpenseStructure_CustomFilter AS [BudgetExpenseStructure_CustomFilter_DEK.Bu" +
                    "dgetExpenseStructure_CustomFilter_DEK_Source.Id], \r\n                    T.idDEK " +
                    "AS [BudgetExpenseStructure_CustomFilter_DEK.BudgetExpenseStructure_CustomFilter_" +
                    "DEK_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeF" +
                    "irstDatabase.BudgetExpenseStructure_CustomFilterDEK AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_CodeSubsidy
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView683()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_CodeSubsidy", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_CodeSubsid" +
                    "y\r\n        [Tests.BudgetExpenseStructure_CustomFilter_CodeSubsidy](T3.[BudgetExp" +
                    "enseStructure_CustomFilter_CodeSubsidy.BudgetExpenseStructure_CustomFilter_CodeS" +
                    "ubsidy_Source], T3.[BudgetExpenseStructure_CustomFilter_CodeSubsidy.BudgetExpens" +
                    "eStructure_CustomFilter_CodeSubsidy_Target])\r\n    FROM (\r\n        SELECT -- Cons" +
                    "tructing BudgetExpenseStructure_CustomFilter_CodeSubsidy_Source\r\n            Cre" +
                    "ateRef(DataContext.BudgetExpenseStructure_CustomFilter, row(T2.[BudgetExpenseStr" +
                    "ucture_CustomFilter_CodeSubsidy.BudgetExpenseStructure_CustomFilter_CodeSubsidy_" +
                    "Source.Id]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [BudgetExpenseStruc" +
                    "ture_CustomFilter_CodeSubsidy.BudgetExpenseStructure_CustomFilter_CodeSubsidy_So" +
                    "urce], \r\n            T2.[BudgetExpenseStructure_CustomFilter_CodeSubsidy.BudgetE" +
                    "xpenseStructure_CustomFilter_CodeSubsidy_Target]\r\n        FROM (\r\n            SE" +
                    "LECT -- Constructing BudgetExpenseStructure_CustomFilter_CodeSubsidy_Target\r\n   " +
                    "             T1.[BudgetExpenseStructure_CustomFilter_CodeSubsidy.BudgetExpenseSt" +
                    "ructure_CustomFilter_CodeSubsidy_Source.Id], \r\n                CreateRef(DataCon" +
                    "text.CodeSubsidy, row(T1.[BudgetExpenseStructure_CustomFilter_CodeSubsidy.Budget" +
                    "ExpenseStructure_CustomFilter_CodeSubsidy_Target.Id]), [Tests.CodeSubsidy]) AS [" +
                    "BudgetExpenseStructure_CustomFilter_CodeSubsidy.BudgetExpenseStructure_CustomFil" +
                    "ter_CodeSubsidy_Target]\r\n            FROM (\r\n                SELECT \r\n          " +
                    "          T.idBudgetExpenseStructure_CustomFilter AS [BudgetExpenseStructure_Cus" +
                    "tomFilter_CodeSubsidy.BudgetExpenseStructure_CustomFilter_CodeSubsidy_Source.Id]" +
                    ", \r\n                    T.idCodeSubsidy AS [BudgetExpenseStructure_CustomFilter_" +
                    "CodeSubsidy.BudgetExpenseStructure_CustomFilter_CodeSubsidy_Target.Id], \r\n      " +
                    "              True AS _from0\r\n                FROM CodeFirstDatabase.BudgetExpen" +
                    "seStructure_CustomFilterCodeSubsidy AS T\r\n            ) AS T1\r\n        ) AS T2\r\n" +
                    "    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BudgetExpenseStructure_CustomFilter_BranchCode
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView684()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BudgetExpenseStructure_CustomFilter_BranchCode", "\r\n    SELECT VALUE -- Constructing BudgetExpenseStructure_CustomFilter_BranchCode" +
                    "\r\n        [Tests.BudgetExpenseStructure_CustomFilter_BranchCode](T3.[BudgetExpen" +
                    "seStructure_CustomFilter_BranchCode.BudgetExpenseStructure_CustomFilter_BranchCo" +
                    "de_Source], T3.[BudgetExpenseStructure_CustomFilter_BranchCode.BudgetExpenseStru" +
                    "cture_CustomFilter_BranchCode_Target])\r\n    FROM (\r\n        SELECT -- Constructi" +
                    "ng BudgetExpenseStructure_CustomFilter_BranchCode_Source\r\n            CreateRef(" +
                    "DataContext.BudgetExpenseStructure_CustomFilter, row(T2.[BudgetExpenseStructure_" +
                    "CustomFilter_BranchCode.BudgetExpenseStructure_CustomFilter_BranchCode_Source.Id" +
                    "]), [Tests.BudgetExpenseStructure_CustomFilter]) AS [BudgetExpenseStructure_Cust" +
                    "omFilter_BranchCode.BudgetExpenseStructure_CustomFilter_BranchCode_Source], \r\n  " +
                    "          T2.[BudgetExpenseStructure_CustomFilter_BranchCode.BudgetExpenseStruct" +
                    "ure_CustomFilter_BranchCode_Target]\r\n        FROM (\r\n            SELECT -- Const" +
                    "ructing BudgetExpenseStructure_CustomFilter_BranchCode_Target\r\n                T" +
                    "1.[BudgetExpenseStructure_CustomFilter_BranchCode.BudgetExpenseStructure_CustomF" +
                    "ilter_BranchCode_Source.Id], \r\n                CreateRef(DataContext.BranchCode," +
                    " row(T1.[BudgetExpenseStructure_CustomFilter_BranchCode.BudgetExpenseStructure_C" +
                    "ustomFilter_BranchCode_Target.Id]), [Tests.BranchCode]) AS [BudgetExpenseStructu" +
                    "re_CustomFilter_BranchCode.BudgetExpenseStructure_CustomFilter_BranchCode_Target" +
                    "]\r\n            FROM (\r\n                SELECT \r\n                    T.idBudgetEx" +
                    "penseStructure_CustomFilter AS [BudgetExpenseStructure_CustomFilter_BranchCode.B" +
                    "udgetExpenseStructure_CustomFilter_BranchCode_Source.Id], \r\n                    " +
                    "T.idBranchCode AS [BudgetExpenseStructure_CustomFilter_BranchCode.BudgetExpenseS" +
                    "tructure_CustomFilter_BranchCode_Target.Id], \r\n                    True AS _from" +
                    "0\r\n                FROM CodeFirstDatabase.BudgetExpenseStructure_CustomFilterBra" +
                    "nchCode AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ReportBatch_DocStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView685()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ReportBatch_DocStatus", @"
    SELECT VALUE -- Constructing ReportBatch_DocStatus
        [Tests.ReportBatch_DocStatus](T3.[ReportBatch_DocStatus.ReportBatch_DocStatus_Source], T3.[ReportBatch_DocStatus.ReportBatch_DocStatus_Target])
    FROM (
        SELECT -- Constructing ReportBatch_DocStatus_Source
            CreateRef(DataContext.ReportBatch, row(T2.[ReportBatch_DocStatus.ReportBatch_DocStatus_Source.Id]), [Tests.ReportBatch]) AS [ReportBatch_DocStatus.ReportBatch_DocStatus_Source], 
            T2.[ReportBatch_DocStatus.ReportBatch_DocStatus_Target]
        FROM (
            SELECT -- Constructing ReportBatch_DocStatus_Target
                T1.[ReportBatch_DocStatus.ReportBatch_DocStatus_Source.Id], 
                CreateRef(DataContext.DocStatus, row(T1.[ReportBatch_DocStatus.ReportBatch_DocStatus_Target.Id]), [Tests.DocStatus]) AS [ReportBatch_DocStatus.ReportBatch_DocStatus_Target]
            FROM (
                SELECT 
                    T.id AS [ReportBatch_DocStatus.ReportBatch_DocStatus_Source.Id], 
                    T.DocStatus_Id AS [ReportBatch_DocStatus.ReportBatch_DocStatus_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.ReportBatch AS T
                WHERE T.DocStatus_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_FinanceSources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView686()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_FinanceSources", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_FinanceSources\r\n  " +
                    "      [Tests.BalancingIFDB_RuleFilterKBK_FinanceSources](T3.[BalancingIFDB_RuleF" +
                    "ilterKBK_FinanceSources.BalancingIFDB_RuleFilterKBK_FinanceSources_Source], T3.[" +
                    "BalancingIFDB_RuleFilterKBK_FinanceSources.BalancingIFDB_RuleFilterKBK_FinanceSo" +
                    "urces_Target])\r\n    FROM (\r\n        SELECT -- Constructing BalancingIFDB_RuleFil" +
                    "terKBK_FinanceSources_Source\r\n            CreateRef(DataContext.BalancingIFDB_Ru" +
                    "leFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_FinanceSources.BalancingIFDB_Ru" +
                    "leFilterKBK_FinanceSources_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS " +
                    "[BalancingIFDB_RuleFilterKBK_FinanceSources.BalancingIFDB_RuleFilterKBK_FinanceS" +
                    "ources_Source], \r\n            T2.[BalancingIFDB_RuleFilterKBK_FinanceSources.Bal" +
                    "ancingIFDB_RuleFilterKBK_FinanceSources_Target]\r\n        FROM (\r\n            SEL" +
                    "ECT -- Constructing BalancingIFDB_RuleFilterKBK_FinanceSources_Target\r\n         " +
                    "       T1.[BalancingIFDB_RuleFilterKBK_FinanceSources.BalancingIFDB_RuleFilterKB" +
                    "K_FinanceSources_Source.Id], \r\n                CreateRef(DataContext.FinanceSour" +
                    "ce, row(T1.[BalancingIFDB_RuleFilterKBK_FinanceSources.BalancingIFDB_RuleFilterK" +
                    "BK_FinanceSources_Target.Id]), [Tests.FinanceSource]) AS [BalancingIFDB_RuleFilt" +
                    "erKBK_FinanceSources.BalancingIFDB_RuleFilterKBK_FinanceSources_Target]\r\n       " +
                    "     FROM (\r\n                SELECT \r\n                    T.idBalancingIFDB_Rule" +
                    "FilterKBK AS [BalancingIFDB_RuleFilterKBK_FinanceSources.BalancingIFDB_RuleFilte" +
                    "rKBK_FinanceSources_Source.Id], \r\n                    T.idFinanceSource AS [Bala" +
                    "ncingIFDB_RuleFilterKBK_FinanceSources.BalancingIFDB_RuleFilterKBK_FinanceSource" +
                    "s_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFir" +
                    "stDatabase.BalancingIFDB_RuleFilterKBKFinanceSource AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_KFOs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView687()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_KFOs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_KFOs\r\n        [Tes" +
                    "ts.BalancingIFDB_RuleFilterKBK_KFOs](T3.[BalancingIFDB_RuleFilterKBK_KFOs.Balanc" +
                    "ingIFDB_RuleFilterKBK_KFOs_Source], T3.[BalancingIFDB_RuleFilterKBK_KFOs.Balanci" +
                    "ngIFDB_RuleFilterKBK_KFOs_Target])\r\n    FROM (\r\n        SELECT -- Constructing B" +
                    "alancingIFDB_RuleFilterKBK_KFOs_Source\r\n            CreateRef(DataContext.Balanc" +
                    "ingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_KFOs.BalancingIFDB_Ru" +
                    "leFilterKBK_KFOs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [Balancing" +
                    "IFDB_RuleFilterKBK_KFOs.BalancingIFDB_RuleFilterKBK_KFOs_Source], \r\n            " +
                    "T2.[BalancingIFDB_RuleFilterKBK_KFOs.BalancingIFDB_RuleFilterKBK_KFOs_Target]\r\n " +
                    "       FROM (\r\n            SELECT -- Constructing BalancingIFDB_RuleFilterKBK_KF" +
                    "Os_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_KFOs.BalancingIFDB_Ru" +
                    "leFilterKBK_KFOs_Source.Id], \r\n                CreateRef(DataContext.KFO, row(T1" +
                    ".[BalancingIFDB_RuleFilterKBK_KFOs.BalancingIFDB_RuleFilterKBK_KFOs_Target.Id])," +
                    " [Tests.KFO]) AS [BalancingIFDB_RuleFilterKBK_KFOs.BalancingIFDB_RuleFilterKBK_K" +
                    "FOs_Target]\r\n            FROM (\r\n                SELECT \r\n                    T." +
                    "idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_KFOs.BalancingIFDB" +
                    "_RuleFilterKBK_KFOs_Source.Id], \r\n                    T.idKFO AS [BalancingIFDB_" +
                    "RuleFilterKBK_KFOs.BalancingIFDB_RuleFilterKBK_KFOs_Target.Id], \r\n              " +
                    "      True AS _from0\r\n                FROM CodeFirstDatabase.BalancingIFDB_RuleF" +
                    "ilterKBKKFO AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_KVSRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView688()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_KVSRs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_KVSRs\r\n        [Te" +
                    "sts.BalancingIFDB_RuleFilterKBK_KVSRs](T3.[BalancingIFDB_RuleFilterKBK_KVSRs.Bal" +
                    "ancingIFDB_RuleFilterKBK_KVSRs_Source], T3.[BalancingIFDB_RuleFilterKBK_KVSRs.Ba" +
                    "lancingIFDB_RuleFilterKBK_KVSRs_Target])\r\n    FROM (\r\n        SELECT -- Construc" +
                    "ting BalancingIFDB_RuleFilterKBK_KVSRs_Source\r\n            CreateRef(DataContext" +
                    ".BalancingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_KVSRs.Balancin" +
                    "gIFDB_RuleFilterKBK_KVSRs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [" +
                    "BalancingIFDB_RuleFilterKBK_KVSRs.BalancingIFDB_RuleFilterKBK_KVSRs_Source], \r\n " +
                    "           T2.[BalancingIFDB_RuleFilterKBK_KVSRs.BalancingIFDB_RuleFilterKBK_KVS" +
                    "Rs_Target]\r\n        FROM (\r\n            SELECT -- Constructing BalancingIFDB_Rul" +
                    "eFilterKBK_KVSRs_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_KVSRs.B" +
                    "alancingIFDB_RuleFilterKBK_KVSRs_Source.Id], \r\n                CreateRef(DataCon" +
                    "text.KVSR, row(T1.[BalancingIFDB_RuleFilterKBK_KVSRs.BalancingIFDB_RuleFilterKBK" +
                    "_KVSRs_Target.Id]), [Tests.KVSR]) AS [BalancingIFDB_RuleFilterKBK_KVSRs.Balancin" +
                    "gIFDB_RuleFilterKBK_KVSRs_Target]\r\n            FROM (\r\n                SELECT \r\n" +
                    "                    T.idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilter" +
                    "KBK_KVSRs.BalancingIFDB_RuleFilterKBK_KVSRs_Source.Id], \r\n                    T." +
                    "idKVSR AS [BalancingIFDB_RuleFilterKBK_KVSRs.BalancingIFDB_RuleFilterKBK_KVSRs_T" +
                    "arget.Id], \r\n                    True AS _from0\r\n                FROM CodeFirstD" +
                    "atabase.BalancingIFDB_RuleFilterKBKKVSR AS T\r\n            ) AS T1\r\n        ) AS " +
                    "T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_RZPRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView689()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_RZPRs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_RZPRs\r\n        [Te" +
                    "sts.BalancingIFDB_RuleFilterKBK_RZPRs](T3.[BalancingIFDB_RuleFilterKBK_RZPRs.Bal" +
                    "ancingIFDB_RuleFilterKBK_RZPRs_Source], T3.[BalancingIFDB_RuleFilterKBK_RZPRs.Ba" +
                    "lancingIFDB_RuleFilterKBK_RZPRs_Target])\r\n    FROM (\r\n        SELECT -- Construc" +
                    "ting BalancingIFDB_RuleFilterKBK_RZPRs_Source\r\n            CreateRef(DataContext" +
                    ".BalancingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_RZPRs.Balancin" +
                    "gIFDB_RuleFilterKBK_RZPRs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [" +
                    "BalancingIFDB_RuleFilterKBK_RZPRs.BalancingIFDB_RuleFilterKBK_RZPRs_Source], \r\n " +
                    "           T2.[BalancingIFDB_RuleFilterKBK_RZPRs.BalancingIFDB_RuleFilterKBK_RZP" +
                    "Rs_Target]\r\n        FROM (\r\n            SELECT -- Constructing BalancingIFDB_Rul" +
                    "eFilterKBK_RZPRs_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_RZPRs.B" +
                    "alancingIFDB_RuleFilterKBK_RZPRs_Source.Id], \r\n                CreateRef(DataCon" +
                    "text.RZPR, row(T1.[BalancingIFDB_RuleFilterKBK_RZPRs.BalancingIFDB_RuleFilterKBK" +
                    "_RZPRs_Target.Id]), [Tests.RZPR]) AS [BalancingIFDB_RuleFilterKBK_RZPRs.Balancin" +
                    "gIFDB_RuleFilterKBK_RZPRs_Target]\r\n            FROM (\r\n                SELECT \r\n" +
                    "                    T.idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilter" +
                    "KBK_RZPRs.BalancingIFDB_RuleFilterKBK_RZPRs_Source.Id], \r\n                    T." +
                    "idRZPR AS [BalancingIFDB_RuleFilterKBK_RZPRs.BalancingIFDB_RuleFilterKBK_RZPRs_T" +
                    "arget.Id], \r\n                    True AS _from0\r\n                FROM CodeFirstD" +
                    "atabase.BalancingIFDB_RuleFilterKBKRZPR AS T\r\n            ) AS T1\r\n        ) AS " +
                    "T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_KCSRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView690()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_KCSRs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_KCSRs\r\n        [Te" +
                    "sts.BalancingIFDB_RuleFilterKBK_KCSRs](T3.[BalancingIFDB_RuleFilterKBK_KCSRs.Bal" +
                    "ancingIFDB_RuleFilterKBK_KCSRs_Source], T3.[BalancingIFDB_RuleFilterKBK_KCSRs.Ba" +
                    "lancingIFDB_RuleFilterKBK_KCSRs_Target])\r\n    FROM (\r\n        SELECT -- Construc" +
                    "ting BalancingIFDB_RuleFilterKBK_KCSRs_Source\r\n            CreateRef(DataContext" +
                    ".BalancingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_KCSRs.Balancin" +
                    "gIFDB_RuleFilterKBK_KCSRs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [" +
                    "BalancingIFDB_RuleFilterKBK_KCSRs.BalancingIFDB_RuleFilterKBK_KCSRs_Source], \r\n " +
                    "           T2.[BalancingIFDB_RuleFilterKBK_KCSRs.BalancingIFDB_RuleFilterKBK_KCS" +
                    "Rs_Target]\r\n        FROM (\r\n            SELECT -- Constructing BalancingIFDB_Rul" +
                    "eFilterKBK_KCSRs_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_KCSRs.B" +
                    "alancingIFDB_RuleFilterKBK_KCSRs_Source.Id], \r\n                CreateRef(DataCon" +
                    "text.KCSR, row(T1.[BalancingIFDB_RuleFilterKBK_KCSRs.BalancingIFDB_RuleFilterKBK" +
                    "_KCSRs_Target.Id]), [Tests.KCSR]) AS [BalancingIFDB_RuleFilterKBK_KCSRs.Balancin" +
                    "gIFDB_RuleFilterKBK_KCSRs_Target]\r\n            FROM (\r\n                SELECT \r\n" +
                    "                    T.idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilter" +
                    "KBK_KCSRs.BalancingIFDB_RuleFilterKBK_KCSRs_Source.Id], \r\n                    T." +
                    "idKCSR AS [BalancingIFDB_RuleFilterKBK_KCSRs.BalancingIFDB_RuleFilterKBK_KCSRs_T" +
                    "arget.Id], \r\n                    True AS _from0\r\n                FROM CodeFirstD" +
                    "atabase.BalancingIFDB_RuleFilterKBKKCSR AS T\r\n            ) AS T1\r\n        ) AS " +
                    "T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_KVRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView691()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_KVRs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_KVRs\r\n        [Tes" +
                    "ts.BalancingIFDB_RuleFilterKBK_KVRs](T3.[BalancingIFDB_RuleFilterKBK_KVRs.Balanc" +
                    "ingIFDB_RuleFilterKBK_KVRs_Source], T3.[BalancingIFDB_RuleFilterKBK_KVRs.Balanci" +
                    "ngIFDB_RuleFilterKBK_KVRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing B" +
                    "alancingIFDB_RuleFilterKBK_KVRs_Source\r\n            CreateRef(DataContext.Balanc" +
                    "ingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_KVRs.BalancingIFDB_Ru" +
                    "leFilterKBK_KVRs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [Balancing" +
                    "IFDB_RuleFilterKBK_KVRs.BalancingIFDB_RuleFilterKBK_KVRs_Source], \r\n            " +
                    "T2.[BalancingIFDB_RuleFilterKBK_KVRs.BalancingIFDB_RuleFilterKBK_KVRs_Target]\r\n " +
                    "       FROM (\r\n            SELECT -- Constructing BalancingIFDB_RuleFilterKBK_KV" +
                    "Rs_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_KVRs.BalancingIFDB_Ru" +
                    "leFilterKBK_KVRs_Source.Id], \r\n                CreateRef(DataContext.KVR, row(T1" +
                    ".[BalancingIFDB_RuleFilterKBK_KVRs.BalancingIFDB_RuleFilterKBK_KVRs_Target.Id])," +
                    " [Tests.KVR]) AS [BalancingIFDB_RuleFilterKBK_KVRs.BalancingIFDB_RuleFilterKBK_K" +
                    "VRs_Target]\r\n            FROM (\r\n                SELECT \r\n                    T." +
                    "idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_KVRs.BalancingIFDB" +
                    "_RuleFilterKBK_KVRs_Source.Id], \r\n                    T.idKVR AS [BalancingIFDB_" +
                    "RuleFilterKBK_KVRs.BalancingIFDB_RuleFilterKBK_KVRs_Target.Id], \r\n              " +
                    "      True AS _from0\r\n                FROM CodeFirstDatabase.BalancingIFDB_RuleF" +
                    "ilterKBKKVR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_KOSGUs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView692()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_KOSGUs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_KOSGUs\r\n        [T" +
                    "ests.BalancingIFDB_RuleFilterKBK_KOSGUs](T3.[BalancingIFDB_RuleFilterKBK_KOSGUs." +
                    "BalancingIFDB_RuleFilterKBK_KOSGUs_Source], T3.[BalancingIFDB_RuleFilterKBK_KOSG" +
                    "Us.BalancingIFDB_RuleFilterKBK_KOSGUs_Target])\r\n    FROM (\r\n        SELECT -- Co" +
                    "nstructing BalancingIFDB_RuleFilterKBK_KOSGUs_Source\r\n            CreateRef(Data" +
                    "Context.BalancingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_KOSGUs." +
                    "BalancingIFDB_RuleFilterKBK_KOSGUs_Source.Id]), [Tests.BalancingIFDB_RuleFilterK" +
                    "BK]) AS [BalancingIFDB_RuleFilterKBK_KOSGUs.BalancingIFDB_RuleFilterKBK_KOSGUs_S" +
                    "ource], \r\n            T2.[BalancingIFDB_RuleFilterKBK_KOSGUs.BalancingIFDB_RuleF" +
                    "ilterKBK_KOSGUs_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bala" +
                    "ncingIFDB_RuleFilterKBK_KOSGUs_Target\r\n                T1.[BalancingIFDB_RuleFil" +
                    "terKBK_KOSGUs.BalancingIFDB_RuleFilterKBK_KOSGUs_Source.Id], \r\n                C" +
                    "reateRef(DataContext.KOSGU, row(T1.[BalancingIFDB_RuleFilterKBK_KOSGUs.Balancing" +
                    "IFDB_RuleFilterKBK_KOSGUs_Target.Id]), [Tests.KOSGU]) AS [BalancingIFDB_RuleFilt" +
                    "erKBK_KOSGUs.BalancingIFDB_RuleFilterKBK_KOSGUs_Target]\r\n            FROM (\r\n   " +
                    "             SELECT \r\n                    T.idBalancingIFDB_RuleFilterKBK AS [Ba" +
                    "lancingIFDB_RuleFilterKBK_KOSGUs.BalancingIFDB_RuleFilterKBK_KOSGUs_Source.Id], " +
                    "\r\n                    T.idKOSGU AS [BalancingIFDB_RuleFilterKBK_KOSGUs.Balancing" +
                    "IFDB_RuleFilterKBK_KOSGUs_Target.Id], \r\n                    True AS _from0\r\n    " +
                    "            FROM CodeFirstDatabase.BalancingIFDB_RuleFilterKBKKOSGU AS T\r\n      " +
                    "      ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_DFKs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView693()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_DFKs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_DFKs\r\n        [Tes" +
                    "ts.BalancingIFDB_RuleFilterKBK_DFKs](T3.[BalancingIFDB_RuleFilterKBK_DFKs.Balanc" +
                    "ingIFDB_RuleFilterKBK_DFKs_Source], T3.[BalancingIFDB_RuleFilterKBK_DFKs.Balanci" +
                    "ngIFDB_RuleFilterKBK_DFKs_Target])\r\n    FROM (\r\n        SELECT -- Constructing B" +
                    "alancingIFDB_RuleFilterKBK_DFKs_Source\r\n            CreateRef(DataContext.Balanc" +
                    "ingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_DFKs.BalancingIFDB_Ru" +
                    "leFilterKBK_DFKs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [Balancing" +
                    "IFDB_RuleFilterKBK_DFKs.BalancingIFDB_RuleFilterKBK_DFKs_Source], \r\n            " +
                    "T2.[BalancingIFDB_RuleFilterKBK_DFKs.BalancingIFDB_RuleFilterKBK_DFKs_Target]\r\n " +
                    "       FROM (\r\n            SELECT -- Constructing BalancingIFDB_RuleFilterKBK_DF" +
                    "Ks_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_DFKs.BalancingIFDB_Ru" +
                    "leFilterKBK_DFKs_Source.Id], \r\n                CreateRef(DataContext.DFK, row(T1" +
                    ".[BalancingIFDB_RuleFilterKBK_DFKs.BalancingIFDB_RuleFilterKBK_DFKs_Target.Id])," +
                    " [Tests.DFK]) AS [BalancingIFDB_RuleFilterKBK_DFKs.BalancingIFDB_RuleFilterKBK_D" +
                    "FKs_Target]\r\n            FROM (\r\n                SELECT \r\n                    T." +
                    "idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_DFKs.BalancingIFDB" +
                    "_RuleFilterKBK_DFKs_Source.Id], \r\n                    T.idDFK AS [BalancingIFDB_" +
                    "RuleFilterKBK_DFKs.BalancingIFDB_RuleFilterKBK_DFKs_Target.Id], \r\n              " +
                    "      True AS _from0\r\n                FROM CodeFirstDatabase.BalancingIFDB_RuleF" +
                    "ilterKBKDFK AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_DKRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView694()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_DKRs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_DKRs\r\n        [Tes" +
                    "ts.BalancingIFDB_RuleFilterKBK_DKRs](T3.[BalancingIFDB_RuleFilterKBK_DKRs.Balanc" +
                    "ingIFDB_RuleFilterKBK_DKRs_Source], T3.[BalancingIFDB_RuleFilterKBK_DKRs.Balanci" +
                    "ngIFDB_RuleFilterKBK_DKRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing B" +
                    "alancingIFDB_RuleFilterKBK_DKRs_Source\r\n            CreateRef(DataContext.Balanc" +
                    "ingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_DKRs.BalancingIFDB_Ru" +
                    "leFilterKBK_DKRs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [Balancing" +
                    "IFDB_RuleFilterKBK_DKRs.BalancingIFDB_RuleFilterKBK_DKRs_Source], \r\n            " +
                    "T2.[BalancingIFDB_RuleFilterKBK_DKRs.BalancingIFDB_RuleFilterKBK_DKRs_Target]\r\n " +
                    "       FROM (\r\n            SELECT -- Constructing BalancingIFDB_RuleFilterKBK_DK" +
                    "Rs_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_DKRs.BalancingIFDB_Ru" +
                    "leFilterKBK_DKRs_Source.Id], \r\n                CreateRef(DataContext.DKR, row(T1" +
                    ".[BalancingIFDB_RuleFilterKBK_DKRs.BalancingIFDB_RuleFilterKBK_DKRs_Target.Id])," +
                    " [Tests.DKR]) AS [BalancingIFDB_RuleFilterKBK_DKRs.BalancingIFDB_RuleFilterKBK_D" +
                    "KRs_Target]\r\n            FROM (\r\n                SELECT \r\n                    T." +
                    "idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_DKRs.BalancingIFDB" +
                    "_RuleFilterKBK_DKRs_Source.Id], \r\n                    T.idDKR AS [BalancingIFDB_" +
                    "RuleFilterKBK_DKRs.BalancingIFDB_RuleFilterKBK_DKRs_Target.Id], \r\n              " +
                    "      True AS _from0\r\n                FROM CodeFirstDatabase.BalancingIFDB_RuleF" +
                    "ilterKBKDKR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_DEKs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView695()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_DEKs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_DEKs\r\n        [Tes" +
                    "ts.BalancingIFDB_RuleFilterKBK_DEKs](T3.[BalancingIFDB_RuleFilterKBK_DEKs.Balanc" +
                    "ingIFDB_RuleFilterKBK_DEKs_Source], T3.[BalancingIFDB_RuleFilterKBK_DEKs.Balanci" +
                    "ngIFDB_RuleFilterKBK_DEKs_Target])\r\n    FROM (\r\n        SELECT -- Constructing B" +
                    "alancingIFDB_RuleFilterKBK_DEKs_Source\r\n            CreateRef(DataContext.Balanc" +
                    "ingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_DEKs.BalancingIFDB_Ru" +
                    "leFilterKBK_DEKs_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [Balancing" +
                    "IFDB_RuleFilterKBK_DEKs.BalancingIFDB_RuleFilterKBK_DEKs_Source], \r\n            " +
                    "T2.[BalancingIFDB_RuleFilterKBK_DEKs.BalancingIFDB_RuleFilterKBK_DEKs_Target]\r\n " +
                    "       FROM (\r\n            SELECT -- Constructing BalancingIFDB_RuleFilterKBK_DE" +
                    "Ks_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_DEKs.BalancingIFDB_Ru" +
                    "leFilterKBK_DEKs_Source.Id], \r\n                CreateRef(DataContext.DEK, row(T1" +
                    ".[BalancingIFDB_RuleFilterKBK_DEKs.BalancingIFDB_RuleFilterKBK_DEKs_Target.Id])," +
                    " [Tests.DEK]) AS [BalancingIFDB_RuleFilterKBK_DEKs.BalancingIFDB_RuleFilterKBK_D" +
                    "EKs_Target]\r\n            FROM (\r\n                SELECT \r\n                    T." +
                    "idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_DEKs.BalancingIFDB" +
                    "_RuleFilterKBK_DEKs_Source.Id], \r\n                    T.idDEK AS [BalancingIFDB_" +
                    "RuleFilterKBK_DEKs.BalancingIFDB_RuleFilterKBK_DEKs_Target.Id], \r\n              " +
                    "      True AS _from0\r\n                FROM CodeFirstDatabase.BalancingIFDB_RuleF" +
                    "ilterKBKDEK AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_CodeSubsidys
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView696()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_CodeSubsidys", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_CodeSubsidys\r\n    " +
                    "    [Tests.BalancingIFDB_RuleFilterKBK_CodeSubsidys](T3.[BalancingIFDB_RuleFilte" +
                    "rKBK_CodeSubsidys.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Source], T3.[Balancin" +
                    "gIFDB_RuleFilterKBK_CodeSubsidys.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Target" +
                    "])\r\n    FROM (\r\n        SELECT -- Constructing BalancingIFDB_RuleFilterKBK_CodeS" +
                    "ubsidys_Source\r\n            CreateRef(DataContext.BalancingIFDB_RuleFilterKBK, r" +
                    "ow(T2.[BalancingIFDB_RuleFilterKBK_CodeSubsidys.BalancingIFDB_RuleFilterKBK_Code" +
                    "Subsidys_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [BalancingIFDB_Rul" +
                    "eFilterKBK_CodeSubsidys.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Source], \r\n    " +
                    "        T2.[BalancingIFDB_RuleFilterKBK_CodeSubsidys.BalancingIFDB_RuleFilterKBK" +
                    "_CodeSubsidys_Target]\r\n        FROM (\r\n            SELECT -- Constructing Balanc" +
                    "ingIFDB_RuleFilterKBK_CodeSubsidys_Target\r\n                T1.[BalancingIFDB_Rul" +
                    "eFilterKBK_CodeSubsidys.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Source.Id], \r\n " +
                    "               CreateRef(DataContext.CodeSubsidy, row(T1.[BalancingIFDB_RuleFilt" +
                    "erKBK_CodeSubsidys.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Target.Id]), [Tests." +
                    "CodeSubsidy]) AS [BalancingIFDB_RuleFilterKBK_CodeSubsidys.BalancingIFDB_RuleFil" +
                    "terKBK_CodeSubsidys_Target]\r\n            FROM (\r\n                SELECT \r\n      " +
                    "              T.idBalancingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_Co" +
                    "deSubsidys.BalancingIFDB_RuleFilterKBK_CodeSubsidys_Source.Id], \r\n              " +
                    "      T.idCodeSubsidy AS [BalancingIFDB_RuleFilterKBK_CodeSubsidys.BalancingIFDB" +
                    "_RuleFilterKBK_CodeSubsidys_Target.Id], \r\n                    True AS _from0\r\n  " +
                    "              FROM CodeFirstDatabase.BalancingIFDB_RuleFilterKBKCodeSubsidy AS T" +
                    "\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_BranchCodes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView697()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_BranchCodes", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_BranchCodes\r\n     " +
                    "   [Tests.BalancingIFDB_RuleFilterKBK_BranchCodes](T3.[BalancingIFDB_RuleFilterK" +
                    "BK_BranchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes_Source], T3.[BalancingIFD" +
                    "B_RuleFilterKBK_BranchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes_Target])\r\n  " +
                    "  FROM (\r\n        SELECT -- Constructing BalancingIFDB_RuleFilterKBK_BranchCodes" +
                    "_Source\r\n            CreateRef(DataContext.BalancingIFDB_RuleFilterKBK, row(T2.[" +
                    "BalancingIFDB_RuleFilterKBK_BranchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes_" +
                    "Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [BalancingIFDB_RuleFilterKB" +
                    "K_BranchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes_Source], \r\n            T2." +
                    "[BalancingIFDB_RuleFilterKBK_BranchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes" +
                    "_Target]\r\n        FROM (\r\n            SELECT -- Constructing BalancingIFDB_RuleF" +
                    "ilterKBK_BranchCodes_Target\r\n                T1.[BalancingIFDB_RuleFilterKBK_Bra" +
                    "nchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes_Source.Id], \r\n                C" +
                    "reateRef(DataContext.BranchCode, row(T1.[BalancingIFDB_RuleFilterKBK_BranchCodes" +
                    ".BalancingIFDB_RuleFilterKBK_BranchCodes_Target.Id]), [Tests.BranchCode]) AS [Ba" +
                    "lancingIFDB_RuleFilterKBK_BranchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes_Ta" +
                    "rget]\r\n            FROM (\r\n                SELECT \r\n                    T.idBala" +
                    "ncingIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_BranchCodes.BalancingIFD" +
                    "B_RuleFilterKBK_BranchCodes_Source.Id], \r\n                    T.idBranchCode AS " +
                    "[BalancingIFDB_RuleFilterKBK_BranchCodes.BalancingIFDB_RuleFilterKBK_BranchCodes" +
                    "_Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFirs" +
                    "tDatabase.BalancingIFDB_RuleFilterKBKBranchCode AS T\r\n            ) AS T1\r\n     " +
                    "   ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_OKATOs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView698()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_OKATOs", "\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_OKATOs\r\n        [T" +
                    "ests.BalancingIFDB_RuleFilterKBK_OKATOs](T3.[BalancingIFDB_RuleFilterKBK_OKATOs." +
                    "BalancingIFDB_RuleFilterKBK_OKATOs_Source], T3.[BalancingIFDB_RuleFilterKBK_OKAT" +
                    "Os.BalancingIFDB_RuleFilterKBK_OKATOs_Target])\r\n    FROM (\r\n        SELECT -- Co" +
                    "nstructing BalancingIFDB_RuleFilterKBK_OKATOs_Source\r\n            CreateRef(Data" +
                    "Context.BalancingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_OKATOs." +
                    "BalancingIFDB_RuleFilterKBK_OKATOs_Source.Id]), [Tests.BalancingIFDB_RuleFilterK" +
                    "BK]) AS [BalancingIFDB_RuleFilterKBK_OKATOs.BalancingIFDB_RuleFilterKBK_OKATOs_S" +
                    "ource], \r\n            T2.[BalancingIFDB_RuleFilterKBK_OKATOs.BalancingIFDB_RuleF" +
                    "ilterKBK_OKATOs_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bala" +
                    "ncingIFDB_RuleFilterKBK_OKATOs_Target\r\n                T1.[BalancingIFDB_RuleFil" +
                    "terKBK_OKATOs.BalancingIFDB_RuleFilterKBK_OKATOs_Source.Id], \r\n                C" +
                    "reateRef(DataContext.OKATO, row(T1.[BalancingIFDB_RuleFilterKBK_OKATOs.Balancing" +
                    "IFDB_RuleFilterKBK_OKATOs_Target.Id]), [Tests.OKATO]) AS [BalancingIFDB_RuleFilt" +
                    "erKBK_OKATOs.BalancingIFDB_RuleFilterKBK_OKATOs_Target]\r\n            FROM (\r\n   " +
                    "             SELECT \r\n                    T.idBalancingIFDB_RuleFilterKBK AS [Ba" +
                    "lancingIFDB_RuleFilterKBK_OKATOs.BalancingIFDB_RuleFilterKBK_OKATOs_Source.Id], " +
                    "\r\n                    T.idOKATO AS [BalancingIFDB_RuleFilterKBK_OKATOs.Balancing" +
                    "IFDB_RuleFilterKBK_OKATOs_Target.Id], \r\n                    True AS _from0\r\n    " +
                    "            FROM CodeFirstDatabase.BalancingIFDB_RuleFilterKBKOKATO AS T\r\n      " +
                    "      ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView699()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2288);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalancingIFDB_RuleFilterKBK_AuthorityOfExpens");
            viewString.Append("eObligations\r\n        [Tests.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseOblig");
            viewString.Append("ations](T3.[BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations.BalancingI");
            viewString.Append("FDB_RuleFilterKBK_AuthorityOfExpenseObligations_Source], T3.[BalancingIFDB_RuleF");
            viewString.Append("ilterKBK_AuthorityOfExpenseObligations.BalancingIFDB_RuleFilterKBK_AuthorityOfEx");
            viewString.Append("penseObligations_Target])\r\n    FROM (\r\n        SELECT -- Constructing BalancingI");
            viewString.Append("FDB_RuleFilterKBK_AuthorityOfExpenseObligations_Source\r\n            CreateRef(Da");
            viewString.Append("taContext.BalancingIFDB_RuleFilterKBK, row(T2.[BalancingIFDB_RuleFilterKBK_Autho");
            viewString.Append("rityOfExpenseObligations.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligatio");
            viewString.Append("ns_Source.Id]), [Tests.BalancingIFDB_RuleFilterKBK]) AS [BalancingIFDB_RuleFilte");
            viewString.Append("rKBK_AuthorityOfExpenseObligations.BalancingIFDB_RuleFilterKBK_AuthorityOfExpens");
            viewString.Append("eObligations_Source], \r\n            T2.[BalancingIFDB_RuleFilterKBK_AuthorityOfE");
            viewString.Append("xpenseObligations.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations_Targ");
            viewString.Append("et]\r\n        FROM (\r\n            SELECT -- Constructing BalancingIFDB_RuleFilter");
            viewString.Append("KBK_AuthorityOfExpenseObligations_Target\r\n                T1.[BalancingIFDB_Rule");
            viewString.Append("FilterKBK_AuthorityOfExpenseObligations.BalancingIFDB_RuleFilterKBK_AuthorityOfE");
            viewString.Append("xpenseObligations_Source.Id], \r\n                CreateRef(DataContext.AuthorityO");
            viewString.Append("fExpenseObligation, row(T1.[BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObliga");
            viewString.Append("tions.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations_Target.Id]), [Te");
            viewString.Append("sts.AuthorityOfExpenseObligation]) AS [BalancingIFDB_RuleFilterKBK_AuthorityOfEx");
            viewString.Append("penseObligations.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations_Targe");
            viewString.Append("t]\r\n            FROM (\r\n                SELECT \r\n                    T.idBalanci");
            viewString.Append("ngIFDB_RuleFilterKBK AS [BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligatio");
            viewString.Append("ns.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations_Source.Id], \r\n     ");
            viewString.Append("               T.idAuthorityOfExpenseObligation AS [BalancingIFDB_RuleFilterKBK_");
            viewString.Append("AuthorityOfExpenseObligations.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObli");
            viewString.Append("gations_Target.Id], \r\n                    True AS _from0\r\n                FROM C");
            viewString.Append("odeFirstDatabase.BalancingIFDB_RuleFilterKBKAuthorityOfExpenseObligation AS T\r\n ");
            viewString.Append("           ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalancingIFDB_RuleFilterKBK_AuthorityOfExpenseObligations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_FinanceSources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView700()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_FinanceSources", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_FinanceSources\r\n      " +
                    "  [Tests.BalanceConfig_FilterKBK_FinanceSources](T3.[BalanceConfig_FilterKBK_Fin" +
                    "anceSources.BalanceConfig_FilterKBK_FinanceSources_Source], T3.[BalanceConfig_Fi" +
                    "lterKBK_FinanceSources.BalanceConfig_FilterKBK_FinanceSources_Target])\r\n    FROM" +
                    " (\r\n        SELECT -- Constructing BalanceConfig_FilterKBK_FinanceSources_Source" +
                    "\r\n            CreateRef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConf" +
                    "ig_FilterKBK_FinanceSources.BalanceConfig_FilterKBK_FinanceSources_Source.Id]), " +
                    "[Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_FinanceSources.Bala" +
                    "nceConfig_FilterKBK_FinanceSources_Source], \r\n            T2.[BalanceConfig_Filt" +
                    "erKBK_FinanceSources.BalanceConfig_FilterKBK_FinanceSources_Target]\r\n        FRO" +
                    "M (\r\n            SELECT -- Constructing BalanceConfig_FilterKBK_FinanceSources_T" +
                    "arget\r\n                T1.[BalanceConfig_FilterKBK_FinanceSources.BalanceConfig_" +
                    "FilterKBK_FinanceSources_Source.Id], \r\n                CreateRef(DataContext.Fin" +
                    "anceSource, row(T1.[BalanceConfig_FilterKBK_FinanceSources.BalanceConfig_FilterK" +
                    "BK_FinanceSources_Target.Id]), [Tests.FinanceSource]) AS [BalanceConfig_FilterKB" +
                    "K_FinanceSources.BalanceConfig_FilterKBK_FinanceSources_Target]\r\n            FRO" +
                    "M (\r\n                SELECT \r\n                    T.idBalanceConfig_FilterKBK AS" +
                    " [BalanceConfig_FilterKBK_FinanceSources.BalanceConfig_FilterKBK_FinanceSources_" +
                    "Source.Id], \r\n                    T.idFinanceSource AS [BalanceConfig_FilterKBK_" +
                    "FinanceSources.BalanceConfig_FilterKBK_FinanceSources_Target.Id], \r\n            " +
                    "        True AS _from0\r\n                FROM CodeFirstDatabase.BalanceConfig_Fil" +
                    "terKBKFinanceSource AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_KFOs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView701()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_KFOs", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_KFOs
        [Tests.BalanceConfig_FilterKBK_KFOs](T3.[BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Source], T3.[BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Target])
    FROM (
        SELECT -- Constructing BalanceConfig_FilterKBK_KFOs_Source
            CreateRef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Source.Id]), [Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Source], 
            T2.[BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Target]
        FROM (
            SELECT -- Constructing BalanceConfig_FilterKBK_KFOs_Target
                T1.[BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Source.Id], 
                CreateRef(DataContext.KFO, row(T1.[BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Target.Id]), [Tests.KFO]) AS [BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Target]
            FROM (
                SELECT 
                    T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Source.Id], 
                    T.idKFO AS [BalanceConfig_FilterKBK_KFOs.BalanceConfig_FilterKBK_KFOs_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.BalanceConfig_FilterKBKKFO AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_KVSRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView702()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_KVSRs", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_KVSRs\r\n        [Tests." +
                    "BalanceConfig_FilterKBK_KVSRs](T3.[BalanceConfig_FilterKBK_KVSRs.BalanceConfig_F" +
                    "ilterKBK_KVSRs_Source], T3.[BalanceConfig_FilterKBK_KVSRs.BalanceConfig_FilterKB" +
                    "K_KVSRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing BalanceConfig_Filte" +
                    "rKBK_KVSRs_Source\r\n            CreateRef(DataContext.BalanceConfig_FilterKBK, ro" +
                    "w(T2.[BalanceConfig_FilterKBK_KVSRs.BalanceConfig_FilterKBK_KVSRs_Source.Id]), [" +
                    "Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_KVSRs.BalanceConfig_" +
                    "FilterKBK_KVSRs_Source], \r\n            T2.[BalanceConfig_FilterKBK_KVSRs.Balance" +
                    "Config_FilterKBK_KVSRs_Target]\r\n        FROM (\r\n            SELECT -- Constructi" +
                    "ng BalanceConfig_FilterKBK_KVSRs_Target\r\n                T1.[BalanceConfig_Filte" +
                    "rKBK_KVSRs.BalanceConfig_FilterKBK_KVSRs_Source.Id], \r\n                CreateRef" +
                    "(DataContext.KVSR, row(T1.[BalanceConfig_FilterKBK_KVSRs.BalanceConfig_FilterKBK" +
                    "_KVSRs_Target.Id]), [Tests.KVSR]) AS [BalanceConfig_FilterKBK_KVSRs.BalanceConfi" +
                    "g_FilterKBK_KVSRs_Target]\r\n            FROM (\r\n                SELECT \r\n        " +
                    "            T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_KVSRs.Balanc" +
                    "eConfig_FilterKBK_KVSRs_Source.Id], \r\n                    T.idKVSR AS [BalanceCo" +
                    "nfig_FilterKBK_KVSRs.BalanceConfig_FilterKBK_KVSRs_Target.Id], \r\n               " +
                    "     True AS _from0\r\n                FROM CodeFirstDatabase.BalanceConfig_Filter" +
                    "KBKKVSR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_RZPRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView703()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_RZPRs", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_RZPRs\r\n        [Tests." +
                    "BalanceConfig_FilterKBK_RZPRs](T3.[BalanceConfig_FilterKBK_RZPRs.BalanceConfig_F" +
                    "ilterKBK_RZPRs_Source], T3.[BalanceConfig_FilterKBK_RZPRs.BalanceConfig_FilterKB" +
                    "K_RZPRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing BalanceConfig_Filte" +
                    "rKBK_RZPRs_Source\r\n            CreateRef(DataContext.BalanceConfig_FilterKBK, ro" +
                    "w(T2.[BalanceConfig_FilterKBK_RZPRs.BalanceConfig_FilterKBK_RZPRs_Source.Id]), [" +
                    "Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_RZPRs.BalanceConfig_" +
                    "FilterKBK_RZPRs_Source], \r\n            T2.[BalanceConfig_FilterKBK_RZPRs.Balance" +
                    "Config_FilterKBK_RZPRs_Target]\r\n        FROM (\r\n            SELECT -- Constructi" +
                    "ng BalanceConfig_FilterKBK_RZPRs_Target\r\n                T1.[BalanceConfig_Filte" +
                    "rKBK_RZPRs.BalanceConfig_FilterKBK_RZPRs_Source.Id], \r\n                CreateRef" +
                    "(DataContext.RZPR, row(T1.[BalanceConfig_FilterKBK_RZPRs.BalanceConfig_FilterKBK" +
                    "_RZPRs_Target.Id]), [Tests.RZPR]) AS [BalanceConfig_FilterKBK_RZPRs.BalanceConfi" +
                    "g_FilterKBK_RZPRs_Target]\r\n            FROM (\r\n                SELECT \r\n        " +
                    "            T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_RZPRs.Balanc" +
                    "eConfig_FilterKBK_RZPRs_Source.Id], \r\n                    T.idRZPR AS [BalanceCo" +
                    "nfig_FilterKBK_RZPRs.BalanceConfig_FilterKBK_RZPRs_Target.Id], \r\n               " +
                    "     True AS _from0\r\n                FROM CodeFirstDatabase.BalanceConfig_Filter" +
                    "KBKRZPR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_KCSRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView704()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_KCSRs", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_KCSRs\r\n        [Tests." +
                    "BalanceConfig_FilterKBK_KCSRs](T3.[BalanceConfig_FilterKBK_KCSRs.BalanceConfig_F" +
                    "ilterKBK_KCSRs_Source], T3.[BalanceConfig_FilterKBK_KCSRs.BalanceConfig_FilterKB" +
                    "K_KCSRs_Target])\r\n    FROM (\r\n        SELECT -- Constructing BalanceConfig_Filte" +
                    "rKBK_KCSRs_Source\r\n            CreateRef(DataContext.BalanceConfig_FilterKBK, ro" +
                    "w(T2.[BalanceConfig_FilterKBK_KCSRs.BalanceConfig_FilterKBK_KCSRs_Source.Id]), [" +
                    "Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_KCSRs.BalanceConfig_" +
                    "FilterKBK_KCSRs_Source], \r\n            T2.[BalanceConfig_FilterKBK_KCSRs.Balance" +
                    "Config_FilterKBK_KCSRs_Target]\r\n        FROM (\r\n            SELECT -- Constructi" +
                    "ng BalanceConfig_FilterKBK_KCSRs_Target\r\n                T1.[BalanceConfig_Filte" +
                    "rKBK_KCSRs.BalanceConfig_FilterKBK_KCSRs_Source.Id], \r\n                CreateRef" +
                    "(DataContext.KCSR, row(T1.[BalanceConfig_FilterKBK_KCSRs.BalanceConfig_FilterKBK" +
                    "_KCSRs_Target.Id]), [Tests.KCSR]) AS [BalanceConfig_FilterKBK_KCSRs.BalanceConfi" +
                    "g_FilterKBK_KCSRs_Target]\r\n            FROM (\r\n                SELECT \r\n        " +
                    "            T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_KCSRs.Balanc" +
                    "eConfig_FilterKBK_KCSRs_Source.Id], \r\n                    T.idKCSR AS [BalanceCo" +
                    "nfig_FilterKBK_KCSRs.BalanceConfig_FilterKBK_KCSRs_Target.Id], \r\n               " +
                    "     True AS _from0\r\n                FROM CodeFirstDatabase.BalanceConfig_Filter" +
                    "KBKKCSR AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_KVRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView705()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_KVRs", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_KVRs
        [Tests.BalanceConfig_FilterKBK_KVRs](T3.[BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Source], T3.[BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Target])
    FROM (
        SELECT -- Constructing BalanceConfig_FilterKBK_KVRs_Source
            CreateRef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Source.Id]), [Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Source], 
            T2.[BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Target]
        FROM (
            SELECT -- Constructing BalanceConfig_FilterKBK_KVRs_Target
                T1.[BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Source.Id], 
                CreateRef(DataContext.KVR, row(T1.[BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Target.Id]), [Tests.KVR]) AS [BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Target]
            FROM (
                SELECT 
                    T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Source.Id], 
                    T.idKVR AS [BalanceConfig_FilterKBK_KVRs.BalanceConfig_FilterKBK_KVRs_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.BalanceConfig_FilterKBKKVR AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_KOSGUs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView706()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_KOSGUs", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_KOSGUs\r\n        [Tests" +
                    ".BalanceConfig_FilterKBK_KOSGUs](T3.[BalanceConfig_FilterKBK_KOSGUs.BalanceConfi" +
                    "g_FilterKBK_KOSGUs_Source], T3.[BalanceConfig_FilterKBK_KOSGUs.BalanceConfig_Fil" +
                    "terKBK_KOSGUs_Target])\r\n    FROM (\r\n        SELECT -- Constructing BalanceConfig" +
                    "_FilterKBK_KOSGUs_Source\r\n            CreateRef(DataContext.BalanceConfig_Filter" +
                    "KBK, row(T2.[BalanceConfig_FilterKBK_KOSGUs.BalanceConfig_FilterKBK_KOSGUs_Sourc" +
                    "e.Id]), [Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_KOSGUs.Bala" +
                    "nceConfig_FilterKBK_KOSGUs_Source], \r\n            T2.[BalanceConfig_FilterKBK_KO" +
                    "SGUs.BalanceConfig_FilterKBK_KOSGUs_Target]\r\n        FROM (\r\n            SELECT " +
                    "-- Constructing BalanceConfig_FilterKBK_KOSGUs_Target\r\n                T1.[Balan" +
                    "ceConfig_FilterKBK_KOSGUs.BalanceConfig_FilterKBK_KOSGUs_Source.Id], \r\n         " +
                    "       CreateRef(DataContext.KOSGU, row(T1.[BalanceConfig_FilterKBK_KOSGUs.Balan" +
                    "ceConfig_FilterKBK_KOSGUs_Target.Id]), [Tests.KOSGU]) AS [BalanceConfig_FilterKB" +
                    "K_KOSGUs.BalanceConfig_FilterKBK_KOSGUs_Target]\r\n            FROM (\r\n           " +
                    "     SELECT \r\n                    T.idBalanceConfig_FilterKBK AS [BalanceConfig_" +
                    "FilterKBK_KOSGUs.BalanceConfig_FilterKBK_KOSGUs_Source.Id], \r\n                  " +
                    "  T.idKOSGU AS [BalanceConfig_FilterKBK_KOSGUs.BalanceConfig_FilterKBK_KOSGUs_Ta" +
                    "rget.Id], \r\n                    True AS _from0\r\n                FROM CodeFirstDa" +
                    "tabase.BalanceConfig_FilterKBKKOSGU AS T\r\n            ) AS T1\r\n        ) AS T2\r\n" +
                    "    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_DFKs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView707()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_DFKs", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_DFKs
        [Tests.BalanceConfig_FilterKBK_DFKs](T3.[BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Source], T3.[BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Target])
    FROM (
        SELECT -- Constructing BalanceConfig_FilterKBK_DFKs_Source
            CreateRef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Source.Id]), [Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Source], 
            T2.[BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Target]
        FROM (
            SELECT -- Constructing BalanceConfig_FilterKBK_DFKs_Target
                T1.[BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Source.Id], 
                CreateRef(DataContext.DFK, row(T1.[BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Target.Id]), [Tests.DFK]) AS [BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Target]
            FROM (
                SELECT 
                    T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Source.Id], 
                    T.idDFK AS [BalanceConfig_FilterKBK_DFKs.BalanceConfig_FilterKBK_DFKs_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.BalanceConfig_FilterKBKDFK AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_DKRs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView708()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_DKRs", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_DKRs
        [Tests.BalanceConfig_FilterKBK_DKRs](T3.[BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Source], T3.[BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Target])
    FROM (
        SELECT -- Constructing BalanceConfig_FilterKBK_DKRs_Source
            CreateRef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Source.Id]), [Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Source], 
            T2.[BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Target]
        FROM (
            SELECT -- Constructing BalanceConfig_FilterKBK_DKRs_Target
                T1.[BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Source.Id], 
                CreateRef(DataContext.DKR, row(T1.[BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Target.Id]), [Tests.DKR]) AS [BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Target]
            FROM (
                SELECT 
                    T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Source.Id], 
                    T.idDKR AS [BalanceConfig_FilterKBK_DKRs.BalanceConfig_FilterKBK_DKRs_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.BalanceConfig_FilterKBKDKR AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_DEKs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView709()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_DEKs", @"
    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_DEKs
        [Tests.BalanceConfig_FilterKBK_DEKs](T3.[BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Source], T3.[BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Target])
    FROM (
        SELECT -- Constructing BalanceConfig_FilterKBK_DEKs_Source
            CreateRef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Source.Id]), [Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Source], 
            T2.[BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Target]
        FROM (
            SELECT -- Constructing BalanceConfig_FilterKBK_DEKs_Target
                T1.[BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Source.Id], 
                CreateRef(DataContext.DEK, row(T1.[BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Target.Id]), [Tests.DEK]) AS [BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Target]
            FROM (
                SELECT 
                    T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Source.Id], 
                    T.idDEK AS [BalanceConfig_FilterKBK_DEKs.BalanceConfig_FilterKBK_DEKs_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.BalanceConfig_FilterKBKDEK AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_CodeSubsidys
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView710()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_CodeSubsidys", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_CodeSubsidys\r\n        " +
                    "[Tests.BalanceConfig_FilterKBK_CodeSubsidys](T3.[BalanceConfig_FilterKBK_CodeSub" +
                    "sidys.BalanceConfig_FilterKBK_CodeSubsidys_Source], T3.[BalanceConfig_FilterKBK_" +
                    "CodeSubsidys.BalanceConfig_FilterKBK_CodeSubsidys_Target])\r\n    FROM (\r\n        " +
                    "SELECT -- Constructing BalanceConfig_FilterKBK_CodeSubsidys_Source\r\n            " +
                    "CreateRef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConfig_FilterKBK_C" +
                    "odeSubsidys.BalanceConfig_FilterKBK_CodeSubsidys_Source.Id]), [Tests.BalanceConf" +
                    "ig_FilterKBK]) AS [BalanceConfig_FilterKBK_CodeSubsidys.BalanceConfig_FilterKBK_" +
                    "CodeSubsidys_Source], \r\n            T2.[BalanceConfig_FilterKBK_CodeSubsidys.Bal" +
                    "anceConfig_FilterKBK_CodeSubsidys_Target]\r\n        FROM (\r\n            SELECT --" +
                    " Constructing BalanceConfig_FilterKBK_CodeSubsidys_Target\r\n                T1.[B" +
                    "alanceConfig_FilterKBK_CodeSubsidys.BalanceConfig_FilterKBK_CodeSubsidys_Source." +
                    "Id], \r\n                CreateRef(DataContext.CodeSubsidy, row(T1.[BalanceConfig_" +
                    "FilterKBK_CodeSubsidys.BalanceConfig_FilterKBK_CodeSubsidys_Target.Id]), [Tests." +
                    "CodeSubsidy]) AS [BalanceConfig_FilterKBK_CodeSubsidys.BalanceConfig_FilterKBK_C" +
                    "odeSubsidys_Target]\r\n            FROM (\r\n                SELECT \r\n              " +
                    "      T.idBalanceConfig_FilterKBK AS [BalanceConfig_FilterKBK_CodeSubsidys.Balan" +
                    "ceConfig_FilterKBK_CodeSubsidys_Source.Id], \r\n                    T.idCodeSubsid" +
                    "y AS [BalanceConfig_FilterKBK_CodeSubsidys.BalanceConfig_FilterKBK_CodeSubsidys_" +
                    "Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFirst" +
                    "Database.BalanceConfig_FilterKBKCodeSubsidy AS T\r\n            ) AS T1\r\n        )" +
                    " AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_BranchCodes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView711()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_BranchCodes", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_BranchCodes\r\n        [" +
                    "Tests.BalanceConfig_FilterKBK_BranchCodes](T3.[BalanceConfig_FilterKBK_BranchCod" +
                    "es.BalanceConfig_FilterKBK_BranchCodes_Source], T3.[BalanceConfig_FilterKBK_Bran" +
                    "chCodes.BalanceConfig_FilterKBK_BranchCodes_Target])\r\n    FROM (\r\n        SELECT" +
                    " -- Constructing BalanceConfig_FilterKBK_BranchCodes_Source\r\n            CreateR" +
                    "ef(DataContext.BalanceConfig_FilterKBK, row(T2.[BalanceConfig_FilterKBK_BranchCo" +
                    "des.BalanceConfig_FilterKBK_BranchCodes_Source.Id]), [Tests.BalanceConfig_Filter" +
                    "KBK]) AS [BalanceConfig_FilterKBK_BranchCodes.BalanceConfig_FilterKBK_BranchCode" +
                    "s_Source], \r\n            T2.[BalanceConfig_FilterKBK_BranchCodes.BalanceConfig_F" +
                    "ilterKBK_BranchCodes_Target]\r\n        FROM (\r\n            SELECT -- Constructing" +
                    " BalanceConfig_FilterKBK_BranchCodes_Target\r\n                T1.[BalanceConfig_F" +
                    "ilterKBK_BranchCodes.BalanceConfig_FilterKBK_BranchCodes_Source.Id], \r\n         " +
                    "       CreateRef(DataContext.BranchCode, row(T1.[BalanceConfig_FilterKBK_BranchC" +
                    "odes.BalanceConfig_FilterKBK_BranchCodes_Target.Id]), [Tests.BranchCode]) AS [Ba" +
                    "lanceConfig_FilterKBK_BranchCodes.BalanceConfig_FilterKBK_BranchCodes_Target]\r\n " +
                    "           FROM (\r\n                SELECT \r\n                    T.idBalanceConfi" +
                    "g_FilterKBK AS [BalanceConfig_FilterKBK_BranchCodes.BalanceConfig_FilterKBK_Bran" +
                    "chCodes_Source.Id], \r\n                    T.idBranchCode AS [BalanceConfig_Filte" +
                    "rKBK_BranchCodes.BalanceConfig_FilterKBK_BranchCodes_Target.Id], \r\n             " +
                    "       True AS _from0\r\n                FROM CodeFirstDatabase.BalanceConfig_Filt" +
                    "erKBKBranchCode AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_OKATOs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView712()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_OKATOs", "\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_OKATOs\r\n        [Tests" +
                    ".BalanceConfig_FilterKBK_OKATOs](T3.[BalanceConfig_FilterKBK_OKATOs.BalanceConfi" +
                    "g_FilterKBK_OKATOs_Source], T3.[BalanceConfig_FilterKBK_OKATOs.BalanceConfig_Fil" +
                    "terKBK_OKATOs_Target])\r\n    FROM (\r\n        SELECT -- Constructing BalanceConfig" +
                    "_FilterKBK_OKATOs_Source\r\n            CreateRef(DataContext.BalanceConfig_Filter" +
                    "KBK, row(T2.[BalanceConfig_FilterKBK_OKATOs.BalanceConfig_FilterKBK_OKATOs_Sourc" +
                    "e.Id]), [Tests.BalanceConfig_FilterKBK]) AS [BalanceConfig_FilterKBK_OKATOs.Bala" +
                    "nceConfig_FilterKBK_OKATOs_Source], \r\n            T2.[BalanceConfig_FilterKBK_OK" +
                    "ATOs.BalanceConfig_FilterKBK_OKATOs_Target]\r\n        FROM (\r\n            SELECT " +
                    "-- Constructing BalanceConfig_FilterKBK_OKATOs_Target\r\n                T1.[Balan" +
                    "ceConfig_FilterKBK_OKATOs.BalanceConfig_FilterKBK_OKATOs_Source.Id], \r\n         " +
                    "       CreateRef(DataContext.OKATO, row(T1.[BalanceConfig_FilterKBK_OKATOs.Balan" +
                    "ceConfig_FilterKBK_OKATOs_Target.Id]), [Tests.OKATO]) AS [BalanceConfig_FilterKB" +
                    "K_OKATOs.BalanceConfig_FilterKBK_OKATOs_Target]\r\n            FROM (\r\n           " +
                    "     SELECT \r\n                    T.idBalanceConfig_FilterKBK AS [BalanceConfig_" +
                    "FilterKBK_OKATOs.BalanceConfig_FilterKBK_OKATOs_Source.Id], \r\n                  " +
                    "  T.idOKATO AS [BalanceConfig_FilterKBK_OKATOs.BalanceConfig_FilterKBK_OKATOs_Ta" +
                    "rget.Id], \r\n                    True AS _from0\r\n                FROM CodeFirstDa" +
                    "tabase.BalanceConfig_FilterKBKOKATO AS T\r\n            ) AS T1\r\n        ) AS T2\r\n" +
                    "    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView713()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2176);
            viewString.Append("\r\n    SELECT VALUE -- Constructing BalanceConfig_FilterKBK_AuthorityOfExpenseObl");
            viewString.Append("igations\r\n        [Tests.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations](");
            viewString.Append("T3.[BalanceConfig_FilterKBK_AuthorityOfExpenseObligations.BalanceConfig_FilterKB");
            viewString.Append("K_AuthorityOfExpenseObligations_Source], T3.[BalanceConfig_FilterKBK_AuthorityOf");
            viewString.Append("ExpenseObligations.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations_Target]");
            viewString.Append(")\r\n    FROM (\r\n        SELECT -- Constructing BalanceConfig_FilterKBK_AuthorityO");
            viewString.Append("fExpenseObligations_Source\r\n            CreateRef(DataContext.BalanceConfig_Filt");
            viewString.Append("erKBK, row(T2.[BalanceConfig_FilterKBK_AuthorityOfExpenseObligations.BalanceConf");
            viewString.Append("ig_FilterKBK_AuthorityOfExpenseObligations_Source.Id]), [Tests.BalanceConfig_Fil");
            viewString.Append("terKBK]) AS [BalanceConfig_FilterKBK_AuthorityOfExpenseObligations.BalanceConfig");
            viewString.Append("_FilterKBK_AuthorityOfExpenseObligations_Source], \r\n            T2.[BalanceConfi");
            viewString.Append("g_FilterKBK_AuthorityOfExpenseObligations.BalanceConfig_FilterKBK_AuthorityOfExp");
            viewString.Append("enseObligations_Target]\r\n        FROM (\r\n            SELECT -- Constructing Bala");
            viewString.Append("nceConfig_FilterKBK_AuthorityOfExpenseObligations_Target\r\n                T1.[Ba");
            viewString.Append("lanceConfig_FilterKBK_AuthorityOfExpenseObligations.BalanceConfig_FilterKBK_Auth");
            viewString.Append("orityOfExpenseObligations_Source.Id], \r\n                CreateRef(DataContext.Au");
            viewString.Append("thorityOfExpenseObligation, row(T1.[BalanceConfig_FilterKBK_AuthorityOfExpenseOb");
            viewString.Append("ligations.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations_Target.Id]), [Te");
            viewString.Append("sts.AuthorityOfExpenseObligation]) AS [BalanceConfig_FilterKBK_AuthorityOfExpens");
            viewString.Append("eObligations.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations_Target]\r\n    ");
            viewString.Append("        FROM (\r\n                SELECT \r\n                    T.idBalanceConfig_F");
            viewString.Append("ilterKBK AS [BalanceConfig_FilterKBK_AuthorityOfExpenseObligations.BalanceConfig");
            viewString.Append("_FilterKBK_AuthorityOfExpenseObligations_Source.Id], \r\n                    T.idA");
            viewString.Append("uthorityOfExpenseObligation AS [BalanceConfig_FilterKBK_AuthorityOfExpenseObliga");
            viewString.Append("tions.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations_Target.Id], \r\n      ");
            viewString.Append("              True AS _from0\r\n                FROM CodeFirstDatabase.BalanceConf");
            viewString.Append("ig_FilterKBKAuthorityOfExpenseObligation AS T\r\n            ) AS T1\r\n        ) AS");
            viewString.Append(" T2\r\n    ) AS T3");
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.BalanceConfig_FilterKBK_AuthorityOfExpenseObligations", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DataContext.ApprovalBalancingIFDB_BalancingIFDBs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView714()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ApprovalBalancingIFDB_BalancingIFDBs", "\r\n    SELECT VALUE -- Constructing ApprovalBalancingIFDB_BalancingIFDBs\r\n        " +
                    "[Tests.ApprovalBalancingIFDB_BalancingIFDBs](T3.[ApprovalBalancingIFDB_Balancing" +
                    "IFDBs.ApprovalBalancingIFDB_BalancingIFDBs_Source], T3.[ApprovalBalancingIFDB_Ba" +
                    "lancingIFDBs.ApprovalBalancingIFDB_BalancingIFDBs_Target])\r\n    FROM (\r\n        " +
                    "SELECT -- Constructing ApprovalBalancingIFDB_BalancingIFDBs_Source\r\n            " +
                    "CreateRef(DataContext.ApprovalBalancingIFDB, row(T2.[ApprovalBalancingIFDB_Balan" +
                    "cingIFDBs.ApprovalBalancingIFDB_BalancingIFDBs_Source.Id]), [Tests.ApprovalBalan" +
                    "cingIFDB]) AS [ApprovalBalancingIFDB_BalancingIFDBs.ApprovalBalancingIFDB_Balanc" +
                    "ingIFDBs_Source], \r\n            T2.[ApprovalBalancingIFDB_BalancingIFDBs.Approva" +
                    "lBalancingIFDB_BalancingIFDBs_Target]\r\n        FROM (\r\n            SELECT -- Con" +
                    "structing ApprovalBalancingIFDB_BalancingIFDBs_Target\r\n                T1.[Appro" +
                    "valBalancingIFDB_BalancingIFDBs.ApprovalBalancingIFDB_BalancingIFDBs_Source.Id]," +
                    " \r\n                CreateRef(DataContext.BalancingIFDB, row(T1.[ApprovalBalancin" +
                    "gIFDB_BalancingIFDBs.ApprovalBalancingIFDB_BalancingIFDBs_Target.Id]), [Tests.Ba" +
                    "lancingIFDB]) AS [ApprovalBalancingIFDB_BalancingIFDBs.ApprovalBalancingIFDB_Bal" +
                    "ancingIFDBs_Target]\r\n            FROM (\r\n                SELECT \r\n              " +
                    "      T.idApprovalBalancingIFDB AS [ApprovalBalancingIFDB_BalancingIFDBs.Approva" +
                    "lBalancingIFDB_BalancingIFDBs_Source.Id], \r\n                    T.idBalancingIFD" +
                    "B AS [ApprovalBalancingIFDB_BalancingIFDBs.ApprovalBalancingIFDB_BalancingIFDBs_" +
                    "Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFirst" +
                    "Database.ApprovalBalancingIFDBBalancingIFDB AS T\r\n            ) AS T1\r\n        )" +
                    " AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ApprovalBalancingIFDB_LimitBudgetAllocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView715()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ApprovalBalancingIFDB_LimitBudgetAllocations", "\r\n    SELECT VALUE -- Constructing ApprovalBalancingIFDB_LimitBudgetAllocations\r\n" +
                    "        [Tests.ApprovalBalancingIFDB_LimitBudgetAllocations](T3.[ApprovalBalanci" +
                    "ngIFDB_LimitBudgetAllocations.ApprovalBalancingIFDB_LimitBudgetAllocations_Sourc" +
                    "e], T3.[ApprovalBalancingIFDB_LimitBudgetAllocations.ApprovalBalancingIFDB_Limit" +
                    "BudgetAllocations_Target])\r\n    FROM (\r\n        SELECT -- Constructing ApprovalB" +
                    "alancingIFDB_LimitBudgetAllocations_Source\r\n            CreateRef(DataContext.Ap" +
                    "provalBalancingIFDB, row(T2.[ApprovalBalancingIFDB_LimitBudgetAllocations.Approv" +
                    "alBalancingIFDB_LimitBudgetAllocations_Source.Id]), [Tests.ApprovalBalancingIFDB" +
                    "]) AS [ApprovalBalancingIFDB_LimitBudgetAllocations.ApprovalBalancingIFDB_LimitB" +
                    "udgetAllocations_Source], \r\n            T2.[ApprovalBalancingIFDB_LimitBudgetAll" +
                    "ocations.ApprovalBalancingIFDB_LimitBudgetAllocations_Target]\r\n        FROM (\r\n " +
                    "           SELECT -- Constructing ApprovalBalancingIFDB_LimitBudgetAllocations_T" +
                    "arget\r\n                T1.[ApprovalBalancingIFDB_LimitBudgetAllocations.Approval" +
                    "BalancingIFDB_LimitBudgetAllocations_Source.Id], \r\n                CreateRef(Dat" +
                    "aContext.LimitBudgetAllocations, row(T1.[ApprovalBalancingIFDB_LimitBudgetAlloca" +
                    "tions.ApprovalBalancingIFDB_LimitBudgetAllocations_Target.Id]), [Tests.LimitBudg" +
                    "etAllocations]) AS [ApprovalBalancingIFDB_LimitBudgetAllocations.ApprovalBalanci" +
                    "ngIFDB_LimitBudgetAllocations_Target]\r\n            FROM (\r\n                SELEC" +
                    "T \r\n                    T.idApprovalBalancingIFDB AS [ApprovalBalancingIFDB_Limi" +
                    "tBudgetAllocations.ApprovalBalancingIFDB_LimitBudgetAllocations_Source.Id], \r\n  " +
                    "                  T.idLimitBudgetAllocations AS [ApprovalBalancingIFDB_LimitBudg" +
                    "etAllocations.ApprovalBalancingIFDB_LimitBudgetAllocations_Target.Id], \r\n       " +
                    "             True AS _from0\r\n                FROM CodeFirstDatabase.ApprovalBala" +
                    "ncingIFDBLimitBudgetAllocations AS T\r\n            ) AS T1\r\n        ) AS T2\r\n    " +
                    ") AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.ApprovalBalancingIFDB_ActivityOfSBPs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView716()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ApprovalBalancingIFDB_ActivityOfSBPs", "\r\n    SELECT VALUE -- Constructing ApprovalBalancingIFDB_ActivityOfSBPs\r\n        " +
                    "[Tests.ApprovalBalancingIFDB_ActivityOfSBPs](T3.[ApprovalBalancingIFDB_ActivityO" +
                    "fSBPs.ApprovalBalancingIFDB_ActivityOfSBPs_Source], T3.[ApprovalBalancingIFDB_Ac" +
                    "tivityOfSBPs.ApprovalBalancingIFDB_ActivityOfSBPs_Target])\r\n    FROM (\r\n        " +
                    "SELECT -- Constructing ApprovalBalancingIFDB_ActivityOfSBPs_Source\r\n            " +
                    "CreateRef(DataContext.ApprovalBalancingIFDB, row(T2.[ApprovalBalancingIFDB_Activ" +
                    "ityOfSBPs.ApprovalBalancingIFDB_ActivityOfSBPs_Source.Id]), [Tests.ApprovalBalan" +
                    "cingIFDB]) AS [ApprovalBalancingIFDB_ActivityOfSBPs.ApprovalBalancingIFDB_Activi" +
                    "tyOfSBPs_Source], \r\n            T2.[ApprovalBalancingIFDB_ActivityOfSBPs.Approva" +
                    "lBalancingIFDB_ActivityOfSBPs_Target]\r\n        FROM (\r\n            SELECT -- Con" +
                    "structing ApprovalBalancingIFDB_ActivityOfSBPs_Target\r\n                T1.[Appro" +
                    "valBalancingIFDB_ActivityOfSBPs.ApprovalBalancingIFDB_ActivityOfSBPs_Source.Id]," +
                    " \r\n                CreateRef(DataContext.ActivityOfSBP, row(T1.[ApprovalBalancin" +
                    "gIFDB_ActivityOfSBPs.ApprovalBalancingIFDB_ActivityOfSBPs_Target.Id]), [Tests.Ac" +
                    "tivityOfSBP]) AS [ApprovalBalancingIFDB_ActivityOfSBPs.ApprovalBalancingIFDB_Act" +
                    "ivityOfSBPs_Target]\r\n            FROM (\r\n                SELECT \r\n              " +
                    "      T.idApprovalBalancingIFDB AS [ApprovalBalancingIFDB_ActivityOfSBPs.Approva" +
                    "lBalancingIFDB_ActivityOfSBPs_Source.Id], \r\n                    T.idActivityOfSB" +
                    "P AS [ApprovalBalancingIFDB_ActivityOfSBPs.ApprovalBalancingIFDB_ActivityOfSBPs_" +
                    "Target.Id], \r\n                    True AS _from0\r\n                FROM CodeFirst" +
                    "Database.ApprovalBalancingIFDBActivityOfSBP AS T\r\n            ) AS T1\r\n        )" +
                    " AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.Module_Entity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView717()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Module_Entity", @"
    SELECT VALUE -- Constructing Module_Entity
        [Tests.Module_Entity](T3.[Module_Entity.Module_Entity_Source], T3.[Module_Entity.Module_Entity_Target])
    FROM (
        SELECT -- Constructing Module_Entity_Source
            CreateRef(DataContext.Module, row(T2.[Module_Entity.Module_Entity_Source.Id]), [Tests.Module]) AS [Module_Entity.Module_Entity_Source], 
            T2.[Module_Entity.Module_Entity_Target]
        FROM (
            SELECT -- Constructing Module_Entity_Target
                T1.[Module_Entity.Module_Entity_Source.Id], 
                CreateRef(DataContext.Entity, row(T1.[Module_Entity.Module_Entity_Target.Id]), [Tests.Entity]) AS [Module_Entity.Module_Entity_Target]
            FROM (
                SELECT 
                    T.idModule AS [Module_Entity.Module_Entity_Source.Id], 
                    T.idEntity AS [Module_Entity.Module_Entity_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.ModuleEntity AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.PublicLegalFormationModule_IncludeModule
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView718()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.PublicLegalFormationModule_IncludeModule", "\r\n    SELECT VALUE -- Constructing PublicLegalFormationModule_IncludeModule\r\n    " +
                    "    [Tests.PublicLegalFormationModule_IncludeModule](T3.[PublicLegalFormationMod" +
                    "ule_IncludeModule.PublicLegalFormationModule_IncludeModule_Source], T3.[PublicLe" +
                    "galFormationModule_IncludeModule.PublicLegalFormationModule_IncludeModule_Target" +
                    "])\r\n    FROM (\r\n        SELECT -- Constructing PublicLegalFormationModule_Includ" +
                    "eModule_Source\r\n            CreateRef(DataContext.PublicLegalFormationModule, ro" +
                    "w(T2.[PublicLegalFormationModule_IncludeModule.PublicLegalFormationModule_Includ" +
                    "eModule_Source.Id]), [Tests.PublicLegalFormationModule]) AS [PublicLegalFormatio" +
                    "nModule_IncludeModule.PublicLegalFormationModule_IncludeModule_Source], \r\n      " +
                    "      T2.[PublicLegalFormationModule_IncludeModule.PublicLegalFormationModule_In" +
                    "cludeModule_Target]\r\n        FROM (\r\n            SELECT -- Constructing PublicLe" +
                    "galFormationModule_IncludeModule_Target\r\n                T1.[PublicLegalFormatio" +
                    "nModule_IncludeModule.PublicLegalFormationModule_IncludeModule_Source.Id], \r\n   " +
                    "             CreateRef(DataContext.Module, row(T1.[PublicLegalFormationModule_In" +
                    "cludeModule.PublicLegalFormationModule_IncludeModule_Target.Id]), [Tests.Module]" +
                    ") AS [PublicLegalFormationModule_IncludeModule.PublicLegalFormationModule_Includ" +
                    "eModule_Target]\r\n            FROM (\r\n                SELECT \r\n                  " +
                    "  T.idPublicLegalFormationModule AS [PublicLegalFormationModule_IncludeModule.Pu" +
                    "blicLegalFormationModule_IncludeModule_Source.Id], \r\n                    T.idMod" +
                    "ule AS [PublicLegalFormationModule_IncludeModule.PublicLegalFormationModule_Incl" +
                    "udeModule_Target.Id], \r\n                    True AS _from0\r\n                FROM" +
                    " CodeFirstDatabase.PublicLegalFormationModuleModule AS T\r\n            ) AS T1\r\n " +
                    "       ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.License_Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView719()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.License_Users", @"
    SELECT VALUE -- Constructing License_Users
        [Tests.License_Users](T3.[License_Users.License_Users_Source], T3.[License_Users.License_Users_Target])
    FROM (
        SELECT -- Constructing License_Users_Source
            CreateRef(DataContext.Licenses, row(T2.[License_Users.License_Users_Source.Id]), [Tests.License]) AS [License_Users.License_Users_Source], 
            T2.[License_Users.License_Users_Target]
        FROM (
            SELECT -- Constructing License_Users_Target
                T1.[License_Users.License_Users_Source.Id], 
                CreateRef(DataContext.User, row(T1.[License_Users.License_Users_Target.Id]), [Tests.User]) AS [License_Users.License_Users_Target]
            FROM (
                SELECT 
                    T.idLicense AS [License_Users.License_Users_Source.Id], 
                    T.idUser AS [License_Users.License_Users_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.LicenseUser AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.OrganizationRightExtension_Targets
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView720()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.OrganizationRightExtension_Targets", "\r\n    SELECT VALUE -- Constructing OrganizationRightExtension_Targets\r\n        [T" +
                    "ests.OrganizationRightExtension_Targets](T3.[OrganizationRightExtension_Targets." +
                    "OrganizationRightExtension_Targets_Source], T3.[OrganizationRightExtension_Targe" +
                    "ts.OrganizationRightExtension_Targets_Target])\r\n    FROM (\r\n        SELECT -- Co" +
                    "nstructing OrganizationRightExtension_Targets_Source\r\n            CreateRef(Data" +
                    "Context.OrganizationRightExtension, row(T2.[OrganizationRightExtension_Targets.O" +
                    "rganizationRightExtension_Targets_Source.Id]), [Tests.OrganizationRightExtension" +
                    "]) AS [OrganizationRightExtension_Targets.OrganizationRightExtension_Targets_Sou" +
                    "rce], \r\n            T2.[OrganizationRightExtension_Targets.OrganizationRightExte" +
                    "nsion_Targets_Target]\r\n        FROM (\r\n            SELECT -- Constructing Organi" +
                    "zationRightExtension_Targets_Target\r\n                T1.[OrganizationRightExtens" +
                    "ion_Targets.OrganizationRightExtension_Targets_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.Entity, row(T1.[OrganizationRightExtension_Targets.Organizati" +
                    "onRightExtension_Targets_Target.Id]), [Tests.Entity]) AS [OrganizationRightExten" +
                    "sion_Targets.OrganizationRightExtension_Targets_Target]\r\n            FROM (\r\n   " +
                    "             SELECT \r\n                    T.OrganizationRightExtension AS [Organ" +
                    "izationRightExtension_Targets.OrganizationRightExtension_Targets_Source.Id], \r\n " +
                    "                   T.Entity AS [OrganizationRightExtension_Targets.OrganizationR" +
                    "ightExtension_Targets_Target.Id], \r\n                    True AS _from0\r\n        " +
                    "        FROM CodeFirstDatabase.OrganizationRightExtensionEntity AS T\r\n          " +
                    "  ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.OrganizationRightExtension_Results
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView721()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.OrganizationRightExtension_Results", "\r\n    SELECT VALUE -- Constructing OrganizationRightExtension_Results\r\n        [T" +
                    "ests.OrganizationRightExtension_Results](T3.[OrganizationRightExtension_Results." +
                    "OrganizationRightExtension_Results_Source], T3.[OrganizationRightExtension_Resul" +
                    "ts.OrganizationRightExtension_Results_Target])\r\n    FROM (\r\n        SELECT -- Co" +
                    "nstructing OrganizationRightExtension_Results_Source\r\n            CreateRef(Data" +
                    "Context.OrganizationRightExtension, row(T2.[OrganizationRightExtension_Results.O" +
                    "rganizationRightExtension_Results_Source.Id]), [Tests.OrganizationRightExtension" +
                    "]) AS [OrganizationRightExtension_Results.OrganizationRightExtension_Results_Sou" +
                    "rce], \r\n            T2.[OrganizationRightExtension_Results.OrganizationRightExte" +
                    "nsion_Results_Target]\r\n        FROM (\r\n            SELECT -- Constructing Organi" +
                    "zationRightExtension_Results_Target\r\n                T1.[OrganizationRightExtens" +
                    "ion_Results.OrganizationRightExtension_Results_Source.Id], \r\n                Cre" +
                    "ateRef(DataContext.Entity, row(T1.[OrganizationRightExtension_Results.Organizati" +
                    "onRightExtension_Results_Target.Id]), [Tests.Entity]) AS [OrganizationRightExten" +
                    "sion_Results.OrganizationRightExtension_Results_Target]\r\n            FROM (\r\n   " +
                    "             SELECT \r\n                    T.OrganizationRightExtension AS [Organ" +
                    "izationRightExtension_Results.OrganizationRightExtension_Results_Source.Id], \r\n " +
                    "                   T.Entity AS [OrganizationRightExtension_Results.OrganizationR" +
                    "ightExtension_Results_Target.Id], \r\n                    True AS _from0\r\n        " +
                    "        FROM CodeFirstDatabase.OrganizationRightExtensionEntity1 AS T\r\n         " +
                    "   ) AS T1\r\n        ) AS T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for DataContext.TemplateExport_LinkedEntities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView722()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TemplateExport_LinkedEntities", @"
    SELECT VALUE -- Constructing TemplateExport_LinkedEntities
        [Tests.TemplateExport_LinkedEntities](T3.[TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Source], T3.[TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Target])
    FROM (
        SELECT -- Constructing TemplateExport_LinkedEntities_Source
            CreateRef(DataContext.TemplateExport, row(T2.[TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Source.Id]), [Tests.TemplateExport]) AS [TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Source], 
            T2.[TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Target]
        FROM (
            SELECT -- Constructing TemplateExport_LinkedEntities_Target
                T1.[TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Source.Id], 
                CreateRef(DataContext.Entity, row(T1.[TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Target.Id]), [Tests.Entity]) AS [TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Target]
            FROM (
                SELECT 
                    T.idTemplateExport AS [TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Source.Id], 
                    T.idEntity AS [TemplateExport_LinkedEntities.TemplateExport_LinkedEntities_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.TemplateExportEntity AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TestFile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView723()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TestFile", @"
    SELECT VALUE -- Constructing TestFile
        [CodeFirstDatabaseSchema.TestFile](T1.TestFile_id, T1.TestFile_Name, T1.TestFile_idTemplateFile)
    FROM (
        SELECT 
            T.Id AS TestFile_id, 
            T.Name AS TestFile_Name, 
            T.IdTemplateFile AS TestFile_idTemplateFile, 
            True AS _from0
        FROM DataContext.TestFile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TestFile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView724()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TestFile", @"
    SELECT VALUE -- Constructing TestFile
        [Tests.TestFile](T1.TestFile_Id, T1.TestFile_Name, T1.TestFile_IdTemplateFile)
    FROM (
        SELECT 
            T.id AS TestFile_Id, 
            T.Name AS TestFile_Name, 
            T.idTemplateFile AS TestFile_IdTemplateFile, 
            True AS _from0
        FROM CodeFirstDatabase.TestFile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TableReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView725()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TableReport", @"
    SELECT VALUE -- Constructing TableReport
        [CodeFirstDatabaseSchema.TableReport](T1.TableReport_id, T1.TableReport_Name, T1.TableReport_Caption, T1.TableReport_Description, T1.TableReport_idSolutionProject, T1.TableReport_Sql, T1.TableReport_idParent)
    FROM (
        SELECT 
            T.Id AS TableReport_id, 
            T.Name AS TableReport_Name, 
            T.Caption AS TableReport_Caption, 
            T.Description AS TableReport_Description, 
            T.IdSolutionProject AS TableReport_idSolutionProject, 
            T.Sql AS TableReport_Sql, 
            T.IdParent AS TableReport_idParent, 
            True AS _from0
        FROM DataContext.TableReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TableReport_ColumnType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView726()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TableReport_ColumnType", @"
    SELECT VALUE -- Constructing TableReport_ColumnType
        [CodeFirstDatabaseSchema.TableReport_ColumnType](T1.[TableReport_ColumnType.id], T1.[TableReport_ColumnType.idOwner], T1.[TableReport_ColumnType.FieldName], T1.[TableReport_ColumnType.idEntityFieldType], T1.[TableReport_ColumnType.Precision])
    FROM (
        SELECT 
            T.Id AS [TableReport_ColumnType.id], 
            T.IdOwner AS [TableReport_ColumnType.idOwner], 
            T.FieldName AS [TableReport_ColumnType.FieldName], 
            T.IdEntityFieldType AS [TableReport_ColumnType.idEntityFieldType], 
            T.Precision AS [TableReport_ColumnType.Precision], 
            True AS _from0
        FROM DataContext.TableReport_ColumnType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TableReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView727()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TableReport", @"
    SELECT VALUE -- Constructing TableReport
        [Tests.TableReport](T1.TableReport_Id, T1.TableReport_Name, T1.TableReport_Caption, T1.TableReport_Description, T1.TableReport_IdSolutionProject, T1.TableReport_Sql, T1.TableReport_IdParent)
    FROM (
        SELECT 
            T.id AS TableReport_Id, 
            T.Name AS TableReport_Name, 
            T.Caption AS TableReport_Caption, 
            T.Description AS TableReport_Description, 
            T.idSolutionProject AS TableReport_IdSolutionProject, 
            T.Sql AS TableReport_Sql, 
            T.idParent AS TableReport_IdParent, 
            True AS _from0
        FROM CodeFirstDatabase.TableReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.TableReport_ColumnType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView728()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.TableReport_ColumnType", @"
    SELECT VALUE -- Constructing TableReport_ColumnType
        [Tests.TableReport_ColumnType](T1.[TableReport_ColumnType.Id], T1.[TableReport_ColumnType.IdOwner], T1.[TableReport_ColumnType.FieldName], T1.[TableReport_ColumnType.IdEntityFieldType], T1.[TableReport_ColumnType.Precision])
    FROM (
        SELECT 
            T.id AS [TableReport_ColumnType.Id], 
            T.idOwner AS [TableReport_ColumnType.IdOwner], 
            T.FieldName AS [TableReport_ColumnType.FieldName], 
            T.idEntityFieldType AS [TableReport_ColumnType.IdEntityFieldType], 
            T.Precision AS [TableReport_ColumnType.Precision], 
            True AS _from0
        FROM CodeFirstDatabase.TableReport_ColumnType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ProjectSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView729()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ProjectSettings", @"
    SELECT VALUE -- Constructing ProjectSettings
        [CodeFirstDatabaseSchema.ProjectSettings](T1.ProjectSettings_id, T1.ProjectSettings_Code, T1.ProjectSettings_Caption)
    FROM (
        SELECT 
            T.Id AS ProjectSettings_id, 
            T.Code AS ProjectSettings_Code, 
            T.Caption AS ProjectSettings_Caption, 
            True AS _from0
        FROM DataContext.ProjectSettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.ProjectSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView730()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.ProjectSettings", @"
    SELECT VALUE -- Constructing ProjectSettings
        [Tests.ProjectSettings](T1.ProjectSettings_Id, T1.ProjectSettings_Code, T1.ProjectSettings_Caption)
    FROM (
        SELECT 
            T.id AS ProjectSettings_Id, 
            T.Code AS ProjectSettings_Code, 
            T.Caption AS ProjectSettings_Caption, 
            True AS _from0
        FROM CodeFirstDatabase.ProjectSettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Filter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView731()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Filter", @"
    SELECT VALUE -- Constructing Filter
        [CodeFirstDatabaseSchema.Filter](T1.Filter_id, T1.Filter_Disabled, T1.Filter_idEntityField, T1.Filter_idLogicOperator, T1.Filter_Not, T1.Filter_idLeftEntityField, T1.Filter_idComparisionOperator, T1.Filter_RightValue, T1.Filter_idRightEntityField, T1.Filter_RightSqlExpression, T1.Filter_idParent, T1.Filter_Description, T1.Filter_WithParents)
    FROM (
        SELECT 
            T.Id AS Filter_id, 
            T.Disabled AS Filter_Disabled, 
            T.IdEntityField AS Filter_idEntityField, 
            T.IdLogicOperator AS Filter_idLogicOperator, 
            T.[Not] AS Filter_Not, 
            T.IdLeftEntityField AS Filter_idLeftEntityField, 
            T.IdComparisionOperator AS Filter_idComparisionOperator, 
            T.RightValue AS Filter_RightValue, 
            T.IdRightEntityField AS Filter_idRightEntityField, 
            T.RightSqlExpression AS Filter_RightSqlExpression, 
            T.IdParent AS Filter_idParent, 
            T.Description AS Filter_Description, 
            T.WithParents AS Filter_WithParents, 
            True AS _from0
        FROM DataContext.Filter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.Filter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView732()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.Filter", @"
    SELECT VALUE -- Constructing Filter
        [Tests.Filter](T1.Filter_Id, T1.Filter_Disabled, T1.Filter_IdEntityField, T1.Filter_IdLogicOperator, T1.Filter_Not, T1.Filter_IdLeftEntityField, T1.Filter_IdComparisionOperator, T1.Filter_RightValue, T1.Filter_IdRightEntityField, T1.Filter_RightSqlExpression, T1.Filter_IdParent, T1.Filter_Description, T1.Filter_WithParents)
    FROM (
        SELECT 
            T.id AS Filter_Id, 
            T.Disabled AS Filter_Disabled, 
            T.idEntityField AS Filter_IdEntityField, 
            T.idLogicOperator AS Filter_IdLogicOperator, 
            T.[Not] AS Filter_Not, 
            T.idLeftEntityField AS Filter_IdLeftEntityField, 
            T.idComparisionOperator AS Filter_IdComparisionOperator, 
            T.RightValue AS Filter_RightValue, 
            T.idRightEntityField AS Filter_IdRightEntityField, 
            T.RightSqlExpression AS Filter_RightSqlExpression, 
            T.idParent AS Filter_IdParent, 
            T.Description AS Filter_Description, 
            T.WithParents AS Filter_WithParents, 
            True AS _from0
        FROM CodeFirstDatabase.Filter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FileStore
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView733()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FileStore", @"
    SELECT VALUE -- Constructing FileStore
        [CodeFirstDatabaseSchema.FileStore](T1.FileStore_id, T1.FileStore_file)
    FROM (
        SELECT 
            T.Id AS FileStore_id, 
            T.File AS FileStore_file, 
            True AS _from0
        FROM DataContext.FileStore AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.FileLink
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView734()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.FileLink", @"
    SELECT VALUE -- Constructing FileLink
        [CodeFirstDatabaseSchema.FileLink](T1.FileLink_id, T1.FileLink_isDbStore, T1.FileLink_idFileStore, T1.FileLink_filePath, T1.FileLink_caption, T1.FileLink_description, T1.FileLink_Date, T1.FileLink_fileSize, T1.FileLink_extension)
    FROM (
        SELECT 
            T.Id AS FileLink_id, 
            T.IsDbStore AS FileLink_isDbStore, 
            T.IdFileStore AS FileLink_idFileStore, 
            T.FilePath AS FileLink_filePath, 
            T.Caption AS FileLink_caption, 
            T.Description AS FileLink_description, 
            T.Date AS FileLink_Date, 
            T.FileSize AS FileLink_fileSize, 
            T.Extension AS FileLink_extension, 
            True AS _from0
        FROM DataContext.FileLink AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FileStore
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView735()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FileStore", @"
    SELECT VALUE -- Constructing FileStore
        [Tests.FileStore](T1.FileStore_Id, T1.FileStore_File)
    FROM (
        SELECT 
            T.id AS FileStore_Id, 
            T.file AS FileStore_File, 
            True AS _from0
        FROM CodeFirstDatabase.FileStore AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataContext.FileLink
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView736()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataContext.FileLink", @"
    SELECT VALUE -- Constructing FileLink
        [Tests.FileLink](T1.FileLink_Id, T1.FileLink_IsDbStore, T1.FileLink_IdFileStore, T1.FileLink_FilePath, T1.FileLink_Caption, T1.FileLink_Description, T1.FileLink_Date, T1.FileLink_FileSize, T1.FileLink_Extension)
    FROM (
        SELECT 
            T.id AS FileLink_Id, 
            T.isDbStore AS FileLink_IsDbStore, 
            T.idFileStore AS FileLink_IdFileStore, 
            T.filePath AS FileLink_FilePath, 
            T.caption AS FileLink_Caption, 
            T.description AS FileLink_Description, 
            T.Date AS FileLink_Date, 
            T.fileSize AS FileLink_FileSize, 
            T.extension AS FileLink_Extension, 
            True AS _from0
        FROM CodeFirstDatabase.FileLink AS T
    ) AS T1");
        }
    }
}
