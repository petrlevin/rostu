<?xml version="1.0" encoding="utf-8"?>
<NewDataSet>
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="ref.Programmability" msdata:UseCurrentLocale="true">
      <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="ref.Programmability">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" type="xs:int" />
                <xs:element name="Schema">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="50" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="Name">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="100" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="CreateCommand">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="2147483647" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="idProgrammabilityType" type="xs:unsignedByte" />
                <xs:element name="Order" minOccurs="0">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:maxLength value="5" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:element>
                <xs:element name="idProject" type="xs:int" minOccurs="0" />
                <xs:element name="isDisabled" type="xs:boolean" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">
        <xs:selector xpath=".//ref.Programmability" />
        <xs:field xpath="id" />
      </xs:unique>
    </xs:element>
  </xs:schema>
  <ref.Programmability>
    <id>-1207959511</id>
    <Schema>reg</Schema>
    <Name>GetEstimatedLineCaption</Name>
    <CreateCommand>Create FUNCTION reg.GetEstimatedLineCaption 
(
	@idActivityBudgetaryType  int,
	@idExpenseObligationType  int,
	@idFinanceSource	      int,
	@idKFO					  int,
	@idKVSR					  int,
	@idRZPR				      int,
	@idKCSR					  int,
	@idKVR					  int,
	@idKOSGU				  int,
	@idDFK					  int,
	@idDKR					  int,
	@idDEK					  int,
	@idCodeSubsidy			  int,
	@idBranchCode			  int
)
RETURNS nvarchar(max)
AS
BEGIN
	
	DECLARE @result nvarchar(max);

	SELECT @result = ( (Case When ( ABT.Caption is not null ) Then 'Вид бюджетной деятельности ' + ABT.Caption Else '' End) 
					+ (Case When ( EOT.Caption is not null ) Then ', Тип РО ' + EOT.Caption Else '' End) 
					+ (Case When ( FS.Code is not null ) Then ', ИФ ' + FS.Code Else '' End) 
					+ (Case When ( KFO.Code is not null ) Then ', КФО ' + KFO.Code Else '' End) 
					+ (Case When ( KVSR.Caption is not null ) Then ', КВСР ' + KVSR.Caption Else '' End) 
					+ (Case When ( RZPR.Code is not null ) Then ', РЗПР ' + RZPR.Code Else '' End) 
					+ (Case When ( KCSR.Code is not null ) Then ', КЦСР ' + KCSR.Code Else '' End) 
					+ (Case When ( KVR.Code is not null ) Then ', КВР ' + KVR.Code Else '' End) 
					+ (Case When ( KOSGU.Code is not null ) Then ', КОСГУ ' + KOSGU.Code Else '' End) 
					+ (Case When ( DFK.Code is not null ) Then ', ДФК ' + DFK.Code Else '' End) 
					+ (Case When ( DKR.Code is not null ) Then ', ДКР ' + DKR.Code Else '' End) 
					+ (Case When ( DEK.Code is not null ) Then ', ДЭК ' + DEK.Code Else '' End) 
					+ (Case When ( CS.Code is not null ) Then ', Код субсидии ' + CS.Code Else '' End) 
					+ (Case When ( BC.Code is not null ) Then ', Отраслевой код ' + BC.Code Else '' End) )
				From 
					enm.ActivityBudgetaryType ABT 
					left join enm.ExpenseObligationType EOT on EOT.id = @idExpenseObligationType 
					left join ref.FinanceSource FS on FS.id = @idFinanceSource
					left join ref.KFO   KFO   on KFO.id   = @idKFO
					left join ref.KVSR  KVSR  on KVSR.id  = @idKVSR
					left join ref.RZPR  RZPR  on RZPR.id  = @idRZPR
					left join ref.KCSR  KCSR  on KCSR.id  = @idKCSR
					left join ref.KVR   KVR   on KVR.id   = @idKVR
					left join ref.KOSGU KOSGU on KOSGU.id = @idKOSGU
					left join ref.DFK   DFK   on DFK.id   = @idDFK
					left join ref.DKR   DKR   on DKR.id   = @idDKR
					left join ref.DEK   DEK   on DEK.id   = @idDEK
					left join ref.CodeSubsidy  CS  on CS.id  = @idCodeSubsidy
					left join ref.BranchCode BC on BC.id  = @idBranchCode
					where ABT.id = @idActivityBudgetaryType 
	
	RETURN @result
END
</CreateCommand>
    <idProgrammabilityType>2</idProgrammabilityType>
    <Order></Order>
    <idProject>100</idProject>
    <isDisabled>false</isDisabled>
  </ref.Programmability>
</NewDataSet>